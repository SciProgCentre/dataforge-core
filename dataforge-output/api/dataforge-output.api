public final class hep/dataforge/output/ConsoleOutputManager : hep/dataforge/context/AbstractPlugin, hep/dataforge/output/OutputManager {
	public static final field Companion Lhep/dataforge/output/ConsoleOutputManager$Companion;
	public fun <init> ()V
	public fun get (Lkotlin/reflect/KClass;Lhep/dataforge/names/Name;Lhep/dataforge/names/Name;Lhep/dataforge/meta/Meta;)Lhep/dataforge/output/Renderer;
	public fun getTag ()Lhep/dataforge/context/PluginTag;
}

public final class hep/dataforge/output/ConsoleOutputManager$Companion : hep/dataforge/context/PluginFactory {
	public fun getTag ()Lhep/dataforge/context/PluginTag;
	public fun getType ()Lkotlin/reflect/KClass;
	public fun invoke (Lhep/dataforge/meta/Meta;Lhep/dataforge/context/Context;)Lhep/dataforge/output/ConsoleOutputManager;
	public synthetic fun invoke (Lhep/dataforge/meta/Meta;Lhep/dataforge/context/Context;)Ljava/lang/Object;
}

public final class hep/dataforge/output/DefaultTextFormat : hep/dataforge/output/TextFormat {
	public static final field INSTANCE Lhep/dataforge/output/DefaultTextFormat;
	public fun getPriority ()I
	public fun getType ()Lkotlin/reflect/KClass;
	public fun render (Ljava/lang/Appendable;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class hep/dataforge/output/OutputJVMKt {
	public static final fun getOutput (Lkotlinx/coroutines/Dispatchers;)Lkotlinx/coroutines/CoroutineDispatcher;
}

public abstract interface class hep/dataforge/output/OutputManager {
	public abstract fun get (Lkotlin/reflect/KClass;Lhep/dataforge/names/Name;Lhep/dataforge/names/Name;Lhep/dataforge/meta/Meta;)Lhep/dataforge/output/Renderer;
}

public final class hep/dataforge/output/OutputManager$DefaultImpls {
	public static synthetic fun get$default (Lhep/dataforge/output/OutputManager;Lkotlin/reflect/KClass;Lhep/dataforge/names/Name;Lhep/dataforge/names/Name;Lhep/dataforge/meta/Meta;ILjava/lang/Object;)Lhep/dataforge/output/Renderer;
}

public final class hep/dataforge/output/OutputManagerKt {
	public static final fun getCONSOLE_RENDERER ()Lhep/dataforge/output/Renderer;
	public static final fun getOutput (Lhep/dataforge/context/Context;)Lhep/dataforge/output/OutputManager;
	public static final fun render (Lhep/dataforge/output/OutputManager;Ljava/lang/Object;Lhep/dataforge/names/Name;Lhep/dataforge/names/Name;Lhep/dataforge/meta/Meta;)V
	public static synthetic fun render$default (Lhep/dataforge/output/OutputManager;Ljava/lang/Object;Lhep/dataforge/names/Name;Lhep/dataforge/names/Name;Lhep/dataforge/meta/Meta;ILjava/lang/Object;)V
}

public abstract interface class hep/dataforge/output/Renderer : hep/dataforge/context/ContextAware {
	public abstract fun render (Ljava/lang/Object;Lhep/dataforge/meta/Meta;)V
}

public final class hep/dataforge/output/Renderer$DefaultImpls {
	public static fun getLogger (Lhep/dataforge/output/Renderer;)Lmu/KLogger;
	public static synthetic fun render$default (Lhep/dataforge/output/Renderer;Ljava/lang/Object;Lhep/dataforge/meta/Meta;ILjava/lang/Object;)V
}

public abstract interface class hep/dataforge/output/TextFormat {
	public static final field Companion Lhep/dataforge/output/TextFormat$Companion;
	public static final field TEXT_RENDERER_TYPE Ljava/lang/String;
	public abstract fun getPriority ()I
	public abstract fun getType ()Lkotlin/reflect/KClass;
	public abstract fun render (Ljava/lang/Appendable;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class hep/dataforge/output/TextFormat$Companion {
	public static final field TEXT_RENDERER_TYPE Ljava/lang/String;
}

public final class hep/dataforge/output/TextRenderer : hep/dataforge/output/Renderer {
	public fun <init> (Lhep/dataforge/context/Context;Ljava/lang/Appendable;)V
	public fun getContext ()Lhep/dataforge/context/Context;
	public fun getLogger ()Lmu/KLogger;
	public fun render (Ljava/lang/Object;Lhep/dataforge/meta/Meta;)V
}

