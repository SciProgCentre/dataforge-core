public abstract class space/kscience/dataforge/context/AbstractPlugin : space/kscience/dataforge/context/Plugin {
	public fun <init> ()V
	public fun <init> (Lspace/kscience/dataforge/meta/Meta;)V
	public synthetic fun <init> (Lspace/kscience/dataforge/meta/Meta;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun attach (Lspace/kscience/dataforge/context/Context;)V
	public final fun dependsOn ()Ljava/util/Map;
	public fun detach ()V
	public fun getContext ()Lspace/kscience/dataforge/context/Context;
	public fun getMeta ()Lspace/kscience/dataforge/meta/Meta;
	protected final fun require (Lspace/kscience/dataforge/context/PluginFactory;Lspace/kscience/dataforge/meta/Meta;)Lkotlin/properties/ReadOnlyProperty;
	public static synthetic fun require$default (Lspace/kscience/dataforge/context/AbstractPlugin;Lspace/kscience/dataforge/context/PluginFactory;Lspace/kscience/dataforge/meta/Meta;ILjava/lang/Object;)Lkotlin/properties/ReadOnlyProperty;
}

public final class space/kscience/dataforge/context/AbstractPluginKt {
	public static final fun toMap (Ljava/util/Collection;)Ljava/util/Map;
}

public final class space/kscience/dataforge/context/ClassLoaderPlugin : space/kscience/dataforge/context/AbstractPlugin {
	public static final field Companion Lspace/kscience/dataforge/context/ClassLoaderPlugin$Companion;
	public fun <init> (Ljava/lang/ClassLoader;)V
	public fun getTag ()Lspace/kscience/dataforge/context/PluginTag;
	public final fun services (Lkotlin/reflect/KClass;)Lkotlin/sequences/Sequence;
}

public final class space/kscience/dataforge/context/ClassLoaderPlugin$Companion {
	public final fun getDEFAULT ()Lspace/kscience/dataforge/context/ClassLoaderPlugin;
}

public final class space/kscience/dataforge/context/ClassLoaderPluginKt {
	public static final fun getClassLoaderPlugin (Lspace/kscience/dataforge/context/Context;)Lspace/kscience/dataforge/context/ClassLoaderPlugin;
}

public class space/kscience/dataforge/context/Context : kotlinx/coroutines/CoroutineScope, space/kscience/dataforge/meta/MetaRepr, space/kscience/dataforge/misc/Named, space/kscience/dataforge/provider/Provider {
	public static final field Companion Lspace/kscience/dataforge/context/Context$Companion;
	public static final field PROPERTY_TARGET Ljava/lang/String;
	public final fun buildContext (Lspace/kscience/dataforge/names/Name;Lkotlin/jvm/functions/Function1;)Lspace/kscience/dataforge/context/Context;
	public static synthetic fun buildContext$default (Lspace/kscience/dataforge/context/Context;Lspace/kscience/dataforge/names/Name;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lspace/kscience/dataforge/context/Context;
	public fun close ()V
	public fun content (Ljava/lang/String;)Ljava/util/Map;
	public final fun content (Ljava/lang/String;Z)Ljava/util/Map;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getDefaultTarget ()Ljava/lang/String;
	public final fun getName ()Lspace/kscience/dataforge/names/Name;
	public final fun getParent ()Lspace/kscience/dataforge/context/Context;
	public final fun getPlugins ()Lspace/kscience/dataforge/context/PluginManager;
	public final fun getProperties ()Lspace/kscience/dataforge/meta/Laminate;
	public fun toMeta ()Lspace/kscience/dataforge/meta/Meta;
}

public final class space/kscience/dataforge/context/Context$Companion {
}

public abstract interface class space/kscience/dataforge/context/ContextAware {
	public abstract fun getContext ()Lspace/kscience/dataforge/context/Context;
}

public final class space/kscience/dataforge/context/ContextBuilder {
	public final fun build ()Lspace/kscience/dataforge/context/Context;
	public final fun getName ()Lspace/kscience/dataforge/names/Name;
	public final fun plugin (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public final fun plugin (Lspace/kscience/dataforge/context/Plugin;)V
	public final fun plugin (Lspace/kscience/dataforge/context/PluginFactory;Lkotlin/jvm/functions/Function1;)V
	public final fun plugin (Lspace/kscience/dataforge/context/PluginFactory;Lspace/kscience/dataforge/meta/Meta;)V
	public final fun plugin (Lspace/kscience/dataforge/context/PluginTag;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun plugin$default (Lspace/kscience/dataforge/context/ContextBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun plugin$default (Lspace/kscience/dataforge/context/ContextBuilder;Lspace/kscience/dataforge/context/PluginFactory;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun plugin$default (Lspace/kscience/dataforge/context/ContextBuilder;Lspace/kscience/dataforge/context/PluginTag;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public final fun properties (Lkotlin/jvm/functions/Function1;)V
}

public final class space/kscience/dataforge/context/ContextBuilderKt {
}

public final class space/kscience/dataforge/context/DefaultLogManager : space/kscience/dataforge/context/AbstractPlugin, space/kscience/dataforge/context/LogManager {
	public static final field Companion Lspace/kscience/dataforge/context/DefaultLogManager$Companion;
	public fun <init> ()V
	public fun getDefaultLogger ()Lspace/kscience/dataforge/context/Logger;
	public fun getTag ()Lspace/kscience/dataforge/context/PluginTag;
	public fun logger (Lspace/kscience/dataforge/names/Name;)Lspace/kscience/dataforge/context/Logger;
}

public final class space/kscience/dataforge/context/DefaultLogManager$Companion : space/kscience/dataforge/context/PluginFactory {
	public fun getTag ()Lspace/kscience/dataforge/context/PluginTag;
	public fun getType ()Lkotlin/reflect/KClass;
	public synthetic fun invoke (Lspace/kscience/dataforge/meta/Meta;Lspace/kscience/dataforge/context/Context;)Ljava/lang/Object;
	public fun invoke (Lspace/kscience/dataforge/meta/Meta;Lspace/kscience/dataforge/context/Context;)Lspace/kscience/dataforge/context/DefaultLogManager;
}

public abstract interface class space/kscience/dataforge/context/Factory {
	public abstract fun invoke (Lspace/kscience/dataforge/meta/Meta;Lspace/kscience/dataforge/context/Context;)Ljava/lang/Object;
	public static synthetic fun invoke$default (Lspace/kscience/dataforge/context/Factory;Lspace/kscience/dataforge/meta/Meta;Lspace/kscience/dataforge/context/Context;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class space/kscience/dataforge/context/GlobalKt {
	public static final fun Context (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lspace/kscience/dataforge/context/Context;
	public static synthetic fun Context$default (Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lspace/kscience/dataforge/context/Context;
	public static final fun getGlobal ()Lspace/kscience/dataforge/context/Context;
}

public abstract interface class space/kscience/dataforge/context/LogManager : space/kscience/dataforge/context/Logger, space/kscience/dataforge/context/Plugin {
	public static final field Companion Lspace/kscience/dataforge/context/LogManager$Companion;
	public static final field DEBUG Ljava/lang/String;
	public static final field ERROR Ljava/lang/String;
	public static final field INFO Ljava/lang/String;
	public static final field TRACE Ljava/lang/String;
	public static final field WARNING Ljava/lang/String;
	public abstract fun getDefaultLogger ()Lspace/kscience/dataforge/context/Logger;
	public fun log (Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
	public fun log (Lspace/kscience/dataforge/names/Name;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
	public abstract fun logger (Lspace/kscience/dataforge/names/Name;)Lspace/kscience/dataforge/context/Logger;
}

public final class space/kscience/dataforge/context/LogManager$Companion {
	public static final field DEBUG Ljava/lang/String;
	public static final field ERROR Ljava/lang/String;
	public static final field INFO Ljava/lang/String;
	public static final field TRACE Ljava/lang/String;
	public static final field WARNING Ljava/lang/String;
}

public final class space/kscience/dataforge/context/LogManagerKt {
	public static final fun debug (Lspace/kscience/dataforge/context/Logger;Lkotlin/jvm/functions/Function0;)V
	public static final fun error (Lspace/kscience/dataforge/context/Logger;Ljava/lang/Throwable;Lkotlin/jvm/functions/Function0;)V
	public static final fun error (Lspace/kscience/dataforge/context/Logger;Lkotlin/jvm/functions/Function0;)V
	public static final fun getLogger (Lspace/kscience/dataforge/context/Context;)Lspace/kscience/dataforge/context/LogManager;
	public static final fun getLogger (Lspace/kscience/dataforge/context/ContextAware;)Lspace/kscience/dataforge/context/Logger;
	public static final fun info (Lspace/kscience/dataforge/context/Logger;Lkotlin/jvm/functions/Function0;)V
	public static final fun trace (Lspace/kscience/dataforge/context/Logger;Lkotlin/jvm/functions/Function0;)V
	public static final fun warn (Lspace/kscience/dataforge/context/Logger;Lkotlin/jvm/functions/Function0;)V
}

public abstract interface class space/kscience/dataforge/context/Logger {
	public abstract fun log (Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
}

public abstract interface class space/kscience/dataforge/context/Plugin : space/kscience/dataforge/context/ContextAware, space/kscience/dataforge/meta/MetaRepr, space/kscience/dataforge/misc/Named, space/kscience/dataforge/provider/Provider {
	public static final field Companion Lspace/kscience/dataforge/context/Plugin$Companion;
	public static final field TARGET Ljava/lang/String;
	public abstract fun attach (Lspace/kscience/dataforge/context/Context;)V
	public abstract fun dependsOn ()Ljava/util/Map;
	public abstract fun detach ()V
	public abstract fun getMeta ()Lspace/kscience/dataforge/meta/Meta;
	public fun getName ()Lspace/kscience/dataforge/names/Name;
	public abstract fun getTag ()Lspace/kscience/dataforge/context/PluginTag;
	public fun toMeta ()Lspace/kscience/dataforge/meta/Meta;
}

public final class space/kscience/dataforge/context/Plugin$Companion {
	public static final field TARGET Ljava/lang/String;
}

public abstract interface class space/kscience/dataforge/context/PluginFactory : space/kscience/dataforge/context/Factory {
	public static final field Companion Lspace/kscience/dataforge/context/PluginFactory$Companion;
	public static final field TYPE Ljava/lang/String;
	public abstract fun getTag ()Lspace/kscience/dataforge/context/PluginTag;
	public abstract fun getType ()Lkotlin/reflect/KClass;
}

public final class space/kscience/dataforge/context/PluginFactory$Companion {
	public static final field TYPE Ljava/lang/String;
}

public final class space/kscience/dataforge/context/PluginManager : java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker, space/kscience/dataforge/context/ContextAware {
	public final fun find (ZLkotlin/jvm/functions/Function1;)Lspace/kscience/dataforge/context/Plugin;
	public static synthetic fun find$default (Lspace/kscience/dataforge/context/PluginManager;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lspace/kscience/dataforge/context/Plugin;
	public final fun get (Lkotlin/reflect/KClass;Lspace/kscience/dataforge/context/PluginTag;Z)Ljava/lang/Object;
	public final fun get (Lspace/kscience/dataforge/context/PluginTag;Z)Lspace/kscience/dataforge/context/Plugin;
	public static synthetic fun get$default (Lspace/kscience/dataforge/context/PluginManager;Lkotlin/reflect/KClass;Lspace/kscience/dataforge/context/PluginTag;ZILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun get$default (Lspace/kscience/dataforge/context/PluginManager;Lspace/kscience/dataforge/context/PluginTag;ZILjava/lang/Object;)Lspace/kscience/dataforge/context/Plugin;
	public fun getContext ()Lspace/kscience/dataforge/context/Context;
	public fun iterator ()Ljava/util/Iterator;
	public final fun list (Z)Ljava/util/Collection;
}

public final class space/kscience/dataforge/context/PluginTag : space/kscience/dataforge/meta/MetaRepr {
	public static final field Companion Lspace/kscience/dataforge/context/PluginTag$Companion;
	public static final field DATAFORGE_GROUP Ljava/lang/String;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lspace/kscience/dataforge/context/PluginTag;
	public static synthetic fun copy$default (Lspace/kscience/dataforge/context/PluginTag;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lspace/kscience/dataforge/context/PluginTag;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGroup ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun matches (Lspace/kscience/dataforge/context/PluginTag;)Z
	public fun toMeta ()Lspace/kscience/dataforge/meta/Meta;
	public fun toString ()Ljava/lang/String;
}

public final class space/kscience/dataforge/context/PluginTag$Companion {
	public final fun fromString (Ljava/lang/String;)Lspace/kscience/dataforge/context/PluginTag;
}

public final class space/kscience/dataforge/context/ResolveKt {
	public static final fun gather (Lspace/kscience/dataforge/context/Context;Ljava/lang/String;Lkotlin/reflect/KClass;Z)Ljava/util/Map;
	public static synthetic fun gather$default (Lspace/kscience/dataforge/context/Context;Ljava/lang/String;Lkotlin/reflect/KClass;ZILjava/lang/Object;)Ljava/util/Map;
	public static synthetic fun gatherInSequence$default (Lspace/kscience/dataforge/context/Context;Ljava/lang/String;Lkotlin/reflect/KClass;ZILjava/lang/Object;)Lkotlin/sequences/Sequence;
	public static final fun getValues (Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;
	public static final fun resolve (Lspace/kscience/dataforge/context/Context;Ljava/lang/String;Lspace/kscience/dataforge/names/Name;Lkotlin/reflect/KClass;)Ljava/lang/Object;
}

public final class space/kscience/dataforge/context/SlfLogManager : space/kscience/dataforge/context/AbstractPlugin, space/kscience/dataforge/context/LogManager {
	public static final field Companion Lspace/kscience/dataforge/context/SlfLogManager$Companion;
	public fun <init> ()V
	public fun getDefaultLogger ()Lspace/kscience/dataforge/context/Logger;
	public fun getTag ()Lspace/kscience/dataforge/context/PluginTag;
	public fun logger (Lspace/kscience/dataforge/names/Name;)Lspace/kscience/dataforge/context/Logger;
}

public final class space/kscience/dataforge/context/SlfLogManager$Companion : space/kscience/dataforge/context/PluginFactory {
	public fun getTag ()Lspace/kscience/dataforge/context/PluginTag;
	public fun getType ()Lkotlin/reflect/KClass;
	public synthetic fun invoke (Lspace/kscience/dataforge/meta/Meta;Lspace/kscience/dataforge/context/Context;)Ljava/lang/Object;
	public fun invoke (Lspace/kscience/dataforge/meta/Meta;Lspace/kscience/dataforge/context/Context;)Lspace/kscience/dataforge/context/SlfLogManager;
}

public final class space/kscience/dataforge/properties/PropertyKt {
}

public final class space/kscience/dataforge/properties/SchemePropertyKt {
}

public final class space/kscience/dataforge/provider/DfTypeKt {
	public static final fun getDfType (Lkotlin/reflect/KClass;)Ljava/lang/String;
}

public final class space/kscience/dataforge/provider/Path : java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lspace/kscience/dataforge/provider/Path$Companion;
	public static final field PATH_SEGMENT_SEPARATOR Ljava/lang/String;
	public static final synthetic fun box-impl (Ljava/util/List;)Lspace/kscience/dataforge/provider/Path;
	public static fun constructor-impl (Ljava/util/List;)Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/util/List;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/util/List;Ljava/util/List;)Z
	public final fun getTokens ()Ljava/util/List;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/util/List;)I
	public fun iterator ()Ljava/util/Iterator;
	public static fun iterator-impl (Ljava/util/List;)Ljava/util/Iterator;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/util/List;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/util/List;
}

public final class space/kscience/dataforge/provider/Path$Companion {
	public final fun parse-X5wN5Vs (Ljava/lang/String;)Ljava/util/List;
}

public final class space/kscience/dataforge/provider/PathKt {
	public static final fun Path ([Lkotlin/Pair;)Ljava/util/List;
	public static final fun Path ([Lspace/kscience/dataforge/names/Name;)Ljava/util/List;
	public static final fun asPath (Lspace/kscience/dataforge/names/Name;Ljava/lang/String;)Ljava/util/List;
	public static final fun asPath (Lspace/kscience/dataforge/provider/PathToken;)Ljava/util/List;
	public static synthetic fun asPath$default (Lspace/kscience/dataforge/names/Name;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/List;
	public static final fun getHead-LGjlSZY (Ljava/util/List;)Lspace/kscience/dataforge/provider/PathToken;
	public static final fun getLength-LGjlSZY (Ljava/util/List;)I
	public static final fun getTail-LGjlSZY (Ljava/util/List;)Ljava/util/List;
	public static final fun plus-sn2Gq0g (Ljava/util/List;Ljava/util/List;)Ljava/util/List;
}

public final class space/kscience/dataforge/provider/PathToken {
	public static final field Companion Lspace/kscience/dataforge/provider/PathToken$Companion;
	public static final field TARGET_SEPARATOR Ljava/lang/String;
	public fun <init> (Lspace/kscience/dataforge/names/Name;Ljava/lang/String;)V
	public synthetic fun <init> (Lspace/kscience/dataforge/names/Name;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lspace/kscience/dataforge/names/Name;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Lspace/kscience/dataforge/names/Name;Ljava/lang/String;)Lspace/kscience/dataforge/provider/PathToken;
	public static synthetic fun copy$default (Lspace/kscience/dataforge/provider/PathToken;Lspace/kscience/dataforge/names/Name;Ljava/lang/String;ILjava/lang/Object;)Lspace/kscience/dataforge/provider/PathToken;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Lspace/kscience/dataforge/names/Name;
	public final fun getTarget ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class space/kscience/dataforge/provider/PathToken$Companion {
	public final fun parse (Ljava/lang/String;)Lspace/kscience/dataforge/provider/PathToken;
}

public abstract interface class space/kscience/dataforge/provider/Provider {
	public fun content (Ljava/lang/String;)Ljava/util/Map;
	public fun getDefaultChainTarget ()Ljava/lang/String;
	public fun getDefaultTarget ()Ljava/lang/String;
}

public final class space/kscience/dataforge/provider/ProviderKt {
	public static final fun provide-CSkoCSg (Lspace/kscience/dataforge/provider/Provider;Ljava/util/List;Ljava/lang/String;)Ljava/lang/Object;
	public static synthetic fun provide-CSkoCSg$default (Lspace/kscience/dataforge/provider/Provider;Ljava/util/List;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun top (Lspace/kscience/dataforge/provider/Provider;Ljava/lang/String;Lkotlin/reflect/KClass;)Ljava/util/Map;
}

