[{"name":"ERROR()","description":"space.kscience.dataforge.data.GoalExecutionRestrictionPolicy.ERROR","location":"dataforge-data/space.kscience.dataforge.data/-goal-execution-restriction-policy/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR()","space.kscience.dataforge.data.GoalExecutionRestrictionPolicy.ERROR"]},{"name":"NONE()","description":"space.kscience.dataforge.data.GoalExecutionRestrictionPolicy.NONE","location":"dataforge-data/space.kscience.dataforge.data/-goal-execution-restriction-policy/-n-o-n-e/index.html","searchKeys":["NONE","NONE()","space.kscience.dataforge.data.GoalExecutionRestrictionPolicy.NONE"]},{"name":"WARNING()","description":"space.kscience.dataforge.data.GoalExecutionRestrictionPolicy.WARNING","location":"dataforge-data/space.kscience.dataforge.data/-goal-execution-restriction-policy/-w-a-r-n-i-n-g/index.html","searchKeys":["WARNING","WARNING()","space.kscience.dataforge.data.GoalExecutionRestrictionPolicy.WARNING"]},{"name":"abstract class CachingAction<in T : Any, out R : Any>(outputType: KType) : Action<T, R> ","description":"space.kscience.dataforge.data.CachingAction","location":"dataforge-data/space.kscience.dataforge.data/-caching-action/index.html","searchKeys":["CachingAction","abstract class CachingAction<in T : Any, out R : Any>(outputType: KType) : Action<T, R> ","space.kscience.dataforge.data.CachingAction"]},{"name":"abstract fun async(coroutineScope: CoroutineScope): Deferred<T>","description":"space.kscience.dataforge.data.Goal.async","location":"dataforge-data/space.kscience.dataforge.data/-goal/async.html","searchKeys":["async","abstract fun async(coroutineScope: CoroutineScope): Deferred<T>","space.kscience.dataforge.data.Goal.async"]},{"name":"abstract fun emit(vararg tags: String, message: suspend () -> String)","description":"space.kscience.dataforge.data.GoalLogger.emit","location":"dataforge-data/space.kscience.dataforge.data/-goal-logger/emit.html","searchKeys":["emit","abstract fun emit(vararg tags: String, message: suspend () -> String)","space.kscience.dataforge.data.GoalLogger.emit"]},{"name":"abstract fun flowData(): Flow<NamedData<T>>","description":"space.kscience.dataforge.data.DataSet.flowData","location":"dataforge-data/space.kscience.dataforge.data/-data-set/flow-data.html","searchKeys":["flowData","abstract fun flowData(): Flow<NamedData<T>>","space.kscience.dataforge.data.DataSet.flowData"]},{"name":"abstract fun reset()","description":"space.kscience.dataforge.data.Goal.reset","location":"dataforge-data/space.kscience.dataforge.data/-goal/reset.html","searchKeys":["reset","abstract fun reset()","space.kscience.dataforge.data.Goal.reset"]},{"name":"abstract override val name: Name","description":"space.kscience.dataforge.data.NamedData.name","location":"dataforge-data/space.kscience.dataforge.data/-named-data/name.html","searchKeys":["name","abstract override val name: Name","space.kscience.dataforge.data.NamedData.name"]},{"name":"abstract suspend fun <T : Any> gather(set: DataSet<T>): Map<String, DataSet<T>>","description":"space.kscience.dataforge.data.GroupRule.gather","location":"dataforge-data/space.kscience.dataforge.data/-group-rule/gather.html","searchKeys":["gather","abstract suspend fun <T : Any> gather(set: DataSet<T>): Map<String, DataSet<T>>","space.kscience.dataforge.data.GroupRule.gather"]},{"name":"abstract suspend fun emit(name: Name, data: Data<T>?)","description":"space.kscience.dataforge.data.DataSetBuilder.emit","location":"dataforge-data/space.kscience.dataforge.data/-data-set-builder/emit.html","searchKeys":["emit","abstract suspend fun emit(name: Name, data: Data<T>?)","space.kscience.dataforge.data.DataSetBuilder.emit"]},{"name":"abstract suspend fun execute(dataSet: DataSet<T>, meta: Meta = Meta.EMPTY, scope: CoroutineScope? = null): DataSet<R>","description":"space.kscience.dataforge.actions.Action.execute","location":"dataforge-data/space.kscience.dataforge.actions/-action/execute.html","searchKeys":["execute","abstract suspend fun execute(dataSet: DataSet<T>, meta: Meta = Meta.EMPTY, scope: CoroutineScope? = null): DataSet<R>","space.kscience.dataforge.actions.Action.execute"]},{"name":"abstract suspend fun getData(name: Name): Data<T>?","description":"space.kscience.dataforge.data.DataSet.getData","location":"dataforge-data/space.kscience.dataforge.data/-data-set/get-data.html","searchKeys":["getData","abstract suspend fun getData(name: Name): Data<T>?","space.kscience.dataforge.data.DataSet.getData"]},{"name":"abstract suspend fun items(): Map<NameToken, DataTreeItem<T>>","description":"space.kscience.dataforge.data.DataTree.items","location":"dataforge-data/space.kscience.dataforge.data/-data-tree/items.html","searchKeys":["items","abstract suspend fun items(): Map<NameToken, DataTreeItem<T>>","space.kscience.dataforge.data.DataTree.items"]},{"name":"abstract suspend fun remove(name: Name)","description":"space.kscience.dataforge.data.DataSetBuilder.remove","location":"dataforge-data/space.kscience.dataforge.data/-data-set-builder/remove.html","searchKeys":["remove","abstract suspend fun remove(name: Name)","space.kscience.dataforge.data.DataSetBuilder.remove"]},{"name":"abstract val data: Data<T>","description":"space.kscience.dataforge.data.NamedData.data","location":"dataforge-data/space.kscience.dataforge.data/-named-data/data.html","searchKeys":["data","abstract val data: Data<T>","space.kscience.dataforge.data.NamedData.data"]},{"name":"abstract val dataType: KType","description":"space.kscience.dataforge.data.DataSet.dataType","location":"dataforge-data/space.kscience.dataforge.data/-data-set/data-type.html","searchKeys":["dataType","abstract val dataType: KType","space.kscience.dataforge.data.DataSet.dataType"]},{"name":"abstract val dataType: KType","description":"space.kscience.dataforge.data.DataSetBuilder.dataType","location":"dataforge-data/space.kscience.dataforge.data/-data-set-builder/data-type.html","searchKeys":["dataType","abstract val dataType: KType","space.kscience.dataforge.data.DataSetBuilder.dataType"]},{"name":"abstract val deferred: Deferred<T>?","description":"space.kscience.dataforge.data.Goal.deferred","location":"dataforge-data/space.kscience.dataforge.data/-goal/deferred.html","searchKeys":["deferred","abstract val deferred: Deferred<T>?","space.kscience.dataforge.data.Goal.deferred"]},{"name":"abstract val dependencies: Collection<Goal<*>>","description":"space.kscience.dataforge.data.Goal.dependencies","location":"dataforge-data/space.kscience.dataforge.data/-goal/dependencies.html","searchKeys":["dependencies","abstract val dependencies: Collection<Goal<*>>","space.kscience.dataforge.data.Goal.dependencies"]},{"name":"abstract val meta: Meta","description":"space.kscience.dataforge.data.Data.meta","location":"dataforge-data/space.kscience.dataforge.data/-data/meta.html","searchKeys":["meta","abstract val meta: Meta","space.kscience.dataforge.data.Data.meta"]},{"name":"abstract val type: KType","description":"space.kscience.dataforge.data.Data.type","location":"dataforge-data/space.kscience.dataforge.data/-data/type.html","searchKeys":["type","abstract val type: KType","space.kscience.dataforge.data.Data.type"]},{"name":"abstract val updates: Flow<Name>","description":"space.kscience.dataforge.data.ActiveDataSet.updates","location":"dataforge-data/space.kscience.dataforge.data/-active-data-set/updates.html","searchKeys":["updates","abstract val updates: Flow<Name>","space.kscience.dataforge.data.ActiveDataSet.updates"]},{"name":"class ActiveDataTree<T : Any>(dataType: KType) : DataTree<T> , DataSetBuilder<T> , ActiveDataSet<T> ","description":"space.kscience.dataforge.data.ActiveDataTree","location":"dataforge-data/space.kscience.dataforge.data/-active-data-tree/index.html","searchKeys":["ActiveDataTree","class ActiveDataTree<T : Any>(dataType: KType) : DataTree<T> , DataSetBuilder<T> , ActiveDataSet<T> ","space.kscience.dataforge.data.ActiveDataTree"]},{"name":"class CoroutineMonitor : CoroutineContext.Element","description":"space.kscience.dataforge.data.CoroutineMonitor","location":"dataforge-data/space.kscience.dataforge.data/-coroutine-monitor/index.html","searchKeys":["CoroutineMonitor","class CoroutineMonitor : CoroutineContext.Element","space.kscience.dataforge.data.CoroutineMonitor"]},{"name":"class Dependencies(values: Collection<Job>) : CoroutineContext.Element","description":"space.kscience.dataforge.data.Dependencies","location":"dataforge-data/space.kscience.dataforge.data/-dependencies/index.html","searchKeys":["Dependencies","class Dependencies(values: Collection<Job>) : CoroutineContext.Element","space.kscience.dataforge.data.Dependencies"]},{"name":"class FragmentRule<T : Any, R : Any>(name: Name, meta: MutableMeta)","description":"space.kscience.dataforge.actions.SplitBuilder.FragmentRule","location":"dataforge-data/space.kscience.dataforge.actions/-split-builder/-fragment-rule/index.html","searchKeys":["FragmentRule","class FragmentRule<T : Any, R : Any>(name: Name, meta: MutableMeta)","space.kscience.dataforge.actions.SplitBuilder.FragmentRule"]},{"name":"class GoalExecutionRestriction(policy: GoalExecutionRestrictionPolicy) : CoroutineContext.Element","description":"space.kscience.dataforge.data.GoalExecutionRestriction","location":"dataforge-data/space.kscience.dataforge.data/-goal-execution-restriction/index.html","searchKeys":["GoalExecutionRestriction","class GoalExecutionRestriction(policy: GoalExecutionRestrictionPolicy) : CoroutineContext.Element","space.kscience.dataforge.data.GoalExecutionRestriction"]},{"name":"class JoinGroup<T : Any, R : Any>(name: String, set: DataSet<T>)","description":"space.kscience.dataforge.actions.JoinGroup","location":"dataforge-data/space.kscience.dataforge.actions/-join-group/index.html","searchKeys":["JoinGroup","class JoinGroup<T : Any, R : Any>(name: String, set: DataSet<T>)","space.kscience.dataforge.actions.JoinGroup"]},{"name":"class Leaf<out T : Any>(data: Data<T>) : DataTreeItem<T> ","description":"space.kscience.dataforge.data.DataTreeItem.Leaf","location":"dataforge-data/space.kscience.dataforge.data/-data-tree-item/-leaf/index.html","searchKeys":["Leaf","class Leaf<out T : Any>(data: Data<T>) : DataTreeItem<T> ","space.kscience.dataforge.data.DataTreeItem.Leaf"]},{"name":"class MapActionBuilder<T, R>(name: Name, meta: MutableMeta, actionMeta: Meta)","description":"space.kscience.dataforge.actions.MapActionBuilder","location":"dataforge-data/space.kscience.dataforge.actions/-map-action-builder/index.html","searchKeys":["MapActionBuilder","class MapActionBuilder<T, R>(name: Name, meta: MutableMeta, actionMeta: Meta)","space.kscience.dataforge.actions.MapActionBuilder"]},{"name":"class Node<out T : Any>(tree: DataTree<T>) : DataTreeItem<T> ","description":"space.kscience.dataforge.data.DataTreeItem.Node","location":"dataforge-data/space.kscience.dataforge.data/-data-tree-item/-node/index.html","searchKeys":["Node","class Node<out T : Any>(tree: DataTree<T>) : DataTreeItem<T> ","space.kscience.dataforge.data.DataTreeItem.Node"]},{"name":"class ReduceGroupBuilder<T : Any, R : Any>(inputType: KType, scope: CoroutineScope, actionMeta: Meta)","description":"space.kscience.dataforge.actions.ReduceGroupBuilder","location":"dataforge-data/space.kscience.dataforge.actions/-reduce-group-builder/index.html","searchKeys":["ReduceGroupBuilder","class ReduceGroupBuilder<T : Any, R : Any>(inputType: KType, scope: CoroutineScope, actionMeta: Meta)","space.kscience.dataforge.actions.ReduceGroupBuilder"]},{"name":"class SplitBuilder<T : Any, R : Any>(name: Name, meta: Meta)","description":"space.kscience.dataforge.actions.SplitBuilder","location":"dataforge-data/space.kscience.dataforge.actions/-split-builder/index.html","searchKeys":["SplitBuilder","class SplitBuilder<T : Any, R : Any>(name: Name, meta: Meta)","space.kscience.dataforge.actions.SplitBuilder"]},{"name":"class StaticData<T : Any>(type: KType, value: T, meta: Meta) : StaticGoal<T> , Data<T> ","description":"space.kscience.dataforge.data.StaticData","location":"dataforge-data/space.kscience.dataforge.data/-static-data/index.html","searchKeys":["StaticData","class StaticData<T : Any>(type: KType, value: T, meta: Meta) : StaticGoal<T> , Data<T> ","space.kscience.dataforge.data.StaticData"]},{"name":"const val TYPE: String","description":"space.kscience.dataforge.data.Data.Companion.TYPE","location":"dataforge-data/space.kscience.dataforge.data/-data/-companion/-t-y-p-e.html","searchKeys":["TYPE","const val TYPE: String","space.kscience.dataforge.data.Data.Companion.TYPE"]},{"name":"const val TYPE: String","description":"space.kscience.dataforge.data.DataTree.Companion.TYPE","location":"dataforge-data/space.kscience.dataforge.data/-data-tree/-companion/-t-y-p-e.html","searchKeys":["TYPE","const val TYPE: String","space.kscience.dataforge.data.DataTree.Companion.TYPE"]},{"name":"const val WARNING_TAG: String","description":"space.kscience.dataforge.data.GoalLogger.Companion.WARNING_TAG","location":"dataforge-data/space.kscience.dataforge.data/-goal-logger/-companion/-w-a-r-n-i-n-g_-t-a-g.html","searchKeys":["WARNING_TAG","const val WARNING_TAG: String","space.kscience.dataforge.data.GoalLogger.Companion.WARNING_TAG"]},{"name":"data class ActionEnv(name: Name, meta: Meta, actionMeta: Meta)","description":"space.kscience.dataforge.actions.ActionEnv","location":"dataforge-data/space.kscience.dataforge.actions/-action-env/index.html","searchKeys":["ActionEnv","data class ActionEnv(name: Name, meta: Meta, actionMeta: Meta)","space.kscience.dataforge.actions.ActionEnv"]},{"name":"enum GoalExecutionRestrictionPolicy : Enum<GoalExecutionRestrictionPolicy> ","description":"space.kscience.dataforge.data.GoalExecutionRestrictionPolicy","location":"dataforge-data/space.kscience.dataforge.data/-goal-execution-restriction-policy/index.html","searchKeys":["GoalExecutionRestrictionPolicy","enum GoalExecutionRestrictionPolicy : Enum<GoalExecutionRestrictionPolicy> ","space.kscience.dataforge.data.GoalExecutionRestrictionPolicy"]},{"name":"fun <K, T : Any, R : Any> Map<K, Data<T>>.reduceToData(outputType: KType, coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = Meta.EMPTY, block: suspend (Map<K, T>) -> R): Data<R>","description":"space.kscience.dataforge.data.reduceToData","location":"dataforge-data/space.kscience.dataforge.data/reduce-to-data.html","searchKeys":["reduceToData","fun <K, T : Any, R : Any> Map<K, Data<T>>.reduceToData(outputType: KType, coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = Meta.EMPTY, block: suspend (Map<K, T>) -> R): Data<R>","space.kscience.dataforge.data.reduceToData"]},{"name":"fun <R : Any> DataSet<*>.select(type: KType, namePattern: Name? = null, filter: (name: Name, meta: Meta) -> Boolean = { _, _ -> true }): ActiveDataSet<R>","description":"space.kscience.dataforge.data.select","location":"dataforge-data/space.kscience.dataforge.data/select.html","searchKeys":["select","fun <R : Any> DataSet<*>.select(type: KType, namePattern: Name? = null, filter: (name: Name, meta: Meta) -> Boolean = { _, _ -> true }): ActiveDataSet<R>","space.kscience.dataforge.data.select"]},{"name":"fun <T : Any> Data(type: KType, meta: Meta = Meta.EMPTY, context: CoroutineContext = EmptyCoroutineContext, dependencies: Collection<Data<*>> = emptyList(), block: suspend () -> T): Data<T>","description":"space.kscience.dataforge.data.Data","location":"dataforge-data/space.kscience.dataforge.data/-data.html","searchKeys":["Data","fun <T : Any> Data(type: KType, meta: Meta = Meta.EMPTY, context: CoroutineContext = EmptyCoroutineContext, dependencies: Collection<Data<*>> = emptyList(), block: suspend () -> T): Data<T>","space.kscience.dataforge.data.Data"]},{"name":"fun <T : Any> Data<T>.named(name: Name): NamedData<T>","description":"space.kscience.dataforge.data.named","location":"dataforge-data/space.kscience.dataforge.data/named.html","searchKeys":["named","fun <T : Any> Data<T>.named(name: Name): NamedData<T>","space.kscience.dataforge.data.named"]},{"name":"fun <T : Any> DataSet<T>.branch(branchName: Name): DataSet<T>","description":"space.kscience.dataforge.data.branch","location":"dataforge-data/space.kscience.dataforge.data/branch.html","searchKeys":["branch","fun <T : Any> DataSet<T>.branch(branchName: Name): DataSet<T>","space.kscience.dataforge.data.branch"]},{"name":"fun <T : Any> DataSet<T>.branch(branchName: String): DataSet<T>","description":"space.kscience.dataforge.data.branch","location":"dataforge-data/space.kscience.dataforge.data/branch.html","searchKeys":["branch","fun <T : Any> DataSet<T>.branch(branchName: String): DataSet<T>","space.kscience.dataforge.data.branch"]},{"name":"fun <T : Any> DataSet<T>.filter(predicate: suspend (Name, Data<T>) -> Boolean): ActiveDataSet<T>","description":"space.kscience.dataforge.data.filter","location":"dataforge-data/space.kscience.dataforge.data/filter.html","searchKeys":["filter","fun <T : Any> DataSet<T>.filter(predicate: suspend (Name, Data<T>) -> Boolean): ActiveDataSet<T>","space.kscience.dataforge.data.filter"]},{"name":"fun <T : Any> DataSet<T>.flowChildren(branchName: Name): Flow<NamedData<T>>","description":"space.kscience.dataforge.data.flowChildren","location":"dataforge-data/space.kscience.dataforge.data/flow-children.html","searchKeys":["flowChildren","fun <T : Any> DataSet<T>.flowChildren(branchName: Name): Flow<NamedData<T>>","space.kscience.dataforge.data.flowChildren"]},{"name":"fun <T : Any> DataSet<T>.startAll(coroutineScope: CoroutineScope): Job","description":"space.kscience.dataforge.data.startAll","location":"dataforge-data/space.kscience.dataforge.data/start-all.html","searchKeys":["startAll","fun <T : Any> DataSet<T>.startAll(coroutineScope: CoroutineScope): Job","space.kscience.dataforge.data.startAll"]},{"name":"fun <T : Any> DataSet<T>.withNamePrefix(prefix: Name): DataSet<T>","description":"space.kscience.dataforge.data.withNamePrefix","location":"dataforge-data/space.kscience.dataforge.data/with-name-prefix.html","searchKeys":["withNamePrefix","fun <T : Any> DataSet<T>.withNamePrefix(prefix: Name): DataSet<T>","space.kscience.dataforge.data.withNamePrefix"]},{"name":"fun <T : Any> DataTree<T>.branch(branchName: Name): DataTree<T>","description":"space.kscience.dataforge.data.branch","location":"dataforge-data/space.kscience.dataforge.data/branch.html","searchKeys":["branch","fun <T : Any> DataTree<T>.branch(branchName: Name): DataTree<T>","space.kscience.dataforge.data.branch"]},{"name":"fun <T : Any> DataTree<T>.itemFlow(): Flow<Pair<Name, DataTreeItem<T>>>","description":"space.kscience.dataforge.data.itemFlow","location":"dataforge-data/space.kscience.dataforge.data/item-flow.html","searchKeys":["itemFlow","fun <T : Any> DataTree<T>.itemFlow(): Flow<Pair<Name, DataTreeItem<T>>>","space.kscience.dataforge.data.itemFlow"]},{"name":"fun <T : Any> JoinGroup(name: String, set: DataSet<T>)","description":"space.kscience.dataforge.actions.JoinGroup.JoinGroup","location":"dataforge-data/space.kscience.dataforge.actions/-join-group/-join-group.html","searchKeys":["JoinGroup","fun <T : Any> JoinGroup(name: String, set: DataSet<T>)","space.kscience.dataforge.actions.JoinGroup.JoinGroup"]},{"name":"fun <T : Any> StaticData(type: KType, value: T, meta: Meta = Meta.EMPTY)","description":"space.kscience.dataforge.data.StaticData.StaticData","location":"dataforge-data/space.kscience.dataforge.data/-static-data/-static-data.html","searchKeys":["StaticData","fun <T : Any> StaticData(type: KType, value: T, meta: Meta = Meta.EMPTY)","space.kscience.dataforge.data.StaticData.StaticData"]},{"name":"fun <T> LazyGoal(coroutineContext: CoroutineContext = EmptyCoroutineContext, dependencies: Collection<Goal<*>> = emptyList(), block: suspend () -> T)","description":"space.kscience.dataforge.data.LazyGoal.LazyGoal","location":"dataforge-data/space.kscience.dataforge.data/-lazy-goal/-lazy-goal.html","searchKeys":["LazyGoal","fun <T> LazyGoal(coroutineContext: CoroutineContext = EmptyCoroutineContext, dependencies: Collection<Goal<*>> = emptyList(), block: suspend () -> T)","space.kscience.dataforge.data.LazyGoal.LazyGoal"]},{"name":"fun <T> StaticGoal(value: T)","description":"space.kscience.dataforge.data.StaticGoal.StaticGoal","location":"dataforge-data/space.kscience.dataforge.data/-static-goal/-static-goal.html","searchKeys":["StaticGoal","fun <T> StaticGoal(value: T)","space.kscience.dataforge.data.StaticGoal.StaticGoal"]},{"name":"fun <out T : Any> Leaf(data: Data<T>)","description":"space.kscience.dataforge.data.DataTreeItem.Leaf.Leaf","location":"dataforge-data/space.kscience.dataforge.data/-data-tree-item/-leaf/-leaf.html","searchKeys":["Leaf","fun <out T : Any> Leaf(data: Data<T>)","space.kscience.dataforge.data.DataTreeItem.Leaf.Leaf"]},{"name":"fun <out T : Any> Node(tree: DataTree<T>)","description":"space.kscience.dataforge.data.DataTreeItem.Node.Node","location":"dataforge-data/space.kscience.dataforge.data/-data-tree-item/-node/-node.html","searchKeys":["Node","fun <out T : Any> Node(tree: DataTree<T>)","space.kscience.dataforge.data.DataTreeItem.Node.Node"]},{"name":"fun ActionEnv(name: Name, meta: Meta, actionMeta: Meta)","description":"space.kscience.dataforge.actions.ActionEnv.ActionEnv","location":"dataforge-data/space.kscience.dataforge.actions/-action-env/-action-env.html","searchKeys":["ActionEnv","fun ActionEnv(name: Name, meta: Meta, actionMeta: Meta)","space.kscience.dataforge.actions.ActionEnv.ActionEnv"]},{"name":"fun ActiveDataTree(dataType: KType)","description":"space.kscience.dataforge.data.ActiveDataTree.ActiveDataTree","location":"dataforge-data/space.kscience.dataforge.data/-active-data-tree/-active-data-tree.html","searchKeys":["ActiveDataTree","fun ActiveDataTree(dataType: KType)","space.kscience.dataforge.data.ActiveDataTree.ActiveDataTree"]},{"name":"fun CachingAction(outputType: KType)","description":"space.kscience.dataforge.data.CachingAction.CachingAction","location":"dataforge-data/space.kscience.dataforge.data/-caching-action/-caching-action.html","searchKeys":["CachingAction","fun CachingAction(outputType: KType)","space.kscience.dataforge.data.CachingAction.CachingAction"]},{"name":"fun CoroutineMonitor()","description":"space.kscience.dataforge.data.CoroutineMonitor.CoroutineMonitor","location":"dataforge-data/space.kscience.dataforge.data/-coroutine-monitor/-coroutine-monitor.html","searchKeys":["CoroutineMonitor","fun CoroutineMonitor()","space.kscience.dataforge.data.CoroutineMonitor.CoroutineMonitor"]},{"name":"fun CoroutineScope.setAndObserve(name: Name, dataSet: DataSet<T>): Job","description":"space.kscience.dataforge.data.ActiveDataTree.setAndObserve","location":"dataforge-data/space.kscience.dataforge.data/-active-data-tree/set-and-observe.html","searchKeys":["setAndObserve","fun CoroutineScope.setAndObserve(name: Name, dataSet: DataSet<T>): Job","space.kscience.dataforge.data.ActiveDataTree.setAndObserve"]},{"name":"fun Dependencies(values: Collection<Job>)","description":"space.kscience.dataforge.data.Dependencies.Dependencies","location":"dataforge-data/space.kscience.dataforge.data/-dependencies/-dependencies.html","searchKeys":["Dependencies","fun Dependencies(values: Collection<Job>)","space.kscience.dataforge.data.Dependencies.Dependencies"]},{"name":"fun FragmentRule(name: Name, meta: MutableMeta)","description":"space.kscience.dataforge.actions.SplitBuilder.FragmentRule.FragmentRule","location":"dataforge-data/space.kscience.dataforge.actions/-split-builder/-fragment-rule/-fragment-rule.html","searchKeys":["FragmentRule","fun FragmentRule(name: Name, meta: MutableMeta)","space.kscience.dataforge.actions.SplitBuilder.FragmentRule.FragmentRule"]},{"name":"fun Goal<*>.launch(coroutineScope: CoroutineScope): Job","description":"space.kscience.dataforge.data.launch","location":"dataforge-data/space.kscience.dataforge.data/launch.html","searchKeys":["launch","fun Goal<*>.launch(coroutineScope: CoroutineScope): Job","space.kscience.dataforge.data.launch"]},{"name":"fun GoalExecutionRestriction(policy: GoalExecutionRestrictionPolicy = GoalExecutionRestrictionPolicy.ERROR)","description":"space.kscience.dataforge.data.GoalExecutionRestriction.GoalExecutionRestriction","location":"dataforge-data/space.kscience.dataforge.data/-goal-execution-restriction/-goal-execution-restriction.html","searchKeys":["GoalExecutionRestriction","fun GoalExecutionRestriction(policy: GoalExecutionRestrictionPolicy = GoalExecutionRestrictionPolicy.ERROR)","space.kscience.dataforge.data.GoalExecutionRestriction.GoalExecutionRestriction"]},{"name":"fun MapActionBuilder(name: Name, meta: MutableMeta, actionMeta: Meta)","description":"space.kscience.dataforge.actions.MapActionBuilder.MapActionBuilder","location":"dataforge-data/space.kscience.dataforge.actions/-map-action-builder/-map-action-builder.html","searchKeys":["MapActionBuilder","fun MapActionBuilder(name: Name, meta: MutableMeta, actionMeta: Meta)","space.kscience.dataforge.actions.MapActionBuilder.MapActionBuilder"]},{"name":"fun ReduceGroupBuilder(inputType: KType, scope: CoroutineScope, actionMeta: Meta)","description":"space.kscience.dataforge.actions.ReduceGroupBuilder.ReduceGroupBuilder","location":"dataforge-data/space.kscience.dataforge.actions/-reduce-group-builder/-reduce-group-builder.html","searchKeys":["ReduceGroupBuilder","fun ReduceGroupBuilder(inputType: KType, scope: CoroutineScope, actionMeta: Meta)","space.kscience.dataforge.actions.ReduceGroupBuilder.ReduceGroupBuilder"]},{"name":"fun SplitBuilder(name: Name, meta: Meta)","description":"space.kscience.dataforge.actions.SplitBuilder.SplitBuilder","location":"dataforge-data/space.kscience.dataforge.actions/-split-builder/-split-builder.html","searchKeys":["SplitBuilder","fun SplitBuilder(name: Name, meta: Meta)","space.kscience.dataforge.actions.SplitBuilder.SplitBuilder"]},{"name":"fun byMetaValue(scope: CoroutineScope, key: String, defaultTagValue: String): GroupRule","description":"space.kscience.dataforge.data.GroupRule.Companion.byMetaValue","location":"dataforge-data/space.kscience.dataforge.data/-group-rule/-companion/by-meta-value.html","searchKeys":["byMetaValue","fun byMetaValue(scope: CoroutineScope, key: String, defaultTagValue: String): GroupRule","space.kscience.dataforge.data.GroupRule.Companion.byMetaValue"]},{"name":"fun byValue(tag: String, defaultTag: String = \"@default\", action: JoinGroup<T, R>.() -> Unit)","description":"space.kscience.dataforge.actions.ReduceGroupBuilder.byValue","location":"dataforge-data/space.kscience.dataforge.actions/-reduce-group-builder/by-value.html","searchKeys":["byValue","fun byValue(tag: String, defaultTag: String = \"@default\", action: JoinGroup<T, R>.() -> Unit)","space.kscience.dataforge.actions.ReduceGroupBuilder.byValue"]},{"name":"fun empty(meta: Meta): Data<Nothing>","description":"space.kscience.dataforge.data.Data.Companion.empty","location":"dataforge-data/space.kscience.dataforge.data/-data/-companion/empty.html","searchKeys":["empty","fun empty(meta: Meta): Data<Nothing>","space.kscience.dataforge.data.Data.Companion.empty"]},{"name":"fun finish()","description":"space.kscience.dataforge.data.CoroutineMonitor.finish","location":"dataforge-data/space.kscience.dataforge.data/-coroutine-monitor/finish.html","searchKeys":["finish","fun finish()","space.kscience.dataforge.data.CoroutineMonitor.finish"]},{"name":"fun fragment(name: String, rule: SplitBuilder.FragmentRule<T, R>.() -> Unit)","description":"space.kscience.dataforge.actions.SplitBuilder.fragment","location":"dataforge-data/space.kscience.dataforge.actions/-split-builder/fragment.html","searchKeys":["fragment","fun fragment(name: String, rule: SplitBuilder.FragmentRule<T, R>.() -> Unit)","space.kscience.dataforge.actions.SplitBuilder.fragment"]},{"name":"fun group(groupName: String, filter: suspend (Name, Data<T>) -> Boolean, action: JoinGroup<T, R>.() -> Unit)","description":"space.kscience.dataforge.actions.ReduceGroupBuilder.group","location":"dataforge-data/space.kscience.dataforge.actions/-reduce-group-builder/group.html","searchKeys":["group","fun group(groupName: String, filter: suspend (Name, Data<T>) -> Boolean, action: JoinGroup<T, R>.() -> Unit)","space.kscience.dataforge.actions.ReduceGroupBuilder.group"]},{"name":"fun result(f: suspend (T) -> R)","description":"space.kscience.dataforge.actions.SplitBuilder.FragmentRule.result","location":"dataforge-data/space.kscience.dataforge.actions/-split-builder/-fragment-rule/result.html","searchKeys":["result","fun result(f: suspend (T) -> R)","space.kscience.dataforge.actions.SplitBuilder.FragmentRule.result"]},{"name":"fun result(f: suspend ActionEnv.(Map<Name, T>) -> R)","description":"space.kscience.dataforge.actions.JoinGroup.result","location":"dataforge-data/space.kscience.dataforge.actions/-join-group/result.html","searchKeys":["result","fun result(f: suspend ActionEnv.(Map<Name, T>) -> R)","space.kscience.dataforge.actions.JoinGroup.result"]},{"name":"fun result(f: suspend ActionEnv.(T) -> R)","description":"space.kscience.dataforge.actions.MapActionBuilder.result","location":"dataforge-data/space.kscience.dataforge.actions/-map-action-builder/result.html","searchKeys":["result","fun result(f: suspend ActionEnv.(T) -> R)","space.kscience.dataforge.actions.MapActionBuilder.result"]},{"name":"fun result(resultName: String, f: suspend ActionEnv.(Map<Name, T>) -> R)","description":"space.kscience.dataforge.actions.ReduceGroupBuilder.result","location":"dataforge-data/space.kscience.dataforge.actions/-reduce-group-builder/result.html","searchKeys":["result","fun result(resultName: String, f: suspend ActionEnv.(Map<Name, T>) -> R)","space.kscience.dataforge.actions.ReduceGroupBuilder.result"]},{"name":"fun start()","description":"space.kscience.dataforge.data.CoroutineMonitor.start","location":"dataforge-data/space.kscience.dataforge.data/-coroutine-monitor/start.html","searchKeys":["start","fun start()","space.kscience.dataforge.data.CoroutineMonitor.start"]},{"name":"infix fun <T : Any, I : Any, R : Any> Action<T, I>.then(action: Action<I, R>): Action<T, R>","description":"space.kscience.dataforge.actions.then","location":"dataforge-data/space.kscience.dataforge.actions/then.html","searchKeys":["then","infix fun <T : Any, I : Any, R : Any> Action<T, I>.then(action: Action<I, R>): Action<T, R>","space.kscience.dataforge.actions.then"]},{"name":"inline fun <K, T : Any, R : Any> Map<K, Data<T>>.reduceToData(coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = Meta.EMPTY, noinline block: suspend (Map<K, T>) -> R): Data<R>","description":"space.kscience.dataforge.data.reduceToData","location":"dataforge-data/space.kscience.dataforge.data/reduce-to-data.html","searchKeys":["reduceToData","inline fun <K, T : Any, R : Any> Map<K, Data<T>>.reduceToData(coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = Meta.EMPTY, noinline block: suspend (Map<K, T>) -> R): Data<R>","space.kscience.dataforge.data.reduceToData"]},{"name":"inline fun <R : Any> DataSet<*>.select(namePattern: Name? = null, noinline filter: (name: Name, meta: Meta) -> Boolean = { _, _ -> true }): DataSet<R>","description":"space.kscience.dataforge.data.select","location":"dataforge-data/space.kscience.dataforge.data/select.html","searchKeys":["select","inline fun <R : Any> DataSet<*>.select(namePattern: Name? = null, noinline filter: (name: Name, meta: Meta) -> Boolean = { _, _ -> true }): DataSet<R>","space.kscience.dataforge.data.select"]},{"name":"inline fun <T : Any, R : Any> Action.Companion.map(noinline builder: MapActionBuilder<T, R>.() -> Unit): Action<T, R>","description":"space.kscience.dataforge.actions.map","location":"dataforge-data/space.kscience.dataforge.actions/map.html","searchKeys":["map","inline fun <T : Any, R : Any> Action.Companion.map(noinline builder: MapActionBuilder<T, R>.() -> Unit): Action<T, R>","space.kscience.dataforge.actions.map"]},{"name":"inline fun <T : Any, R : Any> Action.Companion.reduce(noinline builder: ReduceGroupBuilder<T, R>.() -> Unit): Action<T, R>","description":"space.kscience.dataforge.actions.reduce","location":"dataforge-data/space.kscience.dataforge.actions/reduce.html","searchKeys":["reduce","inline fun <T : Any, R : Any> Action.Companion.reduce(noinline builder: ReduceGroupBuilder<T, R>.() -> Unit): Action<T, R>","space.kscience.dataforge.actions.reduce"]},{"name":"inline fun <T : Any, R : Any> Action.Companion.split(noinline builder: SplitBuilder<T, R>.() -> Unit): Action<T, R>","description":"space.kscience.dataforge.actions.split","location":"dataforge-data/space.kscience.dataforge.actions/split.html","searchKeys":["split","inline fun <T : Any, R : Any> Action.Companion.split(noinline builder: SplitBuilder<T, R>.() -> Unit): Action<T, R>","space.kscience.dataforge.actions.split"]},{"name":"inline fun <T : Any, R : Any> Collection<Data<T>>.reduceToData(coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = Meta.EMPTY, crossinline block: suspend (Collection<T>) -> R): Data<R>","description":"space.kscience.dataforge.data.reduceToData","location":"dataforge-data/space.kscience.dataforge.data/reduce-to-data.html","searchKeys":["reduceToData","inline fun <T : Any, R : Any> Collection<Data<T>>.reduceToData(coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = Meta.EMPTY, crossinline block: suspend (Collection<T>) -> R): Data<R>","space.kscience.dataforge.data.reduceToData"]},{"name":"inline fun <T : Any, R : Any> Data<T>.map(coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = this.meta, crossinline block: suspend (T) -> R): Data<R>","description":"space.kscience.dataforge.data.map","location":"dataforge-data/space.kscience.dataforge.data/map.html","searchKeys":["map","inline fun <T : Any, R : Any> Data<T>.map(coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = this.meta, crossinline block: suspend (T) -> R): Data<R>","space.kscience.dataforge.data.map"]},{"name":"inline fun <T : Any> Data(meta: Meta = Meta.EMPTY, context: CoroutineContext = EmptyCoroutineContext, dependencies: Collection<Data<*>> = emptyList(), noinline block: suspend () -> T): Data<T>","description":"space.kscience.dataforge.data.Data","location":"dataforge-data/space.kscience.dataforge.data/-data.html","searchKeys":["Data","inline fun <T : Any> Data(meta: Meta = Meta.EMPTY, context: CoroutineContext = EmptyCoroutineContext, dependencies: Collection<Data<*>> = emptyList(), noinline block: suspend () -> T): Data<T>","space.kscience.dataforge.data.Data"]},{"name":"inline fun <T : Any> static(value: T, meta: Meta = Meta.EMPTY): Data<T>","description":"space.kscience.dataforge.data.Data.Companion.static","location":"dataforge-data/space.kscience.dataforge.data/-data/-companion/static.html","searchKeys":["static","inline fun <T : Any> static(value: T, meta: Meta = Meta.EMPTY): Data<T>","space.kscience.dataforge.data.Data.Companion.static"]},{"name":"inline fun <T1 : Any, T2 : Any, R : Any> Data<T1>.combine(other: Data<T2>, coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = this.meta, crossinline block: suspend (T1, T2) -> R): Data<R>","description":"space.kscience.dataforge.data.combine","location":"dataforge-data/space.kscience.dataforge.data/combine.html","searchKeys":["combine","inline fun <T1 : Any, T2 : Any, R : Any> Data<T1>.combine(other: Data<T2>, coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = this.meta, crossinline block: suspend (T1, T2) -> R): Data<R>","space.kscience.dataforge.data.combine"]},{"name":"inline suspend fun <R : Any> DataSet<*>.selectOne(name: Name): NamedData<R>?","description":"space.kscience.dataforge.data.selectOne","location":"dataforge-data/space.kscience.dataforge.data/select-one.html","searchKeys":["selectOne","inline suspend fun <R : Any> DataSet<*>.selectOne(name: Name): NamedData<R>?","space.kscience.dataforge.data.selectOne"]},{"name":"inline suspend fun <R : Any> DataSet<*>.selectOne(name: String): NamedData<R>?","description":"space.kscience.dataforge.data.selectOne","location":"dataforge-data/space.kscience.dataforge.data/select-one.html","searchKeys":["selectOne","inline suspend fun <R : Any> DataSet<*>.selectOne(name: String): NamedData<R>?","space.kscience.dataforge.data.selectOne"]},{"name":"inline suspend fun <T : Any, R : Any> DataSet<T>.foldToData(initial: R, coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = Meta.EMPTY, noinline block: suspend (R, data: NamedData<T>) -> R): Data<R>","description":"space.kscience.dataforge.data.foldToData","location":"dataforge-data/space.kscience.dataforge.data/fold-to-data.html","searchKeys":["foldToData","inline suspend fun <T : Any, R : Any> DataSet<T>.foldToData(initial: R, coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = Meta.EMPTY, noinline block: suspend (R, data: NamedData<T>) -> R): Data<R>","space.kscience.dataforge.data.foldToData"]},{"name":"inline suspend fun <T : Any, R : Any> DataSet<T>.map(coroutineContext: CoroutineContext = EmptyCoroutineContext, noinline metaTransform: MutableMeta.() -> Unit = {}, noinline block: suspend (T) -> R): DataTree<R>","description":"space.kscience.dataforge.data.map","location":"dataforge-data/space.kscience.dataforge.data/map.html","searchKeys":["map","inline suspend fun <T : Any, R : Any> DataSet<T>.map(coroutineContext: CoroutineContext = EmptyCoroutineContext, noinline metaTransform: MutableMeta.() -> Unit = {}, noinline block: suspend (T) -> R): DataTree<R>","space.kscience.dataforge.data.map"]},{"name":"inline suspend fun <T : Any, R : Any> DataSet<T>.reduceToData(coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = Meta.EMPTY, noinline transformation: suspend (Flow<NamedData<T>>) -> R): Data<R>","description":"space.kscience.dataforge.data.reduceToData","location":"dataforge-data/space.kscience.dataforge.data/reduce-to-data.html","searchKeys":["reduceToData","inline suspend fun <T : Any, R : Any> DataSet<T>.reduceToData(coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = Meta.EMPTY, noinline transformation: suspend (Flow<NamedData<T>>) -> R): Data<R>","space.kscience.dataforge.data.reduceToData"]},{"name":"inline suspend fun <T : Any, R : Any> Flow<NamedData<T>>.foldToData(initial: R, coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = Meta.EMPTY, noinline block: suspend (R, data: NamedData<T>) -> R): Data<R>","description":"space.kscience.dataforge.data.foldToData","location":"dataforge-data/space.kscience.dataforge.data/fold-to-data.html","searchKeys":["foldToData","inline suspend fun <T : Any, R : Any> Flow<NamedData<T>>.foldToData(initial: R, coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = Meta.EMPTY, noinline block: suspend (R, data: NamedData<T>) -> R): Data<R>","space.kscience.dataforge.data.foldToData"]},{"name":"inline suspend fun <T : Any, R : Any> Flow<NamedData<T>>.reduceToData(coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = Meta.EMPTY, noinline transformation: suspend (Flow<NamedData<T>>) -> R): Data<R>","description":"space.kscience.dataforge.data.reduceToData","location":"dataforge-data/space.kscience.dataforge.data/reduce-to-data.html","searchKeys":["reduceToData","inline suspend fun <T : Any, R : Any> Flow<NamedData<T>>.reduceToData(coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = Meta.EMPTY, noinline transformation: suspend (Flow<NamedData<T>>) -> R): Data<R>","space.kscience.dataforge.data.reduceToData"]},{"name":"inline suspend fun <T : Any> ActiveDataTree(crossinline block: suspend ActiveDataTree<T>.() -> Unit): ActiveDataTree<T>","description":"space.kscience.dataforge.data.ActiveDataTree","location":"dataforge-data/space.kscience.dataforge.data/-active-data-tree.html","searchKeys":["ActiveDataTree","inline suspend fun <T : Any> ActiveDataTree(crossinline block: suspend ActiveDataTree<T>.() -> Unit): ActiveDataTree<T>","space.kscience.dataforge.data.ActiveDataTree"]},{"name":"inline suspend fun <T : Any> ActiveDataTree<T>.emit(name: Name, noinline block: suspend ActiveDataTree<T>.() -> Unit)","description":"space.kscience.dataforge.data.emit","location":"dataforge-data/space.kscience.dataforge.data/emit.html","searchKeys":["emit","inline suspend fun <T : Any> ActiveDataTree<T>.emit(name: Name, noinline block: suspend ActiveDataTree<T>.() -> Unit)","space.kscience.dataforge.data.emit"]},{"name":"inline suspend fun <T : Any> ActiveDataTree<T>.emit(name: String, noinline block: suspend ActiveDataTree<T>.() -> Unit)","description":"space.kscience.dataforge.data.emit","location":"dataforge-data/space.kscience.dataforge.data/emit.html","searchKeys":["emit","inline suspend fun <T : Any> ActiveDataTree<T>.emit(name: String, noinline block: suspend ActiveDataTree<T>.() -> Unit)","space.kscience.dataforge.data.emit"]},{"name":"inline suspend fun <T : Any> DataSetBuilder<T>.produce(name: Name, meta: Meta = Meta.EMPTY, noinline producer: suspend () -> T)","description":"space.kscience.dataforge.data.produce","location":"dataforge-data/space.kscience.dataforge.data/produce.html","searchKeys":["produce","inline suspend fun <T : Any> DataSetBuilder<T>.produce(name: Name, meta: Meta = Meta.EMPTY, noinline producer: suspend () -> T)","space.kscience.dataforge.data.produce"]},{"name":"inline suspend fun <T : Any> DataSetBuilder<T>.produce(name: String, meta: Meta = Meta.EMPTY, noinline producer: suspend () -> T)","description":"space.kscience.dataforge.data.produce","location":"dataforge-data/space.kscience.dataforge.data/produce.html","searchKeys":["produce","inline suspend fun <T : Any> DataSetBuilder<T>.produce(name: String, meta: Meta = Meta.EMPTY, noinline producer: suspend () -> T)","space.kscience.dataforge.data.produce"]},{"name":"inline suspend fun <T : Any> DataSetBuilder<T>.static(name: Name, data: T, meta: Meta = Meta.EMPTY)","description":"space.kscience.dataforge.data.static","location":"dataforge-data/space.kscience.dataforge.data/static.html","searchKeys":["static","inline suspend fun <T : Any> DataSetBuilder<T>.static(name: Name, data: T, meta: Meta = Meta.EMPTY)","space.kscience.dataforge.data.static"]},{"name":"inline suspend fun <T : Any> DataSetBuilder<T>.static(name: String, data: T, meta: Meta = Meta.EMPTY)","description":"space.kscience.dataforge.data.static","location":"dataforge-data/space.kscience.dataforge.data/static.html","searchKeys":["static","inline suspend fun <T : Any> DataSetBuilder<T>.static(name: String, data: T, meta: Meta = Meta.EMPTY)","space.kscience.dataforge.data.static"]},{"name":"inline suspend fun <T : Any> DataSetBuilder<T>.static(name: String, data: T, mutableMeta: MutableMeta.() -> Unit)","description":"space.kscience.dataforge.data.static","location":"dataforge-data/space.kscience.dataforge.data/static.html","searchKeys":["static","inline suspend fun <T : Any> DataSetBuilder<T>.static(name: String, data: T, mutableMeta: MutableMeta.() -> Unit)","space.kscience.dataforge.data.static"]},{"name":"inline suspend fun <T : Any> DataTree(noinline block: suspend DataSetBuilder<T>.() -> Unit): DataTree<T>","description":"space.kscience.dataforge.data.DataTree","location":"dataforge-data/space.kscience.dataforge.data/-data-tree.html","searchKeys":["DataTree","inline suspend fun <T : Any> DataTree(noinline block: suspend DataSetBuilder<T>.() -> Unit): DataTree<T>","space.kscience.dataforge.data.DataTree"]},{"name":"interface Action<in T : Any, out R : Any>","description":"space.kscience.dataforge.actions.Action","location":"dataforge-data/space.kscience.dataforge.actions/-action/index.html","searchKeys":["Action","interface Action<in T : Any, out R : Any>","space.kscience.dataforge.actions.Action"]},{"name":"interface ActiveDataSet<T : Any> : DataSet<T> ","description":"space.kscience.dataforge.data.ActiveDataSet","location":"dataforge-data/space.kscience.dataforge.data/-active-data-set/index.html","searchKeys":["ActiveDataSet","interface ActiveDataSet<T : Any> : DataSet<T> ","space.kscience.dataforge.data.ActiveDataSet"]},{"name":"interface Data<out T : Any> : Goal<T> , MetaRepr","description":"space.kscience.dataforge.data.Data","location":"dataforge-data/space.kscience.dataforge.data/-data/index.html","searchKeys":["Data","interface Data<out T : Any> : Goal<T> , MetaRepr","space.kscience.dataforge.data.Data"]},{"name":"interface DataSet<out T : Any>","description":"space.kscience.dataforge.data.DataSet","location":"dataforge-data/space.kscience.dataforge.data/-data-set/index.html","searchKeys":["DataSet","interface DataSet<out T : Any>","space.kscience.dataforge.data.DataSet"]},{"name":"interface DataSetBuilder<in T : Any>","description":"space.kscience.dataforge.data.DataSetBuilder","location":"dataforge-data/space.kscience.dataforge.data/-data-set-builder/index.html","searchKeys":["DataSetBuilder","interface DataSetBuilder<in T : Any>","space.kscience.dataforge.data.DataSetBuilder"]},{"name":"interface DataTree<out T : Any> : DataSet<T> ","description":"space.kscience.dataforge.data.DataTree","location":"dataforge-data/space.kscience.dataforge.data/-data-tree/index.html","searchKeys":["DataTree","interface DataTree<out T : Any> : DataSet<T> ","space.kscience.dataforge.data.DataTree"]},{"name":"interface Goal<out T>","description":"space.kscience.dataforge.data.Goal","location":"dataforge-data/space.kscience.dataforge.data/-goal/index.html","searchKeys":["Goal","interface Goal<out T>","space.kscience.dataforge.data.Goal"]},{"name":"interface GoalLogger : CoroutineContext.Element","description":"space.kscience.dataforge.data.GoalLogger","location":"dataforge-data/space.kscience.dataforge.data/-goal-logger/index.html","searchKeys":["GoalLogger","interface GoalLogger : CoroutineContext.Element","space.kscience.dataforge.data.GoalLogger"]},{"name":"interface GroupRule","description":"space.kscience.dataforge.data.GroupRule","location":"dataforge-data/space.kscience.dataforge.data/-group-rule/index.html","searchKeys":["GroupRule","interface GroupRule","space.kscience.dataforge.data.GroupRule"]},{"name":"interface NamedData<out T : Any> : Named, Data<T> ","description":"space.kscience.dataforge.data.NamedData","location":"dataforge-data/space.kscience.dataforge.data/-named-data/index.html","searchKeys":["NamedData","interface NamedData<out T : Any> : Named, Data<T> ","space.kscience.dataforge.data.NamedData"]},{"name":"lateinit var result: suspend (T) -> R","description":"space.kscience.dataforge.actions.SplitBuilder.FragmentRule.result","location":"dataforge-data/space.kscience.dataforge.actions/-split-builder/-fragment-rule/result.html","searchKeys":["result","lateinit var result: suspend (T) -> R","space.kscience.dataforge.actions.SplitBuilder.FragmentRule.result"]},{"name":"lateinit var result: suspend ActionEnv.(Map<Name, T>) -> R","description":"space.kscience.dataforge.actions.JoinGroup.result","location":"dataforge-data/space.kscience.dataforge.actions/-join-group/result.html","searchKeys":["result","lateinit var result: suspend ActionEnv.(Map<Name, T>) -> R","space.kscience.dataforge.actions.JoinGroup.result"]},{"name":"lateinit var result: suspend ActionEnv.(T) -> R","description":"space.kscience.dataforge.actions.MapActionBuilder.result","location":"dataforge-data/space.kscience.dataforge.actions/-map-action-builder/result.html","searchKeys":["result","lateinit var result: suspend ActionEnv.(T) -> R","space.kscience.dataforge.actions.MapActionBuilder.result"]},{"name":"object Companion","description":"space.kscience.dataforge.actions.Action.Companion","location":"dataforge-data/space.kscience.dataforge.actions/-action/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.actions.Action.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.data.Data.Companion","location":"dataforge-data/space.kscience.dataforge.data/-data/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.data.Data.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.data.DataSet.Companion","location":"dataforge-data/space.kscience.dataforge.data/-data-set/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.data.DataSet.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.data.DataTree.Companion","location":"dataforge-data/space.kscience.dataforge.data/-data-tree/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.data.DataTree.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.data.Goal.Companion","location":"dataforge-data/space.kscience.dataforge.data/-goal/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.data.Goal.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.data.GroupRule.Companion","location":"dataforge-data/space.kscience.dataforge.data/-group-rule/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.data.GroupRule.Companion"]},{"name":"object Companion : CoroutineContext.Key<CoroutineMonitor> ","description":"space.kscience.dataforge.data.CoroutineMonitor.Companion","location":"dataforge-data/space.kscience.dataforge.data/-coroutine-monitor/-companion/index.html","searchKeys":["Companion","object Companion : CoroutineContext.Key<CoroutineMonitor> ","space.kscience.dataforge.data.CoroutineMonitor.Companion"]},{"name":"object Companion : CoroutineContext.Key<Dependencies> ","description":"space.kscience.dataforge.data.Dependencies.Companion","location":"dataforge-data/space.kscience.dataforge.data/-dependencies/-companion/index.html","searchKeys":["Companion","object Companion : CoroutineContext.Key<Dependencies> ","space.kscience.dataforge.data.Dependencies.Companion"]},{"name":"object Companion : CoroutineContext.Key<GoalExecutionRestriction> ","description":"space.kscience.dataforge.data.GoalExecutionRestriction.Companion","location":"dataforge-data/space.kscience.dataforge.data/-goal-execution-restriction/-companion/index.html","searchKeys":["Companion","object Companion : CoroutineContext.Key<GoalExecutionRestriction> ","space.kscience.dataforge.data.GoalExecutionRestriction.Companion"]},{"name":"object Companion : CoroutineContext.Key<GoalLogger> ","description":"space.kscience.dataforge.data.GoalLogger.Companion","location":"dataforge-data/space.kscience.dataforge.data/-goal-logger/-companion/index.html","searchKeys":["Companion","object Companion : CoroutineContext.Key<GoalLogger> ","space.kscience.dataforge.data.GoalLogger.Companion"]},{"name":"open class LazyGoal<T>(coroutineContext: CoroutineContext, dependencies: Collection<Goal<*>>, block: suspend () -> T) : Goal<T> ","description":"space.kscience.dataforge.data.LazyGoal","location":"dataforge-data/space.kscience.dataforge.data/-lazy-goal/index.html","searchKeys":["LazyGoal","open class LazyGoal<T>(coroutineContext: CoroutineContext, dependencies: Collection<Goal<*>>, block: suspend () -> T) : Goal<T> ","space.kscience.dataforge.data.LazyGoal"]},{"name":"open class StaticGoal<T>(value: T) : Goal<T> ","description":"space.kscience.dataforge.data.StaticGoal","location":"dataforge-data/space.kscience.dataforge.data/-static-goal/index.html","searchKeys":["StaticGoal","open class StaticGoal<T>(value: T) : Goal<T> ","space.kscience.dataforge.data.StaticGoal"]},{"name":"open infix suspend fun String.put(block: suspend DataSetBuilder<T>.() -> Unit)","description":"space.kscience.dataforge.data.DataSetBuilder.put","location":"dataforge-data/space.kscience.dataforge.data/-data-set-builder/put.html","searchKeys":["put","open infix suspend fun String.put(block: suspend DataSetBuilder<T>.() -> Unit)","space.kscience.dataforge.data.DataSetBuilder.put"]},{"name":"open infix suspend fun String.put(data: Data<T>)","description":"space.kscience.dataforge.data.DataSetBuilder.put","location":"dataforge-data/space.kscience.dataforge.data/-data-set-builder/put.html","searchKeys":["put","open infix suspend fun String.put(data: Data<T>)","space.kscience.dataforge.data.DataSetBuilder.put"]},{"name":"open infix suspend fun String.put(dataSet: DataSet<T>)","description":"space.kscience.dataforge.data.DataSetBuilder.put","location":"dataforge-data/space.kscience.dataforge.data/-data-set-builder/put.html","searchKeys":["put","open infix suspend fun String.put(dataSet: DataSet<T>)","space.kscience.dataforge.data.DataSetBuilder.put"]},{"name":"open override fun async(coroutineScope: CoroutineScope): Deferred<T>","description":"space.kscience.dataforge.data.LazyGoal.async","location":"dataforge-data/space.kscience.dataforge.data/-lazy-goal/async.html","searchKeys":["async","open override fun async(coroutineScope: CoroutineScope): Deferred<T>","space.kscience.dataforge.data.LazyGoal.async"]},{"name":"open override fun async(coroutineScope: CoroutineScope): Deferred<T>","description":"space.kscience.dataforge.data.StaticGoal.async","location":"dataforge-data/space.kscience.dataforge.data/-static-goal/async.html","searchKeys":["async","open override fun async(coroutineScope: CoroutineScope): Deferred<T>","space.kscience.dataforge.data.StaticGoal.async"]},{"name":"open override fun flowData(): Flow<NamedData<T>>","description":"space.kscience.dataforge.data.DataTree.flowData","location":"dataforge-data/space.kscience.dataforge.data/-data-tree/flow-data.html","searchKeys":["flowData","open override fun flowData(): Flow<NamedData<T>>","space.kscience.dataforge.data.DataTree.flowData"]},{"name":"open override fun reset()","description":"space.kscience.dataforge.data.LazyGoal.reset","location":"dataforge-data/space.kscience.dataforge.data/-lazy-goal/reset.html","searchKeys":["reset","open override fun reset()","space.kscience.dataforge.data.LazyGoal.reset"]},{"name":"open override fun reset()","description":"space.kscience.dataforge.data.StaticGoal.reset","location":"dataforge-data/space.kscience.dataforge.data/-static-goal/reset.html","searchKeys":["reset","open override fun reset()","space.kscience.dataforge.data.StaticGoal.reset"]},{"name":"open override fun toMeta(): Meta","description":"space.kscience.dataforge.data.Data.toMeta","location":"dataforge-data/space.kscience.dataforge.data/-data/to-meta.html","searchKeys":["toMeta","open override fun toMeta(): Meta","space.kscience.dataforge.data.Data.toMeta"]},{"name":"open override val dataType: KType","description":"space.kscience.dataforge.data.ActiveDataTree.dataType","location":"dataforge-data/space.kscience.dataforge.data/-active-data-tree/data-type.html","searchKeys":["dataType","open override val dataType: KType","space.kscience.dataforge.data.ActiveDataTree.dataType"]},{"name":"open override val deferred: Deferred<T>","description":"space.kscience.dataforge.data.StaticGoal.deferred","location":"dataforge-data/space.kscience.dataforge.data/-static-goal/deferred.html","searchKeys":["deferred","open override val deferred: Deferred<T>","space.kscience.dataforge.data.StaticGoal.deferred"]},{"name":"open override val dependencies: Collection<Goal<*>>","description":"space.kscience.dataforge.data.LazyGoal.dependencies","location":"dataforge-data/space.kscience.dataforge.data/-lazy-goal/dependencies.html","searchKeys":["dependencies","open override val dependencies: Collection<Goal<*>>","space.kscience.dataforge.data.LazyGoal.dependencies"]},{"name":"open override val dependencies: Collection<Goal<*>>","description":"space.kscience.dataforge.data.StaticGoal.dependencies","location":"dataforge-data/space.kscience.dataforge.data/-static-goal/dependencies.html","searchKeys":["dependencies","open override val dependencies: Collection<Goal<*>>","space.kscience.dataforge.data.StaticGoal.dependencies"]},{"name":"open override val key: CoroutineContext.Key<*>","description":"space.kscience.dataforge.data.CoroutineMonitor.key","location":"dataforge-data/space.kscience.dataforge.data/-coroutine-monitor/key.html","searchKeys":["key","open override val key: CoroutineContext.Key<*>","space.kscience.dataforge.data.CoroutineMonitor.key"]},{"name":"open override val key: CoroutineContext.Key<*>","description":"space.kscience.dataforge.data.Dependencies.key","location":"dataforge-data/space.kscience.dataforge.data/-dependencies/key.html","searchKeys":["key","open override val key: CoroutineContext.Key<*>","space.kscience.dataforge.data.Dependencies.key"]},{"name":"open override val key: CoroutineContext.Key<*>","description":"space.kscience.dataforge.data.GoalExecutionRestriction.key","location":"dataforge-data/space.kscience.dataforge.data/-goal-execution-restriction/key.html","searchKeys":["key","open override val key: CoroutineContext.Key<*>","space.kscience.dataforge.data.GoalExecutionRestriction.key"]},{"name":"open override val key: CoroutineContext.Key<*>","description":"space.kscience.dataforge.data.GoalLogger.key","location":"dataforge-data/space.kscience.dataforge.data/-goal-logger/key.html","searchKeys":["key","open override val key: CoroutineContext.Key<*>","space.kscience.dataforge.data.GoalLogger.key"]},{"name":"open override val meta: Meta","description":"space.kscience.dataforge.data.StaticData.meta","location":"dataforge-data/space.kscience.dataforge.data/-static-data/meta.html","searchKeys":["meta","open override val meta: Meta","space.kscience.dataforge.data.StaticData.meta"]},{"name":"open override val type: KType","description":"space.kscience.dataforge.data.StaticData.type","location":"dataforge-data/space.kscience.dataforge.data/-static-data/type.html","searchKeys":["type","open override val type: KType","space.kscience.dataforge.data.StaticData.type"]},{"name":"open override val updates: Flow<Name>","description":"space.kscience.dataforge.data.ActiveDataTree.updates","location":"dataforge-data/space.kscience.dataforge.data/-active-data-tree/updates.html","searchKeys":["updates","open override val updates: Flow<Name>","space.kscience.dataforge.data.ActiveDataTree.updates"]},{"name":"open suspend fun emit(name: Name, dataSet: DataSet<T>)","description":"space.kscience.dataforge.data.DataSetBuilder.emit","location":"dataforge-data/space.kscience.dataforge.data/-data-set-builder/emit.html","searchKeys":["emit","open suspend fun emit(name: Name, dataSet: DataSet<T>)","space.kscience.dataforge.data.DataSetBuilder.emit"]},{"name":"open suspend fun listTop(prefix: Name = Name.EMPTY): List<Name>","description":"space.kscience.dataforge.data.DataSet.listTop","location":"dataforge-data/space.kscience.dataforge.data/-data-set/list-top.html","searchKeys":["listTop","open suspend fun listTop(prefix: Name = Name.EMPTY): List<Name>","space.kscience.dataforge.data.DataSet.listTop"]},{"name":"open suspend override fun emit(name: Name, data: Data<T>?)","description":"space.kscience.dataforge.data.ActiveDataTree.emit","location":"dataforge-data/space.kscience.dataforge.data/-active-data-tree/emit.html","searchKeys":["emit","open suspend override fun emit(name: Name, data: Data<T>?)","space.kscience.dataforge.data.ActiveDataTree.emit"]},{"name":"open suspend override fun execute(dataSet: DataSet<T>, meta: Meta, scope: CoroutineScope?): DataSet<R>","description":"space.kscience.dataforge.data.CachingAction.execute","location":"dataforge-data/space.kscience.dataforge.data/-caching-action/execute.html","searchKeys":["execute","open suspend override fun execute(dataSet: DataSet<T>, meta: Meta, scope: CoroutineScope?): DataSet<R>","space.kscience.dataforge.data.CachingAction.execute"]},{"name":"open suspend override fun getData(name: Name): Data<T>?","description":"space.kscience.dataforge.data.DataTree.getData","location":"dataforge-data/space.kscience.dataforge.data/-data-tree/get-data.html","searchKeys":["getData","open suspend override fun getData(name: Name): Data<T>?","space.kscience.dataforge.data.DataTree.getData"]},{"name":"open suspend override fun items(): Map<NameToken, DataTreeItem<T>>","description":"space.kscience.dataforge.data.ActiveDataTree.items","location":"dataforge-data/space.kscience.dataforge.data/-active-data-tree/items.html","searchKeys":["items","open suspend override fun items(): Map<NameToken, DataTreeItem<T>>","space.kscience.dataforge.data.ActiveDataTree.items"]},{"name":"open suspend override fun listTop(prefix: Name): List<Name>","description":"space.kscience.dataforge.data.DataTree.listTop","location":"dataforge-data/space.kscience.dataforge.data/-data-tree/list-top.html","searchKeys":["listTop","open suspend override fun listTop(prefix: Name): List<Name>","space.kscience.dataforge.data.DataTree.listTop"]},{"name":"open suspend override fun remove(name: Name)","description":"space.kscience.dataforge.data.ActiveDataTree.remove","location":"dataforge-data/space.kscience.dataforge.data/-active-data-tree/remove.html","searchKeys":["remove","open suspend override fun remove(name: Name)","space.kscience.dataforge.data.ActiveDataTree.remove"]},{"name":"override var deferred: Deferred<T>? = null","description":"space.kscience.dataforge.data.LazyGoal.deferred","location":"dataforge-data/space.kscience.dataforge.data/-lazy-goal/deferred.html","searchKeys":["deferred","override var deferred: Deferred<T>? = null","space.kscience.dataforge.data.LazyGoal.deferred"]},{"name":"sealed class DataTreeItem<out T : Any>","description":"space.kscience.dataforge.data.DataTreeItem","location":"dataforge-data/space.kscience.dataforge.data/-data-tree-item/index.html","searchKeys":["DataTreeItem","sealed class DataTreeItem<out T : Any>","space.kscience.dataforge.data.DataTreeItem"]},{"name":"suspend fun <R : Any> DataSet<*>.selectOne(type: KType, name: Name): NamedData<R>?","description":"space.kscience.dataforge.data.selectOne","location":"dataforge-data/space.kscience.dataforge.data/select-one.html","searchKeys":["selectOne","suspend fun <R : Any> DataSet<*>.selectOne(type: KType, name: Name): NamedData<R>?","space.kscience.dataforge.data.selectOne"]},{"name":"suspend fun <T : Any, R : Any> DataSet<T>.map(outputType: KType, coroutineContext: CoroutineContext = EmptyCoroutineContext, metaTransform: MutableMeta.() -> Unit = {}, block: suspend (T) -> R): DataTree<R>","description":"space.kscience.dataforge.data.map","location":"dataforge-data/space.kscience.dataforge.data/map.html","searchKeys":["map","suspend fun <T : Any, R : Any> DataSet<T>.map(outputType: KType, coroutineContext: CoroutineContext = EmptyCoroutineContext, metaTransform: MutableMeta.() -> Unit = {}, block: suspend (T) -> R): DataTree<R>","space.kscience.dataforge.data.map"]},{"name":"suspend fun <T : Any, R : Any> DataSet<T>.transformWith(action: Action<T, R>, meta: Meta = Meta.EMPTY, scope: CoroutineScope? = null): DataSet<R>","description":"space.kscience.dataforge.actions.transformWith","location":"dataforge-data/space.kscience.dataforge.actions/transform-with.html","searchKeys":["transformWith","suspend fun <T : Any, R : Any> DataSet<T>.transformWith(action: Action<T, R>, meta: Meta = Meta.EMPTY, scope: CoroutineScope? = null): DataSet<R>","space.kscience.dataforge.actions.transformWith"]},{"name":"suspend fun <T : Any, R : Any> Flow<NamedData<T>>.reduceToData(outputType: KType, coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = Meta.EMPTY, transformation: suspend (Flow<NamedData<T>>) -> R): Data<R>","description":"space.kscience.dataforge.data.reduceToData","location":"dataforge-data/space.kscience.dataforge.data/reduce-to-data.html","searchKeys":["reduceToData","suspend fun <T : Any, R : Any> Flow<NamedData<T>>.reduceToData(outputType: KType, coroutineContext: CoroutineContext = EmptyCoroutineContext, meta: Meta = Meta.EMPTY, transformation: suspend (Flow<NamedData<T>>) -> R): Data<R>","space.kscience.dataforge.data.reduceToData"]},{"name":"suspend fun <T : Any> ActiveDataTree(type: KType, block: suspend ActiveDataTree<T>.() -> Unit): ActiveDataTree<T>","description":"space.kscience.dataforge.data.ActiveDataTree","location":"dataforge-data/space.kscience.dataforge.data/-active-data-tree.html","searchKeys":["ActiveDataTree","suspend fun <T : Any> ActiveDataTree(type: KType, block: suspend ActiveDataTree<T>.() -> Unit): ActiveDataTree<T>","space.kscience.dataforge.data.ActiveDataTree"]},{"name":"suspend fun <T : Any> DataSet<T>.forEach(block: suspend (NamedData<T>) -> Unit)","description":"space.kscience.dataforge.data.forEach","location":"dataforge-data/space.kscience.dataforge.data/for-each.html","searchKeys":["forEach","suspend fun <T : Any> DataSet<T>.forEach(block: suspend (NamedData<T>) -> Unit)","space.kscience.dataforge.data.forEach"]},{"name":"suspend fun <T : Any> DataSet<T>.getData(name: String): Data<T>?","description":"space.kscience.dataforge.data.getData","location":"dataforge-data/space.kscience.dataforge.data/get-data.html","searchKeys":["getData","suspend fun <T : Any> DataSet<T>.getData(name: String): Data<T>?","space.kscience.dataforge.data.getData"]},{"name":"suspend fun <T : Any> DataSet<T>.join()","description":"space.kscience.dataforge.data.join","location":"dataforge-data/space.kscience.dataforge.data/join.html","searchKeys":["join","suspend fun <T : Any> DataSet<T>.join()","space.kscience.dataforge.data.join"]},{"name":"suspend fun <T : Any> DataSet<T>.rootData(): Data<T>?","description":"space.kscience.dataforge.data.rootData","location":"dataforge-data/space.kscience.dataforge.data/root-data.html","searchKeys":["rootData","suspend fun <T : Any> DataSet<T>.rootData(): Data<T>?","space.kscience.dataforge.data.rootData"]},{"name":"suspend fun <T : Any> DataSet<T>.seal(): DataTree<T>","description":"space.kscience.dataforge.data.seal","location":"dataforge-data/space.kscience.dataforge.data/seal.html","searchKeys":["seal","suspend fun <T : Any> DataSet<T>.seal(): DataTree<T>","space.kscience.dataforge.data.seal"]},{"name":"suspend fun <T : Any> DataSetBuilder<T>.emit(data: NamedData<T>)","description":"space.kscience.dataforge.data.emit","location":"dataforge-data/space.kscience.dataforge.data/emit.html","searchKeys":["emit","suspend fun <T : Any> DataSetBuilder<T>.emit(data: NamedData<T>)","space.kscience.dataforge.data.emit"]},{"name":"suspend fun <T : Any> DataSetBuilder<T>.emit(name: Name, block: suspend DataSetBuilder<T>.() -> Unit)","description":"space.kscience.dataforge.data.emit","location":"dataforge-data/space.kscience.dataforge.data/emit.html","searchKeys":["emit","suspend fun <T : Any> DataSetBuilder<T>.emit(name: Name, block: suspend DataSetBuilder<T>.() -> Unit)","space.kscience.dataforge.data.emit"]},{"name":"suspend fun <T : Any> DataSetBuilder<T>.emit(name: String, block: suspend DataSetBuilder<T>.() -> Unit)","description":"space.kscience.dataforge.data.emit","location":"dataforge-data/space.kscience.dataforge.data/emit.html","searchKeys":["emit","suspend fun <T : Any> DataSetBuilder<T>.emit(name: String, block: suspend DataSetBuilder<T>.() -> Unit)","space.kscience.dataforge.data.emit"]},{"name":"suspend fun <T : Any> DataSetBuilder<T>.emit(name: String, data: Data<T>)","description":"space.kscience.dataforge.data.emit","location":"dataforge-data/space.kscience.dataforge.data/emit.html","searchKeys":["emit","suspend fun <T : Any> DataSetBuilder<T>.emit(name: String, data: Data<T>)","space.kscience.dataforge.data.emit"]},{"name":"suspend fun <T : Any> DataSetBuilder<T>.emit(name: String, set: DataSet<T>)","description":"space.kscience.dataforge.data.emit","location":"dataforge-data/space.kscience.dataforge.data/emit.html","searchKeys":["emit","suspend fun <T : Any> DataSetBuilder<T>.emit(name: String, set: DataSet<T>)","space.kscience.dataforge.data.emit"]},{"name":"suspend fun <T : Any> DataSetBuilder<T>.populate(flow: Flow<NamedData<T>>)","description":"space.kscience.dataforge.data.populate","location":"dataforge-data/space.kscience.dataforge.data/populate.html","searchKeys":["populate","suspend fun <T : Any> DataSetBuilder<T>.populate(flow: Flow<NamedData<T>>)","space.kscience.dataforge.data.populate"]},{"name":"suspend fun <T : Any> DataSetBuilder<T>.populate(tree: DataSet<T>)","description":"space.kscience.dataforge.data.populate","location":"dataforge-data/space.kscience.dataforge.data/populate.html","searchKeys":["populate","suspend fun <T : Any> DataSetBuilder<T>.populate(tree: DataSet<T>)","space.kscience.dataforge.data.populate"]},{"name":"suspend fun <T : Any> DataTree(dataType: KType, block: suspend DataSetBuilder<T>.() -> Unit): DataTree<T>","description":"space.kscience.dataforge.data.DataTree","location":"dataforge-data/space.kscience.dataforge.data/-data-tree.html","searchKeys":["DataTree","suspend fun <T : Any> DataTree(dataType: KType, block: suspend DataSetBuilder<T>.() -> Unit): DataTree<T>","space.kscience.dataforge.data.DataTree"]},{"name":"suspend fun <T> Goal<T>.await(): T","description":"space.kscience.dataforge.data.await","location":"dataforge-data/space.kscience.dataforge.data/await.html","searchKeys":["await","suspend fun <T> Goal<T>.await(): T","space.kscience.dataforge.data.await"]},{"name":"suspend fun DataSet<*>.getMeta(): Meta?","description":"space.kscience.dataforge.data.getMeta","location":"dataforge-data/space.kscience.dataforge.data/get-meta.html","searchKeys":["getMeta","suspend fun DataSet<*>.getMeta(): Meta?","space.kscience.dataforge.data.getMeta"]},{"name":"suspend fun DataSet<*>.toMeta(): Meta","description":"space.kscience.dataforge.data.toMeta","location":"dataforge-data/space.kscience.dataforge.data/to-meta.html","searchKeys":["toMeta","suspend fun DataSet<*>.toMeta(): Meta","space.kscience.dataforge.data.toMeta"]},{"name":"suspend fun DataSetBuilder<*>.meta(meta: Meta)","description":"space.kscience.dataforge.data.meta","location":"dataforge-data/space.kscience.dataforge.data/meta.html","searchKeys":["meta","suspend fun DataSetBuilder<*>.meta(meta: Meta)","space.kscience.dataforge.data.meta"]},{"name":"suspend fun DataSetBuilder<*>.meta(mutableMeta: MutableMeta.() -> Unit)","description":"space.kscience.dataforge.data.meta","location":"dataforge-data/space.kscience.dataforge.data/meta.html","searchKeys":["meta","suspend fun DataSetBuilder<*>.meta(mutableMeta: MutableMeta.() -> Unit)","space.kscience.dataforge.data.meta"]},{"name":"suspend tailrec fun <T : Any> DataTree<T>.getItem(name: Name): DataTreeItem<T>?","description":"space.kscience.dataforge.data.getItem","location":"dataforge-data/space.kscience.dataforge.data/get-item.html","searchKeys":["getItem","suspend tailrec fun <T : Any> DataTree<T>.getItem(name: Name): DataTreeItem<T>?","space.kscience.dataforge.data.getItem"]},{"name":"val <T : Any> DataSet<T>.updates: Flow<Name>","description":"space.kscience.dataforge.data.updates","location":"dataforge-data/space.kscience.dataforge.data/updates.html","searchKeys":["updates","val <T : Any> DataSet<T>.updates: Flow<Name>","space.kscience.dataforge.data.updates"]},{"name":"val <T : Any> DataSet<T>.updatesWithData: Flow<NamedData<T>>","description":"space.kscience.dataforge.data.updatesWithData","location":"dataforge-data/space.kscience.dataforge.data/updates-with-data.html","searchKeys":["updatesWithData","val <T : Any> DataSet<T>.updatesWithData: Flow<NamedData<T>>","space.kscience.dataforge.data.updatesWithData"]},{"name":"val <T : Any> DataTreeItem<T>.type: KType","description":"space.kscience.dataforge.data.type","location":"dataforge-data/space.kscience.dataforge.data/type.html","searchKeys":["type","val <T : Any> DataTreeItem<T>.type: KType","space.kscience.dataforge.data.type"]},{"name":"val <T : Any> DataTreeItem<T>?.data: Data<T>?","description":"space.kscience.dataforge.data.data","location":"dataforge-data/space.kscience.dataforge.data/data.html","searchKeys":["data","val <T : Any> DataTreeItem<T>?.data: Data<T>?","space.kscience.dataforge.data.data"]},{"name":"val <T : Any> DataTreeItem<T>?.tree: DataTree<T>?","description":"space.kscience.dataforge.data.tree","location":"dataforge-data/space.kscience.dataforge.data/tree.html","searchKeys":["tree","val <T : Any> DataTreeItem<T>?.tree: DataTree<T>?","space.kscience.dataforge.data.tree"]},{"name":"val CoroutineContext.monitor: CoroutineMonitor?","description":"space.kscience.dataforge.data.monitor","location":"dataforge-data/space.kscience.dataforge.data/monitor.html","searchKeys":["monitor","val CoroutineContext.monitor: CoroutineMonitor?","space.kscience.dataforge.data.monitor"]},{"name":"val CoroutineScope.monitor: CoroutineMonitor?","description":"space.kscience.dataforge.data.monitor","location":"dataforge-data/space.kscience.dataforge.data/monitor.html","searchKeys":["monitor","val CoroutineScope.monitor: CoroutineMonitor?","space.kscience.dataforge.data.monitor"]},{"name":"val EMPTY: DataSet<Nothing>","description":"space.kscience.dataforge.data.DataSet.Companion.EMPTY","location":"dataforge-data/space.kscience.dataforge.data/-data-set/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: DataSet<Nothing>","space.kscience.dataforge.data.DataSet.Companion.EMPTY"]},{"name":"val Goal<*>.isComplete: Boolean","description":"space.kscience.dataforge.data.isComplete","location":"dataforge-data/space.kscience.dataforge.data/is-complete.html","searchKeys":["isComplete","val Goal<*>.isComplete: Boolean","space.kscience.dataforge.data.isComplete"]},{"name":"val Job.dependencies: Collection<Job>","description":"space.kscience.dataforge.data.dependencies","location":"dataforge-data/space.kscience.dataforge.data/dependencies.html","searchKeys":["dependencies","val Job.dependencies: Collection<Job>","space.kscience.dataforge.data.dependencies"]},{"name":"val Job.progress: Double","description":"space.kscience.dataforge.data.progress","location":"dataforge-data/space.kscience.dataforge.data/progress.html","searchKeys":["progress","val Job.progress: Double","space.kscience.dataforge.data.progress"]},{"name":"val Job.status: String","description":"space.kscience.dataforge.data.status","location":"dataforge-data/space.kscience.dataforge.data/status.html","searchKeys":["status","val Job.status: String","space.kscience.dataforge.data.status"]},{"name":"val Job.totalWork: Double","description":"space.kscience.dataforge.data.totalWork","location":"dataforge-data/space.kscience.dataforge.data/total-work.html","searchKeys":["totalWork","val Job.totalWork: Double","space.kscience.dataforge.data.totalWork"]},{"name":"val Job.workDone: Double","description":"space.kscience.dataforge.data.workDone","location":"dataforge-data/space.kscience.dataforge.data/work-done.html","searchKeys":["workDone","val Job.workDone: Double","space.kscience.dataforge.data.workDone"]},{"name":"val META_KEY: Name","description":"space.kscience.dataforge.data.DataSet.Companion.META_KEY","location":"dataforge-data/space.kscience.dataforge.data/-data-set/-companion/-m-e-t-a_-k-e-y.html","searchKeys":["META_KEY","val META_KEY: Name","space.kscience.dataforge.data.DataSet.Companion.META_KEY"]},{"name":"val actionMeta: Meta","description":"space.kscience.dataforge.actions.ActionEnv.actionMeta","location":"dataforge-data/space.kscience.dataforge.actions/-action-env/action-meta.html","searchKeys":["actionMeta","val actionMeta: Meta","space.kscience.dataforge.actions.ActionEnv.actionMeta"]},{"name":"val actionMeta: Meta","description":"space.kscience.dataforge.actions.MapActionBuilder.actionMeta","location":"dataforge-data/space.kscience.dataforge.actions/-map-action-builder/action-meta.html","searchKeys":["actionMeta","val actionMeta: Meta","space.kscience.dataforge.actions.MapActionBuilder.actionMeta"]},{"name":"val actionMeta: Meta","description":"space.kscience.dataforge.actions.ReduceGroupBuilder.actionMeta","location":"dataforge-data/space.kscience.dataforge.actions/-reduce-group-builder/action-meta.html","searchKeys":["actionMeta","val actionMeta: Meta","space.kscience.dataforge.actions.ReduceGroupBuilder.actionMeta"]},{"name":"val block: suspend () -> T","description":"space.kscience.dataforge.data.LazyGoal.block","location":"dataforge-data/space.kscience.dataforge.data/-lazy-goal/block.html","searchKeys":["block","val block: suspend () -> T","space.kscience.dataforge.data.LazyGoal.block"]},{"name":"val data: Data<T>","description":"space.kscience.dataforge.data.DataTreeItem.Leaf.data","location":"dataforge-data/space.kscience.dataforge.data/-data-tree-item/-leaf/data.html","searchKeys":["data","val data: Data<T>","space.kscience.dataforge.data.DataTreeItem.Leaf.data"]},{"name":"val meta: Meta","description":"space.kscience.dataforge.actions.ActionEnv.meta","location":"dataforge-data/space.kscience.dataforge.actions/-action-env/meta.html","searchKeys":["meta","val meta: Meta","space.kscience.dataforge.actions.ActionEnv.meta"]},{"name":"val meta: Meta","description":"space.kscience.dataforge.actions.SplitBuilder.meta","location":"dataforge-data/space.kscience.dataforge.actions/-split-builder/meta.html","searchKeys":["meta","val meta: Meta","space.kscience.dataforge.actions.SplitBuilder.meta"]},{"name":"val name: Name","description":"space.kscience.dataforge.actions.ActionEnv.name","location":"dataforge-data/space.kscience.dataforge.actions/-action-env/name.html","searchKeys":["name","val name: Name","space.kscience.dataforge.actions.ActionEnv.name"]},{"name":"val name: Name","description":"space.kscience.dataforge.actions.SplitBuilder.FragmentRule.name","location":"dataforge-data/space.kscience.dataforge.actions/-split-builder/-fragment-rule/name.html","searchKeys":["name","val name: Name","space.kscience.dataforge.actions.SplitBuilder.FragmentRule.name"]},{"name":"val name: Name","description":"space.kscience.dataforge.actions.SplitBuilder.name","location":"dataforge-data/space.kscience.dataforge.actions/-split-builder/name.html","searchKeys":["name","val name: Name","space.kscience.dataforge.actions.SplitBuilder.name"]},{"name":"val outputType: KType","description":"space.kscience.dataforge.data.CachingAction.outputType","location":"dataforge-data/space.kscience.dataforge.data/-caching-action/output-type.html","searchKeys":["outputType","val outputType: KType","space.kscience.dataforge.data.CachingAction.outputType"]},{"name":"val policy: GoalExecutionRestrictionPolicy","description":"space.kscience.dataforge.data.GoalExecutionRestriction.policy","location":"dataforge-data/space.kscience.dataforge.data/-goal-execution-restriction/policy.html","searchKeys":["policy","val policy: GoalExecutionRestrictionPolicy","space.kscience.dataforge.data.GoalExecutionRestriction.policy"]},{"name":"val tree: DataTree<T>","description":"space.kscience.dataforge.data.DataTreeItem.Node.tree","location":"dataforge-data/space.kscience.dataforge.data/-data-tree-item/-node/tree.html","searchKeys":["tree","val tree: DataTree<T>","space.kscience.dataforge.data.DataTreeItem.Node.tree"]},{"name":"val value: T","description":"space.kscience.dataforge.data.StaticGoal.value","location":"dataforge-data/space.kscience.dataforge.data/-static-goal/value.html","searchKeys":["value","val value: T","space.kscience.dataforge.data.StaticGoal.value"]},{"name":"val values: Collection<Job>","description":"space.kscience.dataforge.data.Dependencies.values","location":"dataforge-data/space.kscience.dataforge.data/-dependencies/values.html","searchKeys":["values","val values: Collection<Job>","space.kscience.dataforge.data.Dependencies.values"]},{"name":"var meta: MutableMeta","description":"space.kscience.dataforge.actions.JoinGroup.meta","location":"dataforge-data/space.kscience.dataforge.actions/-join-group/meta.html","searchKeys":["meta","var meta: MutableMeta","space.kscience.dataforge.actions.JoinGroup.meta"]},{"name":"var meta: MutableMeta","description":"space.kscience.dataforge.actions.MapActionBuilder.meta","location":"dataforge-data/space.kscience.dataforge.actions/-map-action-builder/meta.html","searchKeys":["meta","var meta: MutableMeta","space.kscience.dataforge.actions.MapActionBuilder.meta"]},{"name":"var meta: MutableMeta","description":"space.kscience.dataforge.actions.SplitBuilder.FragmentRule.meta","location":"dataforge-data/space.kscience.dataforge.actions/-split-builder/-fragment-rule/meta.html","searchKeys":["meta","var meta: MutableMeta","space.kscience.dataforge.actions.SplitBuilder.FragmentRule.meta"]},{"name":"var name: Name","description":"space.kscience.dataforge.actions.MapActionBuilder.name","location":"dataforge-data/space.kscience.dataforge.actions/-map-action-builder/name.html","searchKeys":["name","var name: Name","space.kscience.dataforge.actions.MapActionBuilder.name"]},{"name":"var name: String","description":"space.kscience.dataforge.actions.JoinGroup.name","location":"dataforge-data/space.kscience.dataforge.actions/-join-group/name.html","searchKeys":["name","var name: String","space.kscience.dataforge.actions.JoinGroup.name"]},{"name":"var status: String","description":"space.kscience.dataforge.data.CoroutineMonitor.status","location":"dataforge-data/space.kscience.dataforge.data/-coroutine-monitor/status.html","searchKeys":["status","var status: String","space.kscience.dataforge.data.CoroutineMonitor.status"]},{"name":"var totalWork: Double = 1.0","description":"space.kscience.dataforge.data.CoroutineMonitor.totalWork","location":"dataforge-data/space.kscience.dataforge.data/-coroutine-monitor/total-work.html","searchKeys":["totalWork","var totalWork: Double = 1.0","space.kscience.dataforge.data.CoroutineMonitor.totalWork"]},{"name":"var workDone: Double = 0.0","description":"space.kscience.dataforge.data.CoroutineMonitor.workDone","location":"dataforge-data/space.kscience.dataforge.data/-coroutine-monitor/work-done.html","searchKeys":["workDone","var workDone: Double = 0.0","space.kscience.dataforge.data.CoroutineMonitor.workDone"]},{"name":"fun buildWorkspace(scriptFile: File): Workspace","description":"space.kscience.dataforge.scripting.Builders.buildWorkspace","location":"dataforge-scripting/space.kscience.dataforge.scripting/-builders/build-workspace.html","searchKeys":["buildWorkspace","fun buildWorkspace(scriptFile: File): Workspace","space.kscience.dataforge.scripting.Builders.buildWorkspace"]},{"name":"fun buildWorkspace(scriptString: String): Workspace","description":"space.kscience.dataforge.scripting.Builders.buildWorkspace","location":"dataforge-scripting/space.kscience.dataforge.scripting/-builders/build-workspace.html","searchKeys":["buildWorkspace","fun buildWorkspace(scriptString: String): Workspace","space.kscience.dataforge.scripting.Builders.buildWorkspace"]},{"name":"object Builders","description":"space.kscience.dataforge.scripting.Builders","location":"dataforge-scripting/space.kscience.dataforge.scripting/-builders/index.html","searchKeys":["Builders","object Builders","space.kscience.dataforge.scripting.Builders"]},{"name":"abstract class WorkspacePlugin : AbstractPlugin, TaskContainer","description":"space.kscience.dataforge.workspace.WorkspacePlugin","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace-plugin/index.html","searchKeys":["WorkspacePlugin","abstract class WorkspacePlugin : AbstractPlugin, TaskContainer","space.kscience.dataforge.workspace.WorkspacePlugin"]},{"name":"abstract fun registerTask(taskName: Name, task: Task<*>)","description":"space.kscience.dataforge.workspace.TaskContainer.registerTask","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-container/register-task.html","searchKeys":["registerTask","abstract fun registerTask(taskName: Name, task: Task<*>)","space.kscience.dataforge.workspace.TaskContainer.registerTask"]},{"name":"abstract operator fun invoke(path: Path, meta: Meta): IOFormat<T>","description":"space.kscience.dataforge.workspace.FileFormatResolver.invoke","location":"dataforge-workspace/space.kscience.dataforge.workspace/-file-format-resolver/invoke.html","searchKeys":["invoke","abstract operator fun invoke(path: Path, meta: Meta): IOFormat<T>","space.kscience.dataforge.workspace.FileFormatResolver.invoke"]},{"name":"abstract override fun flowData(): Flow<TaskData<T>>","description":"space.kscience.dataforge.workspace.TaskResult.flowData","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-result/flow-data.html","searchKeys":["flowData","abstract override fun flowData(): Flow<TaskData<T>>","space.kscience.dataforge.workspace.TaskResult.flowData"]},{"name":"abstract suspend fun execute(workspace: Workspace, taskName: Name, taskMeta: Meta): TaskResult<T>","description":"space.kscience.dataforge.workspace.Task.execute","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task/execute.html","searchKeys":["execute","abstract suspend fun execute(workspace: Workspace, taskName: Name, taskMeta: Meta): TaskResult<T>","space.kscience.dataforge.workspace.Task.execute"]},{"name":"abstract suspend fun select(workspace: Workspace, meta: Meta): DataSet<T>","description":"space.kscience.dataforge.workspace.DataSelector.select","location":"dataforge-workspace/space.kscience.dataforge.workspace/-data-selector/select.html","searchKeys":["select","abstract suspend fun select(workspace: Workspace, meta: Meta): DataSet<T>","space.kscience.dataforge.workspace.DataSelector.select"]},{"name":"abstract suspend override fun getData(name: Name): TaskData<T>?","description":"space.kscience.dataforge.workspace.TaskResult.getData","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-result/get-data.html","searchKeys":["getData","abstract suspend override fun getData(name: Name): TaskData<T>?","space.kscience.dataforge.workspace.TaskResult.getData"]},{"name":"abstract val data: TaskResult<*>","description":"space.kscience.dataforge.workspace.Workspace.data","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace/data.html","searchKeys":["data","abstract val data: TaskResult<*>","space.kscience.dataforge.workspace.Workspace.data"]},{"name":"abstract val targets: Map<String, Meta>","description":"space.kscience.dataforge.workspace.Workspace.targets","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace/targets.html","searchKeys":["targets","abstract val targets: Map<String, Meta>","space.kscience.dataforge.workspace.Workspace.targets"]},{"name":"abstract val task: Name","description":"space.kscience.dataforge.workspace.TaskData.task","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-data/task.html","searchKeys":["task","abstract val task: Name","space.kscience.dataforge.workspace.TaskData.task"]},{"name":"abstract val taskMeta: Meta","description":"space.kscience.dataforge.workspace.TaskData.taskMeta","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-data/task-meta.html","searchKeys":["taskMeta","abstract val taskMeta: Meta","space.kscience.dataforge.workspace.TaskData.taskMeta"]},{"name":"abstract val taskMeta: Meta","description":"space.kscience.dataforge.workspace.TaskResult.taskMeta","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-result/task-meta.html","searchKeys":["taskMeta","abstract val taskMeta: Meta","space.kscience.dataforge.workspace.TaskResult.taskMeta"]},{"name":"abstract val taskName: Name","description":"space.kscience.dataforge.workspace.TaskResult.taskName","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-result/task-name.html","searchKeys":["taskName","abstract val taskName: Name","space.kscience.dataforge.workspace.TaskResult.taskName"]},{"name":"abstract val tasks: Map<Name, Task<*>>","description":"space.kscience.dataforge.workspace.Workspace.tasks","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace/tasks.html","searchKeys":["tasks","abstract val tasks: Map<Name, Task<*>>","space.kscience.dataforge.workspace.Workspace.tasks"]},{"name":"abstract val type: KType","description":"space.kscience.dataforge.workspace.FileFormatResolver.type","location":"dataforge-workspace/space.kscience.dataforge.workspace/-file-format-resolver/type.html","searchKeys":["type","abstract val type: KType","space.kscience.dataforge.workspace.FileFormatResolver.type"]},{"name":"abstract val workspace: Workspace","description":"space.kscience.dataforge.workspace.TaskData.workspace","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-data/workspace.html","searchKeys":["workspace","abstract val workspace: Workspace","space.kscience.dataforge.workspace.TaskData.workspace"]},{"name":"abstract val workspace: Workspace","description":"space.kscience.dataforge.workspace.TaskResult.workspace","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-result/workspace.html","searchKeys":["workspace","abstract val workspace: Workspace","space.kscience.dataforge.workspace.TaskResult.workspace"]},{"name":"class ContextGoalLogger(context: Context) : GoalLogger","description":"space.kscience.dataforge.workspace.ContextGoalLogger","location":"dataforge-workspace/space.kscience.dataforge.workspace/-context-goal-logger/index.html","searchKeys":["ContextGoalLogger","class ContextGoalLogger(context: Context) : GoalLogger","space.kscience.dataforge.workspace.ContextGoalLogger"]},{"name":"class SimpleWorkspace(context: Context, data: DataSet<*>, targets: Map<String, Meta>, externalTasks: Map<Name, Task<*>>) : Workspace","description":"space.kscience.dataforge.workspace.SimpleWorkspace","location":"dataforge-workspace/space.kscience.dataforge.workspace/-simple-workspace/index.html","searchKeys":["SimpleWorkspace","class SimpleWorkspace(context: Context, data: DataSet<*>, targets: Map<String, Meta>, externalTasks: Map<Name, Task<*>>) : Workspace","space.kscience.dataforge.workspace.SimpleWorkspace"]},{"name":"class TaskResultBuilder<T : Any>(workspace: Workspace, taskName: Name, taskMeta: Meta, dataDrop: DataSetBuilder<T>) : DataSetBuilder<T> ","description":"space.kscience.dataforge.workspace.TaskResultBuilder","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-result-builder/index.html","searchKeys":["TaskResultBuilder","class TaskResultBuilder<T : Any>(workspace: Workspace, taskName: Name, taskMeta: Meta, dataDrop: DataSetBuilder<T>) : DataSetBuilder<T> ","space.kscience.dataforge.workspace.TaskResultBuilder"]},{"name":"class WorkspaceBuilder(parentContext: Context) : TaskContainer","description":"space.kscience.dataforge.workspace.WorkspaceBuilder","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace-builder/index.html","searchKeys":["WorkspaceBuilder","class WorkspaceBuilder(parentContext: Context) : TaskContainer","space.kscience.dataforge.workspace.WorkspaceBuilder"]},{"name":"const val TYPE: String","description":"space.kscience.dataforge.workspace.Task.Companion.TYPE","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task/-companion/-t-y-p-e.html","searchKeys":["TYPE","const val TYPE: String","space.kscience.dataforge.workspace.Task.Companion.TYPE"]},{"name":"const val TYPE: String","description":"space.kscience.dataforge.workspace.Workspace.Companion.TYPE","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace/-companion/-t-y-p-e.html","searchKeys":["TYPE","const val TYPE: String","space.kscience.dataforge.workspace.Workspace.Companion.TYPE"]},{"name":"data class TaskReference<T : Any>(taskName: Name, task: Task<T>) : DataSelector<T> ","description":"space.kscience.dataforge.workspace.TaskReference","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-reference/index.html","searchKeys":["TaskReference","data class TaskReference<T : Any>(taskName: Name, task: Task<T>) : DataSelector<T> ","space.kscience.dataforge.workspace.TaskReference"]},{"name":"fun <T : Any> Envelope.toData(format: IOFormat<T>): Data<T>","description":"space.kscience.dataforge.workspace.toData","location":"dataforge-workspace/space.kscience.dataforge.workspace/to-data.html","searchKeys":["toData","fun <T : Any> Envelope.toData(format: IOFormat<T>): Data<T>","space.kscience.dataforge.workspace.toData"]},{"name":"fun <T : Any> IOPlugin.readDataFile(path: Path, formatResolver: FileFormatResolver<T>): Data<T>","description":"space.kscience.dataforge.workspace.readDataFile","location":"dataforge-workspace/space.kscience.dataforge.workspace/read-data-file.html","searchKeys":["readDataFile","fun <T : Any> IOPlugin.readDataFile(path: Path, formatResolver: FileFormatResolver<T>): Data<T>","space.kscience.dataforge.workspace.readDataFile"]},{"name":"fun <T : Any> Task(resultType: KType, descriptor: MetaDescriptor? = null, builder: suspend TaskResultBuilder<T>.() -> Unit): Task<T>","description":"space.kscience.dataforge.workspace.Task","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task.html","searchKeys":["Task","fun <T : Any> Task(resultType: KType, descriptor: MetaDescriptor? = null, builder: suspend TaskResultBuilder<T>.() -> Unit): Task<T>","space.kscience.dataforge.workspace.Task"]},{"name":"fun <T : Any> TaskReference(taskName: Name, task: Task<T>)","description":"space.kscience.dataforge.workspace.TaskReference.TaskReference","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-reference/-task-reference.html","searchKeys":["TaskReference","fun <T : Any> TaskReference(taskName: Name, task: Task<T>)","space.kscience.dataforge.workspace.TaskReference.TaskReference"]},{"name":"fun <T : Any> TaskResultBuilder(workspace: Workspace, taskName: Name, taskMeta: Meta, dataDrop: DataSetBuilder<T>)","description":"space.kscience.dataforge.workspace.TaskResultBuilder.TaskResultBuilder","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-result-builder/-task-result-builder.html","searchKeys":["TaskResultBuilder","fun <T : Any> TaskResultBuilder(workspace: Workspace, taskName: Name, taskMeta: Meta, dataDrop: DataSetBuilder<T>)","space.kscience.dataforge.workspace.TaskResultBuilder.TaskResultBuilder"]},{"name":"fun <T : Any> Workspace.wrapData(data: Data<T>, name: Name, taskName: Name, stageMeta: Meta): TaskData<T>","description":"space.kscience.dataforge.workspace.wrapData","location":"dataforge-workspace/space.kscience.dataforge.workspace/wrap-data.html","searchKeys":["wrapData","fun <T : Any> Workspace.wrapData(data: Data<T>, name: Name, taskName: Name, stageMeta: Meta): TaskData<T>","space.kscience.dataforge.workspace.wrapData"]},{"name":"fun <T : Any> Workspace.wrapResult(dataSet: DataSet<T>, taskName: Name, taskMeta: Meta): TaskResult<T>","description":"space.kscience.dataforge.workspace.wrapResult","location":"dataforge-workspace/space.kscience.dataforge.workspace/wrap-result.html","searchKeys":["wrapResult","fun <T : Any> Workspace.wrapResult(dataSet: DataSet<T>, taskName: Name, taskMeta: Meta): TaskResult<T>","space.kscience.dataforge.workspace.wrapResult"]},{"name":"fun ContextGoalLogger(context: Context)","description":"space.kscience.dataforge.workspace.ContextGoalLogger.ContextGoalLogger","location":"dataforge-workspace/space.kscience.dataforge.workspace/-context-goal-logger/-context-goal-logger.html","searchKeys":["ContextGoalLogger","fun ContextGoalLogger(context: Context)","space.kscience.dataforge.workspace.ContextGoalLogger.ContextGoalLogger"]},{"name":"fun SimpleWorkspace(context: Context, data: DataSet<*>, targets: Map<String, Meta>, externalTasks: Map<Name, Task<*>>)","description":"space.kscience.dataforge.workspace.SimpleWorkspace.SimpleWorkspace","location":"dataforge-workspace/space.kscience.dataforge.workspace/-simple-workspace/-simple-workspace.html","searchKeys":["SimpleWorkspace","fun SimpleWorkspace(context: Context, data: DataSet<*>, targets: Map<String, Meta>, externalTasks: Map<Name, Task<*>>)","space.kscience.dataforge.workspace.SimpleWorkspace.SimpleWorkspace"]},{"name":"fun Workspace(parentContext: Context = Global, builder: WorkspaceBuilder.() -> Unit): Workspace","description":"space.kscience.dataforge.workspace.Workspace","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace.html","searchKeys":["Workspace","fun Workspace(parentContext: Context = Global, builder: WorkspaceBuilder.() -> Unit): Workspace","space.kscience.dataforge.workspace.Workspace"]},{"name":"fun WorkspaceBuilder(parentContext: Context = Global)","description":"space.kscience.dataforge.workspace.WorkspaceBuilder.WorkspaceBuilder","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace-builder/-workspace-builder.html","searchKeys":["WorkspaceBuilder","fun WorkspaceBuilder(parentContext: Context = Global)","space.kscience.dataforge.workspace.WorkspaceBuilder.WorkspaceBuilder"]},{"name":"fun WorkspaceBuilder.data(builder: suspend DataSetBuilder<Any>.() -> Unit)","description":"space.kscience.dataforge.workspace.data","location":"dataforge-workspace/space.kscience.dataforge.workspace/data.html","searchKeys":["data","fun WorkspaceBuilder.data(builder: suspend DataSetBuilder<Any>.() -> Unit)","space.kscience.dataforge.workspace.data"]},{"name":"fun WorkspacePlugin()","description":"space.kscience.dataforge.workspace.WorkspacePlugin.WorkspacePlugin","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace-plugin/-workspace-plugin.html","searchKeys":["WorkspacePlugin","fun WorkspacePlugin()","space.kscience.dataforge.workspace.WorkspacePlugin.WorkspacePlugin"]},{"name":"fun build(): Workspace","description":"space.kscience.dataforge.workspace.WorkspaceBuilder.build","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace-builder/build.html","searchKeys":["build","fun build(): Workspace","space.kscience.dataforge.workspace.WorkspaceBuilder.build"]},{"name":"fun context(block: ContextBuilder.() -> Unit = {})","description":"space.kscience.dataforge.workspace.WorkspaceBuilder.context","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace-builder/context.html","searchKeys":["context","fun context(block: ContextBuilder.() -> Unit = {})","space.kscience.dataforge.workspace.WorkspaceBuilder.context"]},{"name":"fun target(name: String, meta: Meta?)","description":"space.kscience.dataforge.workspace.WorkspaceBuilder.target","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace-builder/target.html","searchKeys":["target","fun target(name: String, meta: Meta?)","space.kscience.dataforge.workspace.WorkspaceBuilder.target"]},{"name":"inline fun <T : Any> IOPlugin.readDataFile(path: Path): Data<T>","description":"space.kscience.dataforge.workspace.readDataFile","location":"dataforge-workspace/space.kscience.dataforge.workspace/read-data-file.html","searchKeys":["readDataFile","inline fun <T : Any> IOPlugin.readDataFile(path: Path): Data<T>","space.kscience.dataforge.workspace.readDataFile"]},{"name":"inline fun <T : Any> Task(descriptor: MetaDescriptor? = null, noinline builder: suspend TaskResultBuilder<T>.() -> Unit): Task<T>","description":"space.kscience.dataforge.workspace.Task","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task.html","searchKeys":["Task","inline fun <T : Any> Task(descriptor: MetaDescriptor? = null, noinline builder: suspend TaskResultBuilder<T>.() -> Unit): Task<T>","space.kscience.dataforge.workspace.Task"]},{"name":"inline fun <T : Any> TaskContainer.registerTask(name: String, noinline descriptorBuilder: MetaDescriptorBuilder.() -> Unit = {}, noinline builder: suspend TaskResultBuilder<T>.() -> Unit)","description":"space.kscience.dataforge.workspace.registerTask","location":"dataforge-workspace/space.kscience.dataforge.workspace/register-task.html","searchKeys":["registerTask","inline fun <T : Any> TaskContainer.registerTask(name: String, noinline descriptorBuilder: MetaDescriptorBuilder.() -> Unit = {}, noinline builder: suspend TaskResultBuilder<T>.() -> Unit)","space.kscience.dataforge.workspace.registerTask"]},{"name":"inline fun <T : Any> TaskContainer.task(descriptor: MetaDescriptor, noinline builder: suspend TaskResultBuilder<T>.() -> Unit): PropertyDelegateProvider<Any?, ReadOnlyProperty<Any?, TaskReference<T>>>","description":"space.kscience.dataforge.workspace.task","location":"dataforge-workspace/space.kscience.dataforge.workspace/task.html","searchKeys":["task","inline fun <T : Any> TaskContainer.task(descriptor: MetaDescriptor, noinline builder: suspend TaskResultBuilder<T>.() -> Unit): PropertyDelegateProvider<Any?, ReadOnlyProperty<Any?, TaskReference<T>>>","space.kscience.dataforge.workspace.task"]},{"name":"inline fun <T : Any> TaskContainer.task(noinline descriptorBuilder: MetaDescriptorBuilder.() -> Unit = {}, noinline builder: suspend TaskResultBuilder<T>.() -> Unit): PropertyDelegateProvider<Any?, ReadOnlyProperty<Any?, TaskReference<T>>>","description":"space.kscience.dataforge.workspace.task","location":"dataforge-workspace/space.kscience.dataforge.workspace/task.html","searchKeys":["task","inline fun <T : Any> TaskContainer.task(noinline descriptorBuilder: MetaDescriptorBuilder.() -> Unit = {}, noinline builder: suspend TaskResultBuilder<T>.() -> Unit): PropertyDelegateProvider<Any?, ReadOnlyProperty<Any?, TaskReference<T>>>","space.kscience.dataforge.workspace.task"]},{"name":"inline fun <T : Any> TaskResultBuilder<*>.data(namePattern: Name? = null): DataSelector<T>","description":"space.kscience.dataforge.workspace.data","location":"dataforge-workspace/space.kscience.dataforge.workspace/data.html","searchKeys":["data","inline fun <T : Any> TaskResultBuilder<*>.data(namePattern: Name? = null): DataSelector<T>","space.kscience.dataforge.workspace.data"]},{"name":"inline fun WorkspaceBuilder.target(name: String, mutableMeta: MutableMeta.() -> Unit)","description":"space.kscience.dataforge.workspace.target","location":"dataforge-workspace/space.kscience.dataforge.workspace/target.html","searchKeys":["target","inline fun WorkspaceBuilder.target(name: String, mutableMeta: MutableMeta.() -> Unit)","space.kscience.dataforge.workspace.target"]},{"name":"inline suspend fun <T : Any, R : Any> TaskResultBuilder<R>.pipeFrom(selector: DataSelector<T>, crossinline action: suspend (T, name: Name, meta: Meta) -> R)","description":"space.kscience.dataforge.workspace.pipeFrom","location":"dataforge-workspace/space.kscience.dataforge.workspace/pipe-from.html","searchKeys":["pipeFrom","inline suspend fun <T : Any, R : Any> TaskResultBuilder<R>.pipeFrom(selector: DataSelector<T>, crossinline action: suspend (T, name: Name, meta: Meta) -> R)","space.kscience.dataforge.workspace.pipeFrom"]},{"name":"inline suspend fun <T : Any> IOPlugin.readDataDirectory(path: Path): DataTree<T>","description":"space.kscience.dataforge.workspace.readDataDirectory","location":"dataforge-workspace/space.kscience.dataforge.workspace/read-data-directory.html","searchKeys":["readDataDirectory","inline suspend fun <T : Any> IOPlugin.readDataDirectory(path: Path): DataTree<T>","space.kscience.dataforge.workspace.readDataDirectory"]},{"name":"inline suspend fun <T : Any> TaskResultBuilder<*>.fromTask(task: Name, taskMeta: Meta = Meta.EMPTY): DataSet<T>","description":"space.kscience.dataforge.workspace.fromTask","location":"dataforge-workspace/space.kscience.dataforge.workspace/from-task.html","searchKeys":["fromTask","inline suspend fun <T : Any> TaskResultBuilder<*>.fromTask(task: Name, taskMeta: Meta = Meta.EMPTY): DataSet<T>","space.kscience.dataforge.workspace.fromTask"]},{"name":"interface DataSelector<T : Any>","description":"space.kscience.dataforge.workspace.DataSelector","location":"dataforge-workspace/space.kscience.dataforge.workspace/-data-selector/index.html","searchKeys":["DataSelector","interface DataSelector<T : Any>","space.kscience.dataforge.workspace.DataSelector"]},{"name":"interface FileFormatResolver<T : Any>","description":"space.kscience.dataforge.workspace.FileFormatResolver","location":"dataforge-workspace/space.kscience.dataforge.workspace/-file-format-resolver/index.html","searchKeys":["FileFormatResolver","interface FileFormatResolver<T : Any>","space.kscience.dataforge.workspace.FileFormatResolver"]},{"name":"interface Task<out T : Any> : Described","description":"space.kscience.dataforge.workspace.Task","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task/index.html","searchKeys":["Task","interface Task<out T : Any> : Described","space.kscience.dataforge.workspace.Task"]},{"name":"interface TaskContainer","description":"space.kscience.dataforge.workspace.TaskContainer","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-container/index.html","searchKeys":["TaskContainer","interface TaskContainer","space.kscience.dataforge.workspace.TaskContainer"]},{"name":"interface TaskData<out T : Any> : NamedData<T> ","description":"space.kscience.dataforge.workspace.TaskData","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-data/index.html","searchKeys":["TaskData","interface TaskData<out T : Any> : NamedData<T> ","space.kscience.dataforge.workspace.TaskData"]},{"name":"interface TaskResult<out T : Any> : DataSet<T> ","description":"space.kscience.dataforge.workspace.TaskResult","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-result/index.html","searchKeys":["TaskResult","interface TaskResult<out T : Any> : DataSet<T> ","space.kscience.dataforge.workspace.TaskResult"]},{"name":"interface Workspace : ContextAware, Provider","description":"space.kscience.dataforge.workspace.Workspace","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace/index.html","searchKeys":["Workspace","interface Workspace : ContextAware, Provider","space.kscience.dataforge.workspace.Workspace"]},{"name":"object Companion","description":"space.kscience.dataforge.workspace.Task.Companion","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.workspace.Task.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.workspace.Workspace.Companion","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.workspace.Workspace.Companion"]},{"name":"open override fun content(target: String): Map<Name, Any>","description":"space.kscience.dataforge.workspace.Workspace.content","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace/content.html","searchKeys":["content","open override fun content(target: String): Map<Name, Any>","space.kscience.dataforge.workspace.Workspace.content"]},{"name":"open override fun content(target: String): Map<Name, Any>","description":"space.kscience.dataforge.workspace.WorkspacePlugin.content","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace-plugin/content.html","searchKeys":["content","open override fun content(target: String): Map<Name, Any>","space.kscience.dataforge.workspace.WorkspacePlugin.content"]},{"name":"open override fun emit(vararg tags: String, message: suspend () -> String)","description":"space.kscience.dataforge.workspace.ContextGoalLogger.emit","location":"dataforge-workspace/space.kscience.dataforge.workspace/-context-goal-logger/emit.html","searchKeys":["emit","open override fun emit(vararg tags: String, message: suspend () -> String)","space.kscience.dataforge.workspace.ContextGoalLogger.emit"]},{"name":"open override fun registerTask(taskName: Name, task: Task<*>)","description":"space.kscience.dataforge.workspace.WorkspaceBuilder.registerTask","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace-builder/register-task.html","searchKeys":["registerTask","open override fun registerTask(taskName: Name, task: Task<*>)","space.kscience.dataforge.workspace.WorkspaceBuilder.registerTask"]},{"name":"open override fun registerTask(taskName: Name, task: Task<*>)","description":"space.kscience.dataforge.workspace.WorkspacePlugin.registerTask","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace-plugin/register-task.html","searchKeys":["registerTask","open override fun registerTask(taskName: Name, task: Task<*>)","space.kscience.dataforge.workspace.WorkspacePlugin.registerTask"]},{"name":"open override val context: Context","description":"space.kscience.dataforge.workspace.SimpleWorkspace.context","location":"dataforge-workspace/space.kscience.dataforge.workspace/-simple-workspace/context.html","searchKeys":["context","open override val context: Context","space.kscience.dataforge.workspace.SimpleWorkspace.context"]},{"name":"open override val data: TaskResult<*>","description":"space.kscience.dataforge.workspace.SimpleWorkspace.data","location":"dataforge-workspace/space.kscience.dataforge.workspace/-simple-workspace/data.html","searchKeys":["data","open override val data: TaskResult<*>","space.kscience.dataforge.workspace.SimpleWorkspace.data"]},{"name":"open override val targets: Map<String, Meta>","description":"space.kscience.dataforge.workspace.SimpleWorkspace.targets","location":"dataforge-workspace/space.kscience.dataforge.workspace/-simple-workspace/targets.html","searchKeys":["targets","open override val targets: Map<String, Meta>","space.kscience.dataforge.workspace.SimpleWorkspace.targets"]},{"name":"open override val tasks: Map<Name, Task<*>>","description":"space.kscience.dataforge.workspace.SimpleWorkspace.tasks","location":"dataforge-workspace/space.kscience.dataforge.workspace/-simple-workspace/tasks.html","searchKeys":["tasks","open override val tasks: Map<Name, Task<*>>","space.kscience.dataforge.workspace.SimpleWorkspace.tasks"]},{"name":"open suspend fun produce(taskName: Name, taskMeta: Meta): TaskResult<*>","description":"space.kscience.dataforge.workspace.Workspace.produce","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace/produce.html","searchKeys":["produce","open suspend fun produce(taskName: Name, taskMeta: Meta): TaskResult<*>","space.kscience.dataforge.workspace.Workspace.produce"]},{"name":"open suspend fun produceData(taskName: Name, taskMeta: Meta, name: Name): TaskData<*>?","description":"space.kscience.dataforge.workspace.Workspace.produceData","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace/produce-data.html","searchKeys":["produceData","open suspend fun produceData(taskName: Name, taskMeta: Meta, name: Name): TaskData<*>?","space.kscience.dataforge.workspace.Workspace.produceData"]},{"name":"open suspend override fun select(workspace: Workspace, meta: Meta): DataSet<T>","description":"space.kscience.dataforge.workspace.TaskReference.select","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-reference/select.html","searchKeys":["select","open suspend override fun select(workspace: Workspace, meta: Meta): DataSet<T>","space.kscience.dataforge.workspace.TaskReference.select"]},{"name":"suspend fun <T : Any> Data<T>.toEnvelope(format: IOFormat<T>): Envelope","description":"space.kscience.dataforge.workspace.toEnvelope","location":"dataforge-workspace/space.kscience.dataforge.workspace/to-envelope.html","searchKeys":["toEnvelope","suspend fun <T : Any> Data<T>.toEnvelope(format: IOFormat<T>): Envelope","space.kscience.dataforge.workspace.toEnvelope"]},{"name":"suspend fun <T : Any> DataSetBuilder<T>.file(plugin: IOPlugin, path: Path, formatResolver: FileFormatResolver<T>)","description":"space.kscience.dataforge.workspace.file","location":"dataforge-workspace/space.kscience.dataforge.workspace/file.html","searchKeys":["file","suspend fun <T : Any> DataSetBuilder<T>.file(plugin: IOPlugin, path: Path, formatResolver: FileFormatResolver<T>)","space.kscience.dataforge.workspace.file"]},{"name":"suspend fun <T : Any> IOPlugin.readDataDirectory(path: Path, formatResolver: FileFormatResolver<T>): DataTree<T>","description":"space.kscience.dataforge.workspace.readDataDirectory","location":"dataforge-workspace/space.kscience.dataforge.workspace/read-data-directory.html","searchKeys":["readDataDirectory","suspend fun <T : Any> IOPlugin.readDataDirectory(path: Path, formatResolver: FileFormatResolver<T>): DataTree<T>","space.kscience.dataforge.workspace.readDataDirectory"]},{"name":"suspend fun <T : Any> IOPlugin.writeDataDirectory(path: Path, tree: DataTree<T>, format: IOFormat<T>, envelopeFormat: EnvelopeFormat? = null, metaFormat: MetaFormatFactory? = null)","description":"space.kscience.dataforge.workspace.writeDataDirectory","location":"dataforge-workspace/space.kscience.dataforge.workspace/write-data-directory.html","searchKeys":["writeDataDirectory","suspend fun <T : Any> IOPlugin.writeDataDirectory(path: Path, tree: DataTree<T>, format: IOFormat<T>, envelopeFormat: EnvelopeFormat? = null, metaFormat: MetaFormatFactory? = null)","space.kscience.dataforge.workspace.writeDataDirectory"]},{"name":"suspend fun <T : Any> IOPlugin.writeZip(path: Path, tree: DataTree<T>, format: IOFormat<T>, envelopeFormat: EnvelopeFormat = TaggedEnvelopeFormat)","description":"space.kscience.dataforge.workspace.writeZip","location":"dataforge-workspace/space.kscience.dataforge.workspace/write-zip.html","searchKeys":["writeZip","suspend fun <T : Any> IOPlugin.writeZip(path: Path, tree: DataTree<T>, format: IOFormat<T>, envelopeFormat: EnvelopeFormat = TaggedEnvelopeFormat)","space.kscience.dataforge.workspace.writeZip"]},{"name":"suspend fun <T : Any> TaskResultBuilder<*>.from(selector: DataSelector<T>): DataSet<T>","description":"space.kscience.dataforge.workspace.from","location":"dataforge-workspace/space.kscience.dataforge.workspace/from.html","searchKeys":["from","suspend fun <T : Any> TaskResultBuilder<*>.from(selector: DataSelector<T>): DataSet<T>","space.kscience.dataforge.workspace.from"]},{"name":"suspend fun Workspace.produce(task: String, block: MutableMeta.() -> Unit = {}): TaskResult<*>","description":"space.kscience.dataforge.workspace.produce","location":"dataforge-workspace/space.kscience.dataforge.workspace/produce.html","searchKeys":["produce","suspend fun Workspace.produce(task: String, block: MutableMeta.() -> Unit = {}): TaskResult<*>","space.kscience.dataforge.workspace.produce"]},{"name":"suspend fun Workspace.produce(task: String, meta: Meta): TaskResult<*>","description":"space.kscience.dataforge.workspace.produce","location":"dataforge-workspace/space.kscience.dataforge.workspace/produce.html","searchKeys":["produce","suspend fun Workspace.produce(task: String, meta: Meta): TaskResult<*>","space.kscience.dataforge.workspace.produce"]},{"name":"suspend fun Workspace.produce(task: String, target: String): TaskResult<*>","description":"space.kscience.dataforge.workspace.produce","location":"dataforge-workspace/space.kscience.dataforge.workspace/produce.html","searchKeys":["produce","suspend fun Workspace.produce(task: String, target: String): TaskResult<*>","space.kscience.dataforge.workspace.produce"]},{"name":"suspend fun buildActiveData(builder: suspend ActiveDataTree<Any>.() -> Unit)","description":"space.kscience.dataforge.workspace.WorkspaceBuilder.buildActiveData","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace-builder/build-active-data.html","searchKeys":["buildActiveData","suspend fun buildActiveData(builder: suspend ActiveDataTree<Any>.() -> Unit)","space.kscience.dataforge.workspace.WorkspaceBuilder.buildActiveData"]},{"name":"suspend fun buildData(builder: suspend DataSetBuilder<Any>.() -> Unit)","description":"space.kscience.dataforge.workspace.WorkspaceBuilder.buildData","location":"dataforge-workspace/space.kscience.dataforge.workspace/-workspace-builder/build-data.html","searchKeys":["buildData","suspend fun buildData(builder: suspend DataSetBuilder<Any>.() -> Unit)","space.kscience.dataforge.workspace.WorkspaceBuilder.buildData"]},{"name":"val TaskResultBuilder<*>.allData: DataSelector<*>","description":"space.kscience.dataforge.workspace.allData","location":"dataforge-workspace/space.kscience.dataforge.workspace/all-data.html","searchKeys":["allData","val TaskResultBuilder<*>.allData: DataSelector<*>","space.kscience.dataforge.workspace.allData"]},{"name":"val Workspace.goalLogger: GoalLogger","description":"space.kscience.dataforge.workspace.goalLogger","location":"dataforge-workspace/space.kscience.dataforge.workspace/goal-logger.html","searchKeys":["goalLogger","val Workspace.goalLogger: GoalLogger","space.kscience.dataforge.workspace.goalLogger"]},{"name":"val context: Context","description":"space.kscience.dataforge.workspace.ContextGoalLogger.context","location":"dataforge-workspace/space.kscience.dataforge.workspace/-context-goal-logger/context.html","searchKeys":["context","val context: Context","space.kscience.dataforge.workspace.ContextGoalLogger.context"]},{"name":"val task: Task<T>","description":"space.kscience.dataforge.workspace.TaskReference.task","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-reference/task.html","searchKeys":["task","val task: Task<T>","space.kscience.dataforge.workspace.TaskReference.task"]},{"name":"val taskMeta: Meta","description":"space.kscience.dataforge.workspace.TaskResultBuilder.taskMeta","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-result-builder/task-meta.html","searchKeys":["taskMeta","val taskMeta: Meta","space.kscience.dataforge.workspace.TaskResultBuilder.taskMeta"]},{"name":"val taskName: Name","description":"space.kscience.dataforge.workspace.TaskReference.taskName","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-reference/task-name.html","searchKeys":["taskName","val taskName: Name","space.kscience.dataforge.workspace.TaskReference.taskName"]},{"name":"val taskName: Name","description":"space.kscience.dataforge.workspace.TaskResultBuilder.taskName","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-result-builder/task-name.html","searchKeys":["taskName","val taskName: Name","space.kscience.dataforge.workspace.TaskResultBuilder.taskName"]},{"name":"val workspace: Workspace","description":"space.kscience.dataforge.workspace.TaskResultBuilder.workspace","location":"dataforge-workspace/space.kscience.dataforge.workspace/-task-result-builder/workspace.html","searchKeys":["workspace","val workspace: Workspace","space.kscience.dataforge.workspace.TaskResultBuilder.workspace"]},{"name":"DF02(20u)","description":"space.kscience.dataforge.io.TaggedEnvelopeFormat.VERSION.DF02","location":"dataforge-io/space.kscience.dataforge.io/-tagged-envelope-format/-v-e-r-s-i-o-n/-d-f02/index.html","searchKeys":["DF02","DF02(20u)","space.kscience.dataforge.io.TaggedEnvelopeFormat.VERSION.DF02"]},{"name":"DF03(24u)","description":"space.kscience.dataforge.io.TaggedEnvelopeFormat.VERSION.DF03","location":"dataforge-io/space.kscience.dataforge.io/-tagged-envelope-format/-v-e-r-s-i-o-n/-d-f03/index.html","searchKeys":["DF03","DF03(24u)","space.kscience.dataforge.io.TaggedEnvelopeFormat.VERSION.DF03"]},{"name":"abstract fun <R> read(offset: Int = 0, atMost: Int = size - offset, block: Input.() -> R): R","description":"space.kscience.dataforge.io.Binary.read","location":"dataforge-io/space.kscience.dataforge.io/-binary/read.html","searchKeys":["read","abstract fun <R> read(offset: Int = 0, atMost: Int = size - offset, block: Input.() -> R): R","space.kscience.dataforge.io.Binary.read"]},{"name":"abstract fun consume(message: Envelope)","description":"space.kscience.dataforge.io.Consumer.consume","location":"dataforge-io/space.kscience.dataforge.io/-consumer/consume.html","searchKeys":["consume","abstract fun consume(message: Envelope)","space.kscience.dataforge.io.Consumer.consume"]},{"name":"abstract fun peekFormat(io: IOPlugin, binary: Binary): EnvelopeFormat?","description":"space.kscience.dataforge.io.EnvelopeFormatFactory.peekFormat","location":"dataforge-io/space.kscience.dataforge.io/-envelope-format-factory/peek-format.html","searchKeys":["peekFormat","abstract fun peekFormat(io: IOPlugin, binary: Binary): EnvelopeFormat?","space.kscience.dataforge.io.EnvelopeFormatFactory.peekFormat"]},{"name":"abstract fun readMeta(input: Input, descriptor: MetaDescriptor? = null): Meta","description":"space.kscience.dataforge.io.MetaFormat.readMeta","location":"dataforge-io/space.kscience.dataforge.io/-meta-format/read-meta.html","searchKeys":["readMeta","abstract fun readMeta(input: Input, descriptor: MetaDescriptor? = null): Meta","space.kscience.dataforge.io.MetaFormat.readMeta"]},{"name":"abstract fun readObject(input: Input): T","description":"space.kscience.dataforge.io.IOFormat.readObject","location":"dataforge-io/space.kscience.dataforge.io/-i-o-format/read-object.html","searchKeys":["readObject","abstract fun readObject(input: Input): T","space.kscience.dataforge.io.IOFormat.readObject"]},{"name":"abstract fun readPartial(input: Input): PartialEnvelope","description":"space.kscience.dataforge.io.EnvelopeFormat.readPartial","location":"dataforge-io/space.kscience.dataforge.io/-envelope-format/read-partial.html","searchKeys":["readPartial","abstract fun readPartial(input: Input): PartialEnvelope","space.kscience.dataforge.io.EnvelopeFormat.readPartial"]},{"name":"abstract fun writeEnvelope(output: Output, envelope: Envelope, metaFormatFactory: MetaFormatFactory = defaultMetaFormat, formatMeta: Meta = Meta.EMPTY)","description":"space.kscience.dataforge.io.EnvelopeFormat.writeEnvelope","location":"dataforge-io/space.kscience.dataforge.io/-envelope-format/write-envelope.html","searchKeys":["writeEnvelope","abstract fun writeEnvelope(output: Output, envelope: Envelope, metaFormatFactory: MetaFormatFactory = defaultMetaFormat, formatMeta: Meta = Meta.EMPTY)","space.kscience.dataforge.io.EnvelopeFormat.writeEnvelope"]},{"name":"abstract fun writeMeta(output: Output, meta: Meta, descriptor: MetaDescriptor? = null)","description":"space.kscience.dataforge.io.MetaFormat.writeMeta","location":"dataforge-io/space.kscience.dataforge.io/-meta-format/write-meta.html","searchKeys":["writeMeta","abstract fun writeMeta(output: Output, meta: Meta, descriptor: MetaDescriptor? = null)","space.kscience.dataforge.io.MetaFormat.writeMeta"]},{"name":"abstract fun writeObject(output: Output, obj: T)","description":"space.kscience.dataforge.io.IOFormat.writeObject","location":"dataforge-io/space.kscience.dataforge.io/-i-o-format/write-object.html","searchKeys":["writeObject","abstract fun writeObject(output: Output, obj: T)","space.kscience.dataforge.io.IOFormat.writeObject"]},{"name":"abstract operator override fun invoke(meta: Meta, context: Context): EnvelopeFormat","description":"space.kscience.dataforge.io.EnvelopeFormatFactory.invoke","location":"dataforge-io/space.kscience.dataforge.io/-envelope-format-factory/invoke.html","searchKeys":["invoke","abstract operator override fun invoke(meta: Meta, context: Context): EnvelopeFormat","space.kscience.dataforge.io.EnvelopeFormatFactory.invoke"]},{"name":"abstract operator override fun invoke(meta: Meta, context: Context): MetaFormat","description":"space.kscience.dataforge.io.MetaFormatFactory.invoke","location":"dataforge-io/space.kscience.dataforge.io/-meta-format-factory/invoke.html","searchKeys":["invoke","abstract operator override fun invoke(meta: Meta, context: Context): MetaFormat","space.kscience.dataforge.io.MetaFormatFactory.invoke"]},{"name":"abstract override fun readObject(input: Input): Envelope","description":"space.kscience.dataforge.io.EnvelopeFormat.readObject","location":"dataforge-io/space.kscience.dataforge.io/-envelope-format/read-object.html","searchKeys":["readObject","abstract override fun readObject(input: Input): Envelope","space.kscience.dataforge.io.EnvelopeFormat.readObject"]},{"name":"abstract suspend fun respond(request: Envelope): Envelope","description":"space.kscience.dataforge.io.Responder.respond","location":"dataforge-io/space.kscience.dataforge.io/-responder/respond.html","searchKeys":["respond","abstract suspend fun respond(request: Envelope): Envelope","space.kscience.dataforge.io.Responder.respond"]},{"name":"abstract val data: Binary?","description":"space.kscience.dataforge.io.Envelope.data","location":"dataforge-io/space.kscience.dataforge.io/-envelope/data.html","searchKeys":["data","abstract val data: Binary?","space.kscience.dataforge.io.Envelope.data"]},{"name":"abstract val meta: Meta","description":"space.kscience.dataforge.io.Envelope.meta","location":"dataforge-io/space.kscience.dataforge.io/-envelope/meta.html","searchKeys":["meta","abstract val meta: Meta","space.kscience.dataforge.io.Envelope.meta"]},{"name":"abstract val shortName: String","description":"space.kscience.dataforge.io.MetaFormatFactory.shortName","location":"dataforge-io/space.kscience.dataforge.io/-meta-format-factory/short-name.html","searchKeys":["shortName","abstract val shortName: String","space.kscience.dataforge.io.MetaFormatFactory.shortName"]},{"name":"abstract val size: Int","description":"space.kscience.dataforge.io.Binary.size","location":"dataforge-io/space.kscience.dataforge.io/-binary/size.html","searchKeys":["size","abstract val size: Int","space.kscience.dataforge.io.Binary.size"]},{"name":"abstract val type: KType","description":"space.kscience.dataforge.io.IOFormat.type","location":"dataforge-io/space.kscience.dataforge.io/-i-o-format/type.html","searchKeys":["type","abstract val type: KType","space.kscience.dataforge.io.IOFormat.type"]},{"name":"abstract val type: KType","description":"space.kscience.dataforge.io.IOFormatFactory.type","location":"dataforge-io/space.kscience.dataforge.io/-i-o-format-factory/type.html","searchKeys":["type","abstract val type: KType","space.kscience.dataforge.io.IOFormatFactory.type"]},{"name":"class BinaryView(source: Binary, start: Int, size: Int) : Binary","description":"space.kscience.dataforge.io.BinaryView","location":"dataforge-io/space.kscience.dataforge.io/-binary-view/index.html","searchKeys":["BinaryView","class BinaryView(source: Binary, start: Int, size: Int) : Binary","space.kscience.dataforge.io.BinaryView"]},{"name":"class EnvelopeBuilder : Envelope","description":"space.kscience.dataforge.io.EnvelopeBuilder","location":"dataforge-io/space.kscience.dataforge.io/-envelope-builder/index.html","searchKeys":["EnvelopeBuilder","class EnvelopeBuilder : Envelope","space.kscience.dataforge.io.EnvelopeBuilder"]},{"name":"class IOPlugin(meta: Meta) : AbstractPlugin","description":"space.kscience.dataforge.io.IOPlugin","location":"dataforge-io/space.kscience.dataforge.io/-i-o-plugin/index.html","searchKeys":["IOPlugin","class IOPlugin(meta: Meta) : AbstractPlugin","space.kscience.dataforge.io.IOPlugin"]},{"name":"class JsonMetaFormat(json: Json) : MetaFormat","description":"space.kscience.dataforge.io.JsonMetaFormat","location":"dataforge-io/space.kscience.dataforge.io/-json-meta-format/index.html","searchKeys":["JsonMetaFormat","class JsonMetaFormat(json: Json) : MetaFormat","space.kscience.dataforge.io.JsonMetaFormat"]},{"name":"class ProxyEnvelope(source: Envelope, meta: Meta) : Envelope","description":"space.kscience.dataforge.io.ProxyEnvelope","location":"dataforge-io/space.kscience.dataforge.io/-proxy-envelope/index.html","searchKeys":["ProxyEnvelope","class ProxyEnvelope(source: Envelope, meta: Meta) : Envelope","space.kscience.dataforge.io.ProxyEnvelope"]},{"name":"class SimpleEnvelope(meta: Meta, data: Binary?) : Envelope","description":"space.kscience.dataforge.io.SimpleEnvelope","location":"dataforge-io/space.kscience.dataforge.io/-simple-envelope/index.html","searchKeys":["SimpleEnvelope","class SimpleEnvelope(meta: Meta, data: Binary?) : Envelope","space.kscience.dataforge.io.SimpleEnvelope"]},{"name":"class TaggedEnvelopeFormat(io: IOPlugin, version: TaggedEnvelopeFormat.VERSION) : EnvelopeFormat","description":"space.kscience.dataforge.io.TaggedEnvelopeFormat","location":"dataforge-io/space.kscience.dataforge.io/-tagged-envelope-format/index.html","searchKeys":["TaggedEnvelopeFormat","class TaggedEnvelopeFormat(io: IOPlugin, version: TaggedEnvelopeFormat.VERSION) : EnvelopeFormat","space.kscience.dataforge.io.TaggedEnvelopeFormat"]},{"name":"class TaglessEnvelopeFormat(io: IOPlugin, meta: Meta) : EnvelopeFormat","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/index.html","searchKeys":["TaglessEnvelopeFormat","class TaglessEnvelopeFormat(io: IOPlugin, meta: Meta) : EnvelopeFormat","space.kscience.dataforge.io.TaglessEnvelopeFormat"]},{"name":"const val DATA_LENGTH_PROPERTY: String","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.DATA_LENGTH_PROPERTY","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/-companion/-d-a-t-a_-l-e-n-g-t-h_-p-r-o-p-e-r-t-y.html","searchKeys":["DATA_LENGTH_PROPERTY","const val DATA_LENGTH_PROPERTY: String","space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.DATA_LENGTH_PROPERTY"]},{"name":"const val DATA_START_PROPERTY: String","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.DATA_START_PROPERTY","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/-companion/-d-a-t-a_-s-t-a-r-t_-p-r-o-p-e-r-t-y.html","searchKeys":["DATA_START_PROPERTY","const val DATA_START_PROPERTY: String","space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.DATA_START_PROPERTY"]},{"name":"const val DEFAULT_DATA_START: String","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.DEFAULT_DATA_START","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/-companion/-d-e-f-a-u-l-t_-d-a-t-a_-s-t-a-r-t.html","searchKeys":["DEFAULT_DATA_START","const val DEFAULT_DATA_START: String","space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.DEFAULT_DATA_START"]},{"name":"const val DEFAULT_META_START: String","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.DEFAULT_META_START","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/-companion/-d-e-f-a-u-l-t_-m-e-t-a_-s-t-a-r-t.html","searchKeys":["DEFAULT_META_START","const val DEFAULT_META_START: String","space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.DEFAULT_META_START"]},{"name":"const val ENVELOPE_FORMAT_TYPE: String","description":"space.kscience.dataforge.io.EnvelopeFormatFactory.Companion.ENVELOPE_FORMAT_TYPE","location":"dataforge-io/space.kscience.dataforge.io/-envelope-format-factory/-companion/-e-n-v-e-l-o-p-e_-f-o-r-m-a-t_-t-y-p-e.html","searchKeys":["ENVELOPE_FORMAT_TYPE","const val ENVELOPE_FORMAT_TYPE: String","space.kscience.dataforge.io.EnvelopeFormatFactory.Companion.ENVELOPE_FORMAT_TYPE"]},{"name":"const val IO_FORMAT_TYPE: String","description":"space.kscience.dataforge.io.IOFormatFactory.Companion.IO_FORMAT_TYPE","location":"dataforge-io/space.kscience.dataforge.io/-i-o-format-factory/-companion/-i-o_-f-o-r-m-a-t_-t-y-p-e.html","searchKeys":["IO_FORMAT_TYPE","const val IO_FORMAT_TYPE: String","space.kscience.dataforge.io.IOFormatFactory.Companion.IO_FORMAT_TYPE"]},{"name":"const val META_FORMAT_TYPE: String","description":"space.kscience.dataforge.io.MetaFormatFactory.Companion.META_FORMAT_TYPE","location":"dataforge-io/space.kscience.dataforge.io/-meta-format-factory/-companion/-m-e-t-a_-f-o-r-m-a-t_-t-y-p-e.html","searchKeys":["META_FORMAT_TYPE","const val META_FORMAT_TYPE: String","space.kscience.dataforge.io.MetaFormatFactory.Companion.META_FORMAT_TYPE"]},{"name":"const val META_LENGTH_PROPERTY: String","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.META_LENGTH_PROPERTY","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/-companion/-m-e-t-a_-l-e-n-g-t-h_-p-r-o-p-e-r-t-y.html","searchKeys":["META_LENGTH_PROPERTY","const val META_LENGTH_PROPERTY: String","space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.META_LENGTH_PROPERTY"]},{"name":"const val META_START_PROPERTY: String","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.META_START_PROPERTY","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/-companion/-m-e-t-a_-s-t-a-r-t_-p-r-o-p-e-r-t-y.html","searchKeys":["META_START_PROPERTY","const val META_START_PROPERTY: String","space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.META_START_PROPERTY"]},{"name":"const val META_TYPE_PROPERTY: String","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.META_TYPE_PROPERTY","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/-companion/-m-e-t-a_-t-y-p-e_-p-r-o-p-e-r-t-y.html","searchKeys":["META_TYPE_PROPERTY","const val META_TYPE_PROPERTY: String","space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.META_TYPE_PROPERTY"]},{"name":"const val TAGLESS_ENVELOPE_HEADER: String","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.TAGLESS_ENVELOPE_HEADER","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/-companion/-t-a-g-l-e-s-s_-e-n-v-e-l-o-p-e_-h-e-a-d-e-r.html","searchKeys":["TAGLESS_ENVELOPE_HEADER","const val TAGLESS_ENVELOPE_HEADER: String","space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.TAGLESS_ENVELOPE_HEADER"]},{"name":"const val TAGLESS_ENVELOPE_TYPE: String","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.TAGLESS_ENVELOPE_TYPE","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/-companion/-t-a-g-l-e-s-s_-e-n-v-e-l-o-p-e_-t-y-p-e.html","searchKeys":["TAGLESS_ENVELOPE_TYPE","const val TAGLESS_ENVELOPE_TYPE: String","space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.TAGLESS_ENVELOPE_TYPE"]},{"name":"const val code: Int = 0x4446544c","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.code","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/-companion/code.html","searchKeys":["code","const val code: Int = 0x4446544c","space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.code"]},{"name":"data class EnvelopePart(binary: Binary, description: Meta?)","description":"space.kscience.dataforge.io.EnvelopePart","location":"dataforge-io/space.kscience.dataforge.io/-envelope-part/index.html","searchKeys":["EnvelopePart","data class EnvelopePart(binary: Binary, description: Meta?)","space.kscience.dataforge.io.EnvelopePart"]},{"name":"data class PartialEnvelope(meta: Meta, dataOffset: UInt, dataSize: ULong?)","description":"space.kscience.dataforge.io.PartialEnvelope","location":"dataforge-io/space.kscience.dataforge.io/-partial-envelope/index.html","searchKeys":["PartialEnvelope","data class PartialEnvelope(meta: Meta, dataOffset: UInt, dataSize: ULong?)","space.kscience.dataforge.io.PartialEnvelope"]},{"name":"enum VERSION : Enum<TaggedEnvelopeFormat.VERSION> ","description":"space.kscience.dataforge.io.TaggedEnvelopeFormat.VERSION","location":"dataforge-io/space.kscience.dataforge.io/-tagged-envelope-format/-v-e-r-s-i-o-n/index.html","searchKeys":["VERSION","enum VERSION : Enum<TaggedEnvelopeFormat.VERSION> ","space.kscience.dataforge.io.TaggedEnvelopeFormat.VERSION"]},{"name":"fun <R> Path.read(block: Input.() -> R): R","description":"space.kscience.dataforge.io.read","location":"dataforge-io/space.kscience.dataforge.io/read.html","searchKeys":["read","fun <R> Path.read(block: Input.() -> R): R","space.kscience.dataforge.io.read"]},{"name":"fun <T : Any> Binary.readWith(format: IOFormat<T>): T","description":"space.kscience.dataforge.io.readWith","location":"dataforge-io/space.kscience.dataforge.io/read-with.html","searchKeys":["readWith","fun <T : Any> Binary.readWith(format: IOFormat<T>): T","space.kscience.dataforge.io.readWith"]},{"name":"fun <T : Any> IOFormat<T>.readObject(binary: Binary): T","description":"space.kscience.dataforge.io.readObject","location":"dataforge-io/space.kscience.dataforge.io/read-object.html","searchKeys":["readObject","fun <T : Any> IOFormat<T>.readObject(binary: Binary): T","space.kscience.dataforge.io.readObject"]},{"name":"fun <T : Any> IOFormat<T>.toBinary(obj: T): Binary","description":"space.kscience.dataforge.io.toBinary","location":"dataforge-io/space.kscience.dataforge.io/to-binary.html","searchKeys":["toBinary","fun <T : Any> IOFormat<T>.toBinary(obj: T): Binary","space.kscience.dataforge.io.toBinary"]},{"name":"fun <T : Any> IOFormat<T>.writeToFile(path: Path, obj: T)","description":"space.kscience.dataforge.io.writeToFile","location":"dataforge-io/space.kscience.dataforge.io/write-to-file.html","searchKeys":["writeToFile","fun <T : Any> IOFormat<T>.writeToFile(path: Path, obj: T)","space.kscience.dataforge.io.writeToFile"]},{"name":"fun <T : Any> Input.readWith(format: IOFormat<T>): T","description":"space.kscience.dataforge.io.readWith","location":"dataforge-io/space.kscience.dataforge.io/read-with.html","searchKeys":["readWith","fun <T : Any> Input.readWith(format: IOFormat<T>): T","space.kscience.dataforge.io.readWith"]},{"name":"fun <T : Any> Output.writeWith(format: IOFormat<T>, obj: T)","description":"space.kscience.dataforge.io.writeWith","location":"dataforge-io/space.kscience.dataforge.io/write-with.html","searchKeys":["writeWith","fun <T : Any> Output.writeWith(format: IOFormat<T>, obj: T)","space.kscience.dataforge.io.writeWith"]},{"name":"fun <T : Any> resolveIOFormat(item: Meta, type: KClass<out T>): IOFormat<T>?","description":"space.kscience.dataforge.io.IOPlugin.resolveIOFormat","location":"dataforge-io/space.kscience.dataforge.io/-i-o-plugin/resolve-i-o-format.html","searchKeys":["resolveIOFormat","fun <T : Any> resolveIOFormat(item: Meta, type: KClass<out T>): IOFormat<T>?","space.kscience.dataforge.io.IOPlugin.resolveIOFormat"]},{"name":"fun Binary.toByteArray(): ByteArray","description":"space.kscience.dataforge.io.toByteArray","location":"dataforge-io/space.kscience.dataforge.io/to-byte-array.html","searchKeys":["toByteArray","fun Binary.toByteArray(): ByteArray","space.kscience.dataforge.io.toByteArray"]},{"name":"fun Binary.view(start: Int, size: Int): BinaryView","description":"space.kscience.dataforge.io.view","location":"dataforge-io/space.kscience.dataforge.io/view.html","searchKeys":["view","fun Binary.view(start: Int, size: Int): BinaryView","space.kscience.dataforge.io.view"]},{"name":"fun BinaryView(source: Binary, start: Int, size: Int)","description":"space.kscience.dataforge.io.BinaryView.BinaryView","location":"dataforge-io/space.kscience.dataforge.io/-binary-view/-binary-view.html","searchKeys":["BinaryView","fun BinaryView(source: Binary, start: Int, size: Int)","space.kscience.dataforge.io.BinaryView.BinaryView"]},{"name":"fun ByteArray.asBinary(): Binary","description":"space.kscience.dataforge.io.asBinary","location":"dataforge-io/space.kscience.dataforge.io/as-binary.html","searchKeys":["asBinary","fun ByteArray.asBinary(): Binary","space.kscience.dataforge.io.asBinary"]},{"name":"fun Envelope.contentEquals(other: Envelope): Boolean","description":"space.kscience.dataforge.io.contentEquals","location":"dataforge-io/space.kscience.dataforge.io/content-equals.html","searchKeys":["contentEquals","fun Envelope.contentEquals(other: Envelope): Boolean","space.kscience.dataforge.io.contentEquals"]},{"name":"fun Envelope.dataEquals(other: Envelope): Boolean","description":"space.kscience.dataforge.io.dataEquals","location":"dataforge-io/space.kscience.dataforge.io/data-equals.html","searchKeys":["dataEquals","fun Envelope.dataEquals(other: Envelope): Boolean","space.kscience.dataforge.io.dataEquals"]},{"name":"fun Envelope.metaEquals(other: Envelope): Boolean","description":"space.kscience.dataforge.io.metaEquals","location":"dataforge-io/space.kscience.dataforge.io/meta-equals.html","searchKeys":["metaEquals","fun Envelope.metaEquals(other: Envelope): Boolean","space.kscience.dataforge.io.metaEquals"]},{"name":"fun Envelope.parts(): EnvelopeParts","description":"space.kscience.dataforge.io.parts","location":"dataforge-io/space.kscience.dataforge.io/parts.html","searchKeys":["parts","fun Envelope.parts(): EnvelopeParts","space.kscience.dataforge.io.parts"]},{"name":"fun Envelope.withMetaLayers(vararg layers: Meta): Envelope","description":"space.kscience.dataforge.io.withMetaLayers","location":"dataforge-io/space.kscience.dataforge.io/with-meta-layers.html","searchKeys":["withMetaLayers","fun Envelope.withMetaLayers(vararg layers: Meta): Envelope","space.kscience.dataforge.io.withMetaLayers"]},{"name":"fun EnvelopeBuilder()","description":"space.kscience.dataforge.io.EnvelopeBuilder.EnvelopeBuilder","location":"dataforge-io/space.kscience.dataforge.io/-envelope-builder/-envelope-builder.html","searchKeys":["EnvelopeBuilder","fun EnvelopeBuilder()","space.kscience.dataforge.io.EnvelopeBuilder.EnvelopeBuilder"]},{"name":"fun EnvelopeBuilder.envelopes(envelopes: List<Envelope>, format: EnvelopeFormat = TaggedEnvelopeFormat, separator: String = DEFAULT_MULTIPART_DATA_SEPARATOR)","description":"space.kscience.dataforge.io.envelopes","location":"dataforge-io/space.kscience.dataforge.io/envelopes.html","searchKeys":["envelopes","fun EnvelopeBuilder.envelopes(envelopes: List<Envelope>, format: EnvelopeFormat = TaggedEnvelopeFormat, separator: String = DEFAULT_MULTIPART_DATA_SEPARATOR)","space.kscience.dataforge.io.envelopes"]},{"name":"fun EnvelopeBuilder.multipart(parts: EnvelopeParts, separator: String = DEFAULT_MULTIPART_DATA_SEPARATOR)","description":"space.kscience.dataforge.io.multipart","location":"dataforge-io/space.kscience.dataforge.io/multipart.html","searchKeys":["multipart","fun EnvelopeBuilder.multipart(parts: EnvelopeParts, separator: String = DEFAULT_MULTIPART_DATA_SEPARATOR)","space.kscience.dataforge.io.multipart"]},{"name":"fun EnvelopeFormat.read(input: Input): Envelope","description":"space.kscience.dataforge.io.read","location":"dataforge-io/space.kscience.dataforge.io/read.html","searchKeys":["read","fun EnvelopeFormat.read(input: Input): Envelope","space.kscience.dataforge.io.read"]},{"name":"fun EnvelopePart(binary: Binary, description: Meta?)","description":"space.kscience.dataforge.io.EnvelopePart.EnvelopePart","location":"dataforge-io/space.kscience.dataforge.io/-envelope-part/-envelope-part.html","searchKeys":["EnvelopePart","fun EnvelopePart(binary: Binary, description: Meta?)","space.kscience.dataforge.io.EnvelopePart.EnvelopePart"]},{"name":"fun EnvelopePart.envelope(format: EnvelopeFormat): Envelope","description":"space.kscience.dataforge.io.envelope","location":"dataforge-io/space.kscience.dataforge.io/envelope.html","searchKeys":["envelope","fun EnvelopePart.envelope(format: EnvelopeFormat): Envelope","space.kscience.dataforge.io.envelope"]},{"name":"fun EnvelopePart.envelope(plugin: IOPlugin): Envelope","description":"space.kscience.dataforge.io.envelope","location":"dataforge-io/space.kscience.dataforge.io/envelope.html","searchKeys":["envelope","fun EnvelopePart.envelope(plugin: IOPlugin): Envelope","space.kscience.dataforge.io.envelope"]},{"name":"fun IOPlugin(meta: Meta)","description":"space.kscience.dataforge.io.IOPlugin.IOPlugin","location":"dataforge-io/space.kscience.dataforge.io/-i-o-plugin/-i-o-plugin.html","searchKeys":["IOPlugin","fun IOPlugin(meta: Meta)","space.kscience.dataforge.io.IOPlugin.IOPlugin"]},{"name":"fun IOPlugin.peekFileEnvelopeFormat(path: Path): EnvelopeFormat?","description":"space.kscience.dataforge.io.peekFileEnvelopeFormat","location":"dataforge-io/space.kscience.dataforge.io/peek-file-envelope-format.html","searchKeys":["peekFileEnvelopeFormat","fun IOPlugin.peekFileEnvelopeFormat(path: Path): EnvelopeFormat?","space.kscience.dataforge.io.peekFileEnvelopeFormat"]},{"name":"fun IOPlugin.readEnvelopeFile(path: Path, readNonEnvelopes: Boolean = false, formatPicker: IOPlugin.(Path) -> EnvelopeFormat? = IOPlugin::peekFileEnvelopeFormat): Envelope","description":"space.kscience.dataforge.io.readEnvelopeFile","location":"dataforge-io/space.kscience.dataforge.io/read-envelope-file.html","searchKeys":["readEnvelopeFile","fun IOPlugin.readEnvelopeFile(path: Path, readNonEnvelopes: Boolean = false, formatPicker: IOPlugin.(Path) -> EnvelopeFormat? = IOPlugin::peekFileEnvelopeFormat): Envelope","space.kscience.dataforge.io.readEnvelopeFile"]},{"name":"fun IOPlugin.readMetaFile(path: Path, formatOverride: MetaFormat? = null, descriptor: MetaDescriptor? = null): Meta","description":"space.kscience.dataforge.io.readMetaFile","location":"dataforge-io/space.kscience.dataforge.io/read-meta-file.html","searchKeys":["readMetaFile","fun IOPlugin.readMetaFile(path: Path, formatOverride: MetaFormat? = null, descriptor: MetaDescriptor? = null): Meta","space.kscience.dataforge.io.readMetaFile"]},{"name":"fun IOPlugin.writeEnvelopeDirectory(path: Path, envelope: Envelope, metaFormat: MetaFormatFactory = JsonMetaFormat)","description":"space.kscience.dataforge.io.writeEnvelopeDirectory","location":"dataforge-io/space.kscience.dataforge.io/write-envelope-directory.html","searchKeys":["writeEnvelopeDirectory","fun IOPlugin.writeEnvelopeDirectory(path: Path, envelope: Envelope, metaFormat: MetaFormatFactory = JsonMetaFormat)","space.kscience.dataforge.io.writeEnvelopeDirectory"]},{"name":"fun IOPlugin.writeEnvelopeFile(path: Path, envelope: Envelope, envelopeFormat: EnvelopeFormat = TaggedEnvelopeFormat, metaFormat: MetaFormatFactory? = null)","description":"space.kscience.dataforge.io.writeEnvelopeFile","location":"dataforge-io/space.kscience.dataforge.io/write-envelope-file.html","searchKeys":["writeEnvelopeFile","fun IOPlugin.writeEnvelopeFile(path: Path, envelope: Envelope, envelopeFormat: EnvelopeFormat = TaggedEnvelopeFormat, metaFormat: MetaFormatFactory? = null)","space.kscience.dataforge.io.writeEnvelopeFile"]},{"name":"fun IOPlugin.writeMetaFile(path: Path, meta: Meta, metaFormat: MetaFormatFactory = JsonMetaFormat, descriptor: MetaDescriptor? = null)","description":"space.kscience.dataforge.io.writeMetaFile","location":"dataforge-io/space.kscience.dataforge.io/write-meta-file.html","searchKeys":["writeMetaFile","fun IOPlugin.writeMetaFile(path: Path, meta: Meta, metaFormat: MetaFormatFactory = JsonMetaFormat, descriptor: MetaDescriptor? = null)","space.kscience.dataforge.io.writeMetaFile"]},{"name":"fun Input.readBinary(size: Int): Binary","description":"space.kscience.dataforge.io.readBinary","location":"dataforge-io/space.kscience.dataforge.io/read-binary.html","searchKeys":["readBinary","fun Input.readBinary(size: Int): Binary","space.kscience.dataforge.io.readBinary"]},{"name":"fun Input.readRawString(size: Int): String","description":"space.kscience.dataforge.io.readRawString","location":"dataforge-io/space.kscience.dataforge.io/read-raw-string.html","searchKeys":["readRawString","fun Input.readRawString(size: Int): String","space.kscience.dataforge.io.readRawString"]},{"name":"fun Input.readSafeUtf8Line(): String","description":"space.kscience.dataforge.io.readSafeUtf8Line","location":"dataforge-io/space.kscience.dataforge.io/read-safe-utf8-line.html","searchKeys":["readSafeUtf8Line","fun Input.readSafeUtf8Line(): String","space.kscience.dataforge.io.readSafeUtf8Line"]},{"name":"fun Input.readUtf8String(): String","description":"space.kscience.dataforge.io.readUtf8String","location":"dataforge-io/space.kscience.dataforge.io/read-utf8-string.html","searchKeys":["readUtf8String","fun Input.readUtf8String(): String","space.kscience.dataforge.io.readUtf8String"]},{"name":"fun JsonMetaFormat(json: Json = DEFAULT_JSON)","description":"space.kscience.dataforge.io.JsonMetaFormat.JsonMetaFormat","location":"dataforge-io/space.kscience.dataforge.io/-json-meta-format/-json-meta-format.html","searchKeys":["JsonMetaFormat","fun JsonMetaFormat(json: Json = DEFAULT_JSON)","space.kscience.dataforge.io.JsonMetaFormat.JsonMetaFormat"]},{"name":"fun Meta.toString(format: MetaFormat): String","description":"space.kscience.dataforge.io.toString","location":"dataforge-io/space.kscience.dataforge.io/to-string.html","searchKeys":["toString","fun Meta.toString(format: MetaFormat): String","space.kscience.dataforge.io.toString"]},{"name":"fun Meta.toString(formatFactory: MetaFormatFactory): String","description":"space.kscience.dataforge.io.toString","location":"dataforge-io/space.kscience.dataforge.io/to-string.html","searchKeys":["toString","fun Meta.toString(formatFactory: MetaFormatFactory): String","space.kscience.dataforge.io.toString"]},{"name":"fun MetaFormat.parse(str: String): Meta","description":"space.kscience.dataforge.io.parse","location":"dataforge-io/space.kscience.dataforge.io/parse.html","searchKeys":["parse","fun MetaFormat.parse(str: String): Meta","space.kscience.dataforge.io.parse"]},{"name":"fun MetaFormatFactory.parse(str: String, formatMeta: Meta): Meta","description":"space.kscience.dataforge.io.parse","location":"dataforge-io/space.kscience.dataforge.io/parse.html","searchKeys":["parse","fun MetaFormatFactory.parse(str: String, formatMeta: Meta): Meta","space.kscience.dataforge.io.parse"]},{"name":"fun Output.writeBinary(binary: Binary): Int","description":"space.kscience.dataforge.io.writeBinary","location":"dataforge-io/space.kscience.dataforge.io/write-binary.html","searchKeys":["writeBinary","fun Output.writeBinary(binary: Binary): Int","space.kscience.dataforge.io.writeBinary"]},{"name":"fun Output.writeRawString(str: String)","description":"space.kscience.dataforge.io.writeRawString","location":"dataforge-io/space.kscience.dataforge.io/write-raw-string.html","searchKeys":["writeRawString","fun Output.writeRawString(str: String)","space.kscience.dataforge.io.writeRawString"]},{"name":"fun Output.writeUtf8String(str: String)","description":"space.kscience.dataforge.io.writeUtf8String","location":"dataforge-io/space.kscience.dataforge.io/write-utf8-string.html","searchKeys":["writeUtf8String","fun Output.writeUtf8String(str: String)","space.kscience.dataforge.io.writeUtf8String"]},{"name":"fun PartialEnvelope(meta: Meta, dataOffset: UInt, dataSize: ULong?)","description":"space.kscience.dataforge.io.PartialEnvelope.PartialEnvelope","location":"dataforge-io/space.kscience.dataforge.io/-partial-envelope/-partial-envelope.html","searchKeys":["PartialEnvelope","fun PartialEnvelope(meta: Meta, dataOffset: UInt, dataSize: ULong?)","space.kscience.dataforge.io.PartialEnvelope.PartialEnvelope"]},{"name":"fun Path.append(block: Output.() -> Unit)","description":"space.kscience.dataforge.io.append","location":"dataforge-io/space.kscience.dataforge.io/append.html","searchKeys":["append","fun Path.append(block: Output.() -> Unit)","space.kscience.dataforge.io.append"]},{"name":"fun Path.asBinary(): Binary","description":"space.kscience.dataforge.io.asBinary","location":"dataforge-io/space.kscience.dataforge.io/as-binary.html","searchKeys":["asBinary","fun Path.asBinary(): Binary","space.kscience.dataforge.io.asBinary"]},{"name":"fun Path.readEnvelope(format: EnvelopeFormat): Envelope","description":"space.kscience.dataforge.io.readEnvelope","location":"dataforge-io/space.kscience.dataforge.io/read-envelope.html","searchKeys":["readEnvelope","fun Path.readEnvelope(format: EnvelopeFormat): Envelope","space.kscience.dataforge.io.readEnvelope"]},{"name":"fun Path.rewrite(block: Output.() -> Unit)","description":"space.kscience.dataforge.io.rewrite","location":"dataforge-io/space.kscience.dataforge.io/rewrite.html","searchKeys":["rewrite","fun Path.rewrite(block: Output.() -> Unit)","space.kscience.dataforge.io.rewrite"]},{"name":"fun Path.write(block: Output.() -> Unit)","description":"space.kscience.dataforge.io.write","location":"dataforge-io/space.kscience.dataforge.io/write.html","searchKeys":["write","fun Path.write(block: Output.() -> Unit)","space.kscience.dataforge.io.write"]},{"name":"fun ProxyEnvelope(source: Envelope, vararg meta: Meta)","description":"space.kscience.dataforge.io.ProxyEnvelope.ProxyEnvelope","location":"dataforge-io/space.kscience.dataforge.io/-proxy-envelope/-proxy-envelope.html","searchKeys":["ProxyEnvelope","fun ProxyEnvelope(source: Envelope, vararg meta: Meta)","space.kscience.dataforge.io.ProxyEnvelope.ProxyEnvelope"]},{"name":"fun SimpleEnvelope(meta: Meta, data: Binary?)","description":"space.kscience.dataforge.io.SimpleEnvelope.SimpleEnvelope","location":"dataforge-io/space.kscience.dataforge.io/-simple-envelope/-simple-envelope.html","searchKeys":["SimpleEnvelope","fun SimpleEnvelope(meta: Meta, data: Binary?)","space.kscience.dataforge.io.SimpleEnvelope.SimpleEnvelope"]},{"name":"fun TaggedEnvelopeFormat(io: IOPlugin, version: TaggedEnvelopeFormat.VERSION = VERSION.DF02)","description":"space.kscience.dataforge.io.TaggedEnvelopeFormat.TaggedEnvelopeFormat","location":"dataforge-io/space.kscience.dataforge.io/-tagged-envelope-format/-tagged-envelope-format.html","searchKeys":["TaggedEnvelopeFormat","fun TaggedEnvelopeFormat(io: IOPlugin, version: TaggedEnvelopeFormat.VERSION = VERSION.DF02)","space.kscience.dataforge.io.TaggedEnvelopeFormat.TaggedEnvelopeFormat"]},{"name":"fun TaglessEnvelopeFormat(io: IOPlugin, meta: Meta = Meta.EMPTY)","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.TaglessEnvelopeFormat","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/-tagless-envelope-format.html","searchKeys":["TaglessEnvelopeFormat","fun TaglessEnvelopeFormat(io: IOPlugin, meta: Meta = Meta.EMPTY)","space.kscience.dataforge.io.TaglessEnvelopeFormat.TaglessEnvelopeFormat"]},{"name":"fun data(block: Output.() -> Unit)","description":"space.kscience.dataforge.io.EnvelopeBuilder.data","location":"dataforge-io/space.kscience.dataforge.io/-envelope-builder/data.html","searchKeys":["data","fun data(block: Output.() -> Unit)","space.kscience.dataforge.io.EnvelopeBuilder.data"]},{"name":"fun meta(block: MutableMeta.() -> Unit)","description":"space.kscience.dataforge.io.EnvelopeBuilder.meta","location":"dataforge-io/space.kscience.dataforge.io/-envelope-builder/meta.html","searchKeys":["meta","fun meta(block: MutableMeta.() -> Unit)","space.kscience.dataforge.io.EnvelopeBuilder.meta"]},{"name":"fun resolveEnvelopeFormat(item: Meta): EnvelopeFormat?","description":"space.kscience.dataforge.io.IOPlugin.resolveEnvelopeFormat","location":"dataforge-io/space.kscience.dataforge.io/-i-o-plugin/resolve-envelope-format.html","searchKeys":["resolveEnvelopeFormat","fun resolveEnvelopeFormat(item: Meta): EnvelopeFormat?","space.kscience.dataforge.io.IOPlugin.resolveEnvelopeFormat"]},{"name":"fun resolveMetaFormat(key: Short, meta: Meta = Meta.EMPTY): MetaFormat?","description":"space.kscience.dataforge.io.IOPlugin.resolveMetaFormat","location":"dataforge-io/space.kscience.dataforge.io/-i-o-plugin/resolve-meta-format.html","searchKeys":["resolveMetaFormat","fun resolveMetaFormat(key: Short, meta: Meta = Meta.EMPTY): MetaFormat?","space.kscience.dataforge.io.IOPlugin.resolveMetaFormat"]},{"name":"fun resolveMetaFormat(name: String, meta: Meta = Meta.EMPTY): MetaFormat?","description":"space.kscience.dataforge.io.IOPlugin.resolveMetaFormat","location":"dataforge-io/space.kscience.dataforge.io/-i-o-plugin/resolve-meta-format.html","searchKeys":["resolveMetaFormat","fun resolveMetaFormat(name: String, meta: Meta = Meta.EMPTY): MetaFormat?","space.kscience.dataforge.io.IOPlugin.resolveMetaFormat"]},{"name":"fun seal(): Envelope","description":"space.kscience.dataforge.io.EnvelopeBuilder.seal","location":"dataforge-io/space.kscience.dataforge.io/-envelope-builder/seal.html","searchKeys":["seal","fun seal(): Envelope","space.kscience.dataforge.io.EnvelopeBuilder.seal"]},{"name":"inline fun <T : Any> IOFormat.Companion.listOf(format: IOFormat<T>): IOFormat<List<T>>","description":"space.kscience.dataforge.io.listOf","location":"dataforge-io/space.kscience.dataforge.io/list-of.html","searchKeys":["listOf","inline fun <T : Any> IOFormat.Companion.listOf(format: IOFormat<T>): IOFormat<List<T>>","space.kscience.dataforge.io.listOf"]},{"name":"inline fun <T : Any> IOPlugin.resolveIOFormat(): IOFormat<T>?","description":"space.kscience.dataforge.io.resolveIOFormat","location":"dataforge-io/space.kscience.dataforge.io/resolve-i-o-format.html","searchKeys":["resolveIOFormat","inline fun <T : Any> IOPlugin.resolveIOFormat(): IOFormat<T>?","space.kscience.dataforge.io.resolveIOFormat"]},{"name":"inline fun Binary(expectedSize: Int = 16, block: Output.() -> Unit): Binary","description":"space.kscience.dataforge.io.Binary","location":"dataforge-io/space.kscience.dataforge.io/-binary.html","searchKeys":["Binary","inline fun Binary(expectedSize: Int = 16, block: Output.() -> Unit): Binary","space.kscience.dataforge.io.Binary"]},{"name":"inline fun Envelope(builder: EnvelopeBuilder.() -> Unit): Envelope","description":"space.kscience.dataforge.io.Envelope","location":"dataforge-io/space.kscience.dataforge.io/-envelope.html","searchKeys":["Envelope","inline fun Envelope(builder: EnvelopeBuilder.() -> Unit): Envelope","space.kscience.dataforge.io.Envelope"]},{"name":"inline fun buildByteArray(expectedSize: Int = 16, block: Output.() -> Unit): ByteArray","description":"space.kscience.dataforge.io.buildByteArray","location":"dataforge-io/space.kscience.dataforge.io/build-byte-array.html","searchKeys":["buildByteArray","inline fun buildByteArray(expectedSize: Int = 16, block: Output.() -> Unit): ByteArray","space.kscience.dataforge.io.buildByteArray"]},{"name":"inline operator fun invoke(block: EnvelopeBuilder.() -> Unit): Envelope","description":"space.kscience.dataforge.io.Envelope.Companion.invoke","location":"dataforge-io/space.kscience.dataforge.io/-envelope/-companion/invoke.html","searchKeys":["invoke","inline operator fun invoke(block: EnvelopeBuilder.() -> Unit): Envelope","space.kscience.dataforge.io.Envelope.Companion.invoke"]},{"name":"interface Binary","description":"space.kscience.dataforge.io.Binary","location":"dataforge-io/space.kscience.dataforge.io/-binary/index.html","searchKeys":["Binary","interface Binary","space.kscience.dataforge.io.Binary"]},{"name":"interface Consumer","description":"space.kscience.dataforge.io.Consumer","location":"dataforge-io/space.kscience.dataforge.io/-consumer/index.html","searchKeys":["Consumer","interface Consumer","space.kscience.dataforge.io.Consumer"]},{"name":"interface Envelope","description":"space.kscience.dataforge.io.Envelope","location":"dataforge-io/space.kscience.dataforge.io/-envelope/index.html","searchKeys":["Envelope","interface Envelope","space.kscience.dataforge.io.Envelope"]},{"name":"interface EnvelopeFormat : IOFormat<Envelope> ","description":"space.kscience.dataforge.io.EnvelopeFormat","location":"dataforge-io/space.kscience.dataforge.io/-envelope-format/index.html","searchKeys":["EnvelopeFormat","interface EnvelopeFormat : IOFormat<Envelope> ","space.kscience.dataforge.io.EnvelopeFormat"]},{"name":"interface EnvelopeFormatFactory : IOFormatFactory<Envelope> , EnvelopeFormat","description":"space.kscience.dataforge.io.EnvelopeFormatFactory","location":"dataforge-io/space.kscience.dataforge.io/-envelope-format-factory/index.html","searchKeys":["EnvelopeFormatFactory","interface EnvelopeFormatFactory : IOFormatFactory<Envelope> , EnvelopeFormat","space.kscience.dataforge.io.EnvelopeFormatFactory"]},{"name":"interface IOFormat<T : Any> : MetaRepr","description":"space.kscience.dataforge.io.IOFormat","location":"dataforge-io/space.kscience.dataforge.io/-i-o-format/index.html","searchKeys":["IOFormat","interface IOFormat<T : Any> : MetaRepr","space.kscience.dataforge.io.IOFormat"]},{"name":"interface IOFormatFactory<T : Any> : Factory<IOFormat<T>> , Named, MetaRepr","description":"space.kscience.dataforge.io.IOFormatFactory","location":"dataforge-io/space.kscience.dataforge.io/-i-o-format-factory/index.html","searchKeys":["IOFormatFactory","interface IOFormatFactory<T : Any> : Factory<IOFormat<T>> , Named, MetaRepr","space.kscience.dataforge.io.IOFormatFactory"]},{"name":"interface MetaFormat : IOFormat<Meta> ","description":"space.kscience.dataforge.io.MetaFormat","location":"dataforge-io/space.kscience.dataforge.io/-meta-format/index.html","searchKeys":["MetaFormat","interface MetaFormat : IOFormat<Meta> ","space.kscience.dataforge.io.MetaFormat"]},{"name":"interface MetaFormatFactory : IOFormatFactory<Meta> , MetaFormat","description":"space.kscience.dataforge.io.MetaFormatFactory","location":"dataforge-io/space.kscience.dataforge.io/-meta-format-factory/index.html","searchKeys":["MetaFormatFactory","interface MetaFormatFactory : IOFormatFactory<Meta> , MetaFormat","space.kscience.dataforge.io.MetaFormatFactory"]},{"name":"interface Responder","description":"space.kscience.dataforge.io.Responder","location":"dataforge-io/space.kscience.dataforge.io/-responder/index.html","searchKeys":["Responder","interface Responder","space.kscience.dataforge.io.Responder"]},{"name":"object Companion","description":"space.kscience.dataforge.io.Binary.Companion","location":"dataforge-io/space.kscience.dataforge.io/-binary/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.io.Binary.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.io.Envelope.Companion","location":"dataforge-io/space.kscience.dataforge.io/-envelope/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.io.Envelope.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.io.EnvelopeFormatFactory.Companion","location":"dataforge-io/space.kscience.dataforge.io/-envelope-format-factory/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.io.EnvelopeFormatFactory.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.io.IOFormat.Companion","location":"dataforge-io/space.kscience.dataforge.io/-i-o-format/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.io.IOFormat.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.io.IOFormatFactory.Companion","location":"dataforge-io/space.kscience.dataforge.io/-i-o-format-factory/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.io.IOFormatFactory.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.io.MetaFormatFactory.Companion","location":"dataforge-io/space.kscience.dataforge.io/-meta-format-factory/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.io.MetaFormatFactory.Companion"]},{"name":"object Companion : EnvelopeFormatFactory","description":"space.kscience.dataforge.io.TaggedEnvelopeFormat.Companion","location":"dataforge-io/space.kscience.dataforge.io/-tagged-envelope-format/-companion/index.html","searchKeys":["Companion","object Companion : EnvelopeFormatFactory","space.kscience.dataforge.io.TaggedEnvelopeFormat.Companion"]},{"name":"object Companion : EnvelopeFormatFactory","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/-companion/index.html","searchKeys":["Companion","object Companion : EnvelopeFormatFactory","space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion"]},{"name":"object Companion : MetaFormatFactory","description":"space.kscience.dataforge.io.JsonMetaFormat.Companion","location":"dataforge-io/space.kscience.dataforge.io/-json-meta-format/-companion/index.html","searchKeys":["Companion","object Companion : MetaFormatFactory","space.kscience.dataforge.io.JsonMetaFormat.Companion"]},{"name":"object Companion : PluginFactory<IOPlugin> ","description":"space.kscience.dataforge.io.IOPlugin.Companion","location":"dataforge-io/space.kscience.dataforge.io/-i-o-plugin/-companion/index.html","searchKeys":["Companion","object Companion : PluginFactory<IOPlugin> ","space.kscience.dataforge.io.IOPlugin.Companion"]},{"name":"object DoubleIOFormat : IOFormat<Double> , IOFormatFactory<Double> ","description":"space.kscience.dataforge.io.DoubleIOFormat","location":"dataforge-io/space.kscience.dataforge.io/-double-i-o-format/index.html","searchKeys":["DoubleIOFormat","object DoubleIOFormat : IOFormat<Double> , IOFormatFactory<Double> ","space.kscience.dataforge.io.DoubleIOFormat"]},{"name":"open operator override fun invoke(meta: Meta, context: Context): EnvelopeFormat","description":"space.kscience.dataforge.io.TaggedEnvelopeFormat.Companion.invoke","location":"dataforge-io/space.kscience.dataforge.io/-tagged-envelope-format/-companion/invoke.html","searchKeys":["invoke","open operator override fun invoke(meta: Meta, context: Context): EnvelopeFormat","space.kscience.dataforge.io.TaggedEnvelopeFormat.Companion.invoke"]},{"name":"open operator override fun invoke(meta: Meta, context: Context): EnvelopeFormat","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.invoke","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/-companion/invoke.html","searchKeys":["invoke","open operator override fun invoke(meta: Meta, context: Context): EnvelopeFormat","space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.invoke"]},{"name":"open operator override fun invoke(meta: Meta, context: Context): IOFormat<Double>","description":"space.kscience.dataforge.io.DoubleIOFormat.invoke","location":"dataforge-io/space.kscience.dataforge.io/-double-i-o-format/invoke.html","searchKeys":["invoke","open operator override fun invoke(meta: Meta, context: Context): IOFormat<Double>","space.kscience.dataforge.io.DoubleIOFormat.invoke"]},{"name":"open operator override fun invoke(meta: Meta, context: Context): IOPlugin","description":"space.kscience.dataforge.io.IOPlugin.Companion.invoke","location":"dataforge-io/space.kscience.dataforge.io/-i-o-plugin/-companion/invoke.html","searchKeys":["invoke","open operator override fun invoke(meta: Meta, context: Context): IOPlugin","space.kscience.dataforge.io.IOPlugin.Companion.invoke"]},{"name":"open operator override fun invoke(meta: Meta, context: Context): MetaFormat","description":"space.kscience.dataforge.io.JsonMetaFormat.Companion.invoke","location":"dataforge-io/space.kscience.dataforge.io/-json-meta-format/-companion/invoke.html","searchKeys":["invoke","open operator override fun invoke(meta: Meta, context: Context): MetaFormat","space.kscience.dataforge.io.JsonMetaFormat.Companion.invoke"]},{"name":"open override fun <R> read(offset: Int, atMost: Int, block: Input.() -> R): R","description":"space.kscience.dataforge.io.BinaryView.read","location":"dataforge-io/space.kscience.dataforge.io/-binary-view/read.html","searchKeys":["read","open override fun <R> read(offset: Int, atMost: Int, block: Input.() -> R): R","space.kscience.dataforge.io.BinaryView.read"]},{"name":"open override fun content(target: String): Map<Name, Any>","description":"space.kscience.dataforge.io.IOPlugin.content","location":"dataforge-io/space.kscience.dataforge.io/-i-o-plugin/content.html","searchKeys":["content","open override fun content(target: String): Map<Name, Any>","space.kscience.dataforge.io.IOPlugin.content"]},{"name":"open override fun peekFormat(io: IOPlugin, binary: Binary): EnvelopeFormat?","description":"space.kscience.dataforge.io.TaggedEnvelopeFormat.Companion.peekFormat","location":"dataforge-io/space.kscience.dataforge.io/-tagged-envelope-format/-companion/peek-format.html","searchKeys":["peekFormat","open override fun peekFormat(io: IOPlugin, binary: Binary): EnvelopeFormat?","space.kscience.dataforge.io.TaggedEnvelopeFormat.Companion.peekFormat"]},{"name":"open override fun peekFormat(io: IOPlugin, binary: Binary): EnvelopeFormat?","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.peekFormat","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/-companion/peek-format.html","searchKeys":["peekFormat","open override fun peekFormat(io: IOPlugin, binary: Binary): EnvelopeFormat?","space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.peekFormat"]},{"name":"open override fun readMeta(input: Input, descriptor: MetaDescriptor?): Meta","description":"space.kscience.dataforge.io.JsonMetaFormat.Companion.readMeta","location":"dataforge-io/space.kscience.dataforge.io/-json-meta-format/-companion/read-meta.html","searchKeys":["readMeta","open override fun readMeta(input: Input, descriptor: MetaDescriptor?): Meta","space.kscience.dataforge.io.JsonMetaFormat.Companion.readMeta"]},{"name":"open override fun readMeta(input: Input, descriptor: MetaDescriptor?): Meta","description":"space.kscience.dataforge.io.JsonMetaFormat.readMeta","location":"dataforge-io/space.kscience.dataforge.io/-json-meta-format/read-meta.html","searchKeys":["readMeta","open override fun readMeta(input: Input, descriptor: MetaDescriptor?): Meta","space.kscience.dataforge.io.JsonMetaFormat.readMeta"]},{"name":"open override fun readObject(input: Input): Double","description":"space.kscience.dataforge.io.DoubleIOFormat.readObject","location":"dataforge-io/space.kscience.dataforge.io/-double-i-o-format/read-object.html","searchKeys":["readObject","open override fun readObject(input: Input): Double","space.kscience.dataforge.io.DoubleIOFormat.readObject"]},{"name":"open override fun readObject(input: Input): Envelope","description":"space.kscience.dataforge.io.TaggedEnvelopeFormat.Companion.readObject","location":"dataforge-io/space.kscience.dataforge.io/-tagged-envelope-format/-companion/read-object.html","searchKeys":["readObject","open override fun readObject(input: Input): Envelope","space.kscience.dataforge.io.TaggedEnvelopeFormat.Companion.readObject"]},{"name":"open override fun readObject(input: Input): Envelope","description":"space.kscience.dataforge.io.TaggedEnvelopeFormat.readObject","location":"dataforge-io/space.kscience.dataforge.io/-tagged-envelope-format/read-object.html","searchKeys":["readObject","open override fun readObject(input: Input): Envelope","space.kscience.dataforge.io.TaggedEnvelopeFormat.readObject"]},{"name":"open override fun readObject(input: Input): Envelope","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.readObject","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/-companion/read-object.html","searchKeys":["readObject","open override fun readObject(input: Input): Envelope","space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.readObject"]},{"name":"open override fun readObject(input: Input): Envelope","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.readObject","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/read-object.html","searchKeys":["readObject","open override fun readObject(input: Input): Envelope","space.kscience.dataforge.io.TaglessEnvelopeFormat.readObject"]},{"name":"open override fun readObject(input: Input): Meta","description":"space.kscience.dataforge.io.MetaFormat.readObject","location":"dataforge-io/space.kscience.dataforge.io/-meta-format/read-object.html","searchKeys":["readObject","open override fun readObject(input: Input): Meta","space.kscience.dataforge.io.MetaFormat.readObject"]},{"name":"open override fun readPartial(input: Input): PartialEnvelope","description":"space.kscience.dataforge.io.TaggedEnvelopeFormat.Companion.readPartial","location":"dataforge-io/space.kscience.dataforge.io/-tagged-envelope-format/-companion/read-partial.html","searchKeys":["readPartial","open override fun readPartial(input: Input): PartialEnvelope","space.kscience.dataforge.io.TaggedEnvelopeFormat.Companion.readPartial"]},{"name":"open override fun readPartial(input: Input): PartialEnvelope","description":"space.kscience.dataforge.io.TaggedEnvelopeFormat.readPartial","location":"dataforge-io/space.kscience.dataforge.io/-tagged-envelope-format/read-partial.html","searchKeys":["readPartial","open override fun readPartial(input: Input): PartialEnvelope","space.kscience.dataforge.io.TaggedEnvelopeFormat.readPartial"]},{"name":"open override fun readPartial(input: Input): PartialEnvelope","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.readPartial","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/-companion/read-partial.html","searchKeys":["readPartial","open override fun readPartial(input: Input): PartialEnvelope","space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.readPartial"]},{"name":"open override fun readPartial(input: Input): PartialEnvelope","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.readPartial","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/read-partial.html","searchKeys":["readPartial","open override fun readPartial(input: Input): PartialEnvelope","space.kscience.dataforge.io.TaglessEnvelopeFormat.readPartial"]},{"name":"open override fun toMeta(): Meta","description":"space.kscience.dataforge.io.IOFormatFactory.toMeta","location":"dataforge-io/space.kscience.dataforge.io/-i-o-format-factory/to-meta.html","searchKeys":["toMeta","open override fun toMeta(): Meta","space.kscience.dataforge.io.IOFormatFactory.toMeta"]},{"name":"open override fun toMeta(): Meta","description":"space.kscience.dataforge.io.JsonMetaFormat.toMeta","location":"dataforge-io/space.kscience.dataforge.io/-json-meta-format/to-meta.html","searchKeys":["toMeta","open override fun toMeta(): Meta","space.kscience.dataforge.io.JsonMetaFormat.toMeta"]},{"name":"open override fun toMeta(): Meta","description":"space.kscience.dataforge.io.TaggedEnvelopeFormat.toMeta","location":"dataforge-io/space.kscience.dataforge.io/-tagged-envelope-format/to-meta.html","searchKeys":["toMeta","open override fun toMeta(): Meta","space.kscience.dataforge.io.TaggedEnvelopeFormat.toMeta"]},{"name":"open override fun toMeta(): Meta","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.toMeta","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/to-meta.html","searchKeys":["toMeta","open override fun toMeta(): Meta","space.kscience.dataforge.io.TaglessEnvelopeFormat.toMeta"]},{"name":"open override fun writeEnvelope(output: Output, envelope: Envelope, metaFormatFactory: MetaFormatFactory, formatMeta: Meta)","description":"space.kscience.dataforge.io.TaggedEnvelopeFormat.Companion.writeEnvelope","location":"dataforge-io/space.kscience.dataforge.io/-tagged-envelope-format/-companion/write-envelope.html","searchKeys":["writeEnvelope","open override fun writeEnvelope(output: Output, envelope: Envelope, metaFormatFactory: MetaFormatFactory, formatMeta: Meta)","space.kscience.dataforge.io.TaggedEnvelopeFormat.Companion.writeEnvelope"]},{"name":"open override fun writeEnvelope(output: Output, envelope: Envelope, metaFormatFactory: MetaFormatFactory, formatMeta: Meta)","description":"space.kscience.dataforge.io.TaggedEnvelopeFormat.writeEnvelope","location":"dataforge-io/space.kscience.dataforge.io/-tagged-envelope-format/write-envelope.html","searchKeys":["writeEnvelope","open override fun writeEnvelope(output: Output, envelope: Envelope, metaFormatFactory: MetaFormatFactory, formatMeta: Meta)","space.kscience.dataforge.io.TaggedEnvelopeFormat.writeEnvelope"]},{"name":"open override fun writeEnvelope(output: Output, envelope: Envelope, metaFormatFactory: MetaFormatFactory, formatMeta: Meta)","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.writeEnvelope","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/-companion/write-envelope.html","searchKeys":["writeEnvelope","open override fun writeEnvelope(output: Output, envelope: Envelope, metaFormatFactory: MetaFormatFactory, formatMeta: Meta)","space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.writeEnvelope"]},{"name":"open override fun writeEnvelope(output: Output, envelope: Envelope, metaFormatFactory: MetaFormatFactory, formatMeta: Meta)","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.writeEnvelope","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/write-envelope.html","searchKeys":["writeEnvelope","open override fun writeEnvelope(output: Output, envelope: Envelope, metaFormatFactory: MetaFormatFactory, formatMeta: Meta)","space.kscience.dataforge.io.TaglessEnvelopeFormat.writeEnvelope"]},{"name":"open override fun writeMeta(output: Output, meta: Meta, descriptor: MetaDescriptor?)","description":"space.kscience.dataforge.io.JsonMetaFormat.Companion.writeMeta","location":"dataforge-io/space.kscience.dataforge.io/-json-meta-format/-companion/write-meta.html","searchKeys":["writeMeta","open override fun writeMeta(output: Output, meta: Meta, descriptor: MetaDescriptor?)","space.kscience.dataforge.io.JsonMetaFormat.Companion.writeMeta"]},{"name":"open override fun writeMeta(output: Output, meta: Meta, descriptor: MetaDescriptor?)","description":"space.kscience.dataforge.io.JsonMetaFormat.writeMeta","location":"dataforge-io/space.kscience.dataforge.io/-json-meta-format/write-meta.html","searchKeys":["writeMeta","open override fun writeMeta(output: Output, meta: Meta, descriptor: MetaDescriptor?)","space.kscience.dataforge.io.JsonMetaFormat.writeMeta"]},{"name":"open override fun writeObject(output: Output, obj: Double)","description":"space.kscience.dataforge.io.DoubleIOFormat.writeObject","location":"dataforge-io/space.kscience.dataforge.io/-double-i-o-format/write-object.html","searchKeys":["writeObject","open override fun writeObject(output: Output, obj: Double)","space.kscience.dataforge.io.DoubleIOFormat.writeObject"]},{"name":"open override fun writeObject(output: Output, obj: Envelope)","description":"space.kscience.dataforge.io.EnvelopeFormat.writeObject","location":"dataforge-io/space.kscience.dataforge.io/-envelope-format/write-object.html","searchKeys":["writeObject","open override fun writeObject(output: Output, obj: Envelope)","space.kscience.dataforge.io.EnvelopeFormat.writeObject"]},{"name":"open override fun writeObject(output: Output, obj: Meta)","description":"space.kscience.dataforge.io.MetaFormat.writeObject","location":"dataforge-io/space.kscience.dataforge.io/-meta-format/write-object.html","searchKeys":["writeObject","open override fun writeObject(output: Output, obj: Meta)","space.kscience.dataforge.io.MetaFormat.writeObject"]},{"name":"open override val data: Binary?","description":"space.kscience.dataforge.io.ProxyEnvelope.data","location":"dataforge-io/space.kscience.dataforge.io/-proxy-envelope/data.html","searchKeys":["data","open override val data: Binary?","space.kscience.dataforge.io.ProxyEnvelope.data"]},{"name":"open override val data: Binary?","description":"space.kscience.dataforge.io.SimpleEnvelope.data","location":"dataforge-io/space.kscience.dataforge.io/-simple-envelope/data.html","searchKeys":["data","open override val data: Binary?","space.kscience.dataforge.io.SimpleEnvelope.data"]},{"name":"open override val key: Short = 0x4a53","description":"space.kscience.dataforge.io.JsonMetaFormat.Companion.key","location":"dataforge-io/space.kscience.dataforge.io/-json-meta-format/-companion/key.html","searchKeys":["key","open override val key: Short = 0x4a53","space.kscience.dataforge.io.JsonMetaFormat.Companion.key"]},{"name":"open override val meta: Laminate","description":"space.kscience.dataforge.io.ProxyEnvelope.meta","location":"dataforge-io/space.kscience.dataforge.io/-proxy-envelope/meta.html","searchKeys":["meta","open override val meta: Laminate","space.kscience.dataforge.io.ProxyEnvelope.meta"]},{"name":"open override val meta: Meta","description":"space.kscience.dataforge.io.SimpleEnvelope.meta","location":"dataforge-io/space.kscience.dataforge.io/-simple-envelope/meta.html","searchKeys":["meta","open override val meta: Meta","space.kscience.dataforge.io.SimpleEnvelope.meta"]},{"name":"open override val name: Name","description":"space.kscience.dataforge.io.DoubleIOFormat.name","location":"dataforge-io/space.kscience.dataforge.io/-double-i-o-format/name.html","searchKeys":["name","open override val name: Name","space.kscience.dataforge.io.DoubleIOFormat.name"]},{"name":"open override val name: Name","description":"space.kscience.dataforge.io.EnvelopeFormatFactory.name","location":"dataforge-io/space.kscience.dataforge.io/-envelope-format-factory/name.html","searchKeys":["name","open override val name: Name","space.kscience.dataforge.io.EnvelopeFormatFactory.name"]},{"name":"open override val name: Name","description":"space.kscience.dataforge.io.MetaFormatFactory.name","location":"dataforge-io/space.kscience.dataforge.io/-meta-format-factory/name.html","searchKeys":["name","open override val name: Name","space.kscience.dataforge.io.MetaFormatFactory.name"]},{"name":"open override val name: Name","description":"space.kscience.dataforge.io.TaggedEnvelopeFormat.Companion.name","location":"dataforge-io/space.kscience.dataforge.io/-tagged-envelope-format/-companion/name.html","searchKeys":["name","open override val name: Name","space.kscience.dataforge.io.TaggedEnvelopeFormat.Companion.name"]},{"name":"open override val name: Name","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.name","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/-companion/name.html","searchKeys":["name","open override val name: Name","space.kscience.dataforge.io.TaglessEnvelopeFormat.Companion.name"]},{"name":"open override val shortName: String","description":"space.kscience.dataforge.io.JsonMetaFormat.Companion.shortName","location":"dataforge-io/space.kscience.dataforge.io/-json-meta-format/-companion/short-name.html","searchKeys":["shortName","open override val shortName: String","space.kscience.dataforge.io.JsonMetaFormat.Companion.shortName"]},{"name":"open override val size: Int","description":"space.kscience.dataforge.io.BinaryView.size","location":"dataforge-io/space.kscience.dataforge.io/-binary-view/size.html","searchKeys":["size","open override val size: Int","space.kscience.dataforge.io.BinaryView.size"]},{"name":"open override val tag: PluginTag","description":"space.kscience.dataforge.io.IOPlugin.Companion.tag","location":"dataforge-io/space.kscience.dataforge.io/-i-o-plugin/-companion/tag.html","searchKeys":["tag","open override val tag: PluginTag","space.kscience.dataforge.io.IOPlugin.Companion.tag"]},{"name":"open override val tag: PluginTag","description":"space.kscience.dataforge.io.IOPlugin.tag","location":"dataforge-io/space.kscience.dataforge.io/-i-o-plugin/tag.html","searchKeys":["tag","open override val tag: PluginTag","space.kscience.dataforge.io.IOPlugin.tag"]},{"name":"open override val type: KClass<out IOPlugin>","description":"space.kscience.dataforge.io.IOPlugin.Companion.type","location":"dataforge-io/space.kscience.dataforge.io/-i-o-plugin/-companion/type.html","searchKeys":["type","open override val type: KClass<out IOPlugin>","space.kscience.dataforge.io.IOPlugin.Companion.type"]},{"name":"open override val type: KType","description":"space.kscience.dataforge.io.DoubleIOFormat.type","location":"dataforge-io/space.kscience.dataforge.io/-double-i-o-format/type.html","searchKeys":["type","open override val type: KType","space.kscience.dataforge.io.DoubleIOFormat.type"]},{"name":"open override val type: KType","description":"space.kscience.dataforge.io.EnvelopeFormat.type","location":"dataforge-io/space.kscience.dataforge.io/-envelope-format/type.html","searchKeys":["type","open override val type: KType","space.kscience.dataforge.io.EnvelopeFormat.type"]},{"name":"open override val type: KType","description":"space.kscience.dataforge.io.EnvelopeFormatFactory.type","location":"dataforge-io/space.kscience.dataforge.io/-envelope-format-factory/type.html","searchKeys":["type","open override val type: KType","space.kscience.dataforge.io.EnvelopeFormatFactory.type"]},{"name":"open override val type: KType","description":"space.kscience.dataforge.io.JsonMetaFormat.type","location":"dataforge-io/space.kscience.dataforge.io/-json-meta-format/type.html","searchKeys":["type","open override val type: KType","space.kscience.dataforge.io.JsonMetaFormat.type"]},{"name":"open override val type: KType","description":"space.kscience.dataforge.io.MetaFormat.type","location":"dataforge-io/space.kscience.dataforge.io/-meta-format/type.html","searchKeys":["type","open override val type: KType","space.kscience.dataforge.io.MetaFormat.type"]},{"name":"open override val type: KType","description":"space.kscience.dataforge.io.MetaFormatFactory.type","location":"dataforge-io/space.kscience.dataforge.io/-meta-format-factory/type.html","searchKeys":["type","open override val type: KType","space.kscience.dataforge.io.MetaFormatFactory.type"]},{"name":"open override var data: Binary? = null","description":"space.kscience.dataforge.io.EnvelopeBuilder.data","location":"dataforge-io/space.kscience.dataforge.io/-envelope-builder/data.html","searchKeys":["data","open override var data: Binary? = null","space.kscience.dataforge.io.EnvelopeBuilder.data"]},{"name":"open override var meta: Meta","description":"space.kscience.dataforge.io.EnvelopeBuilder.meta","location":"dataforge-io/space.kscience.dataforge.io/-envelope-builder/meta.html","searchKeys":["meta","open override var meta: Meta","space.kscience.dataforge.io.EnvelopeBuilder.meta"]},{"name":"open val defaultMetaFormat: MetaFormatFactory","description":"space.kscience.dataforge.io.EnvelopeFormat.defaultMetaFormat","location":"dataforge-io/space.kscience.dataforge.io/-envelope-format/default-meta-format.html","searchKeys":["defaultMetaFormat","open val defaultMetaFormat: MetaFormatFactory","space.kscience.dataforge.io.EnvelopeFormat.defaultMetaFormat"]},{"name":"open val key: Short","description":"space.kscience.dataforge.io.MetaFormatFactory.key","location":"dataforge-io/space.kscience.dataforge.io/-meta-format-factory/key.html","searchKeys":["key","open val key: Short","space.kscience.dataforge.io.MetaFormatFactory.key"]},{"name":"operator fun Binary.get(range: IntRange): BinaryView","description":"space.kscience.dataforge.io.get","location":"dataforge-io/space.kscience.dataforge.io/get.html","searchKeys":["get","operator fun Binary.get(range: IntRange): BinaryView","space.kscience.dataforge.io.get"]},{"name":"val Context.io: IOPlugin","description":"space.kscience.dataforge.io.io","location":"dataforge-io/space.kscience.dataforge.io/io.html","searchKeys":["io","val Context.io: IOPlugin","space.kscience.dataforge.io.io"]},{"name":"val DEFAULT_JSON: Json","description":"space.kscience.dataforge.io.JsonMetaFormat.Companion.DEFAULT_JSON","location":"dataforge-io/space.kscience.dataforge.io/-json-meta-format/-companion/-d-e-f-a-u-l-t_-j-s-o-n.html","searchKeys":["DEFAULT_JSON","val DEFAULT_JSON: Json","space.kscience.dataforge.io.JsonMetaFormat.Companion.DEFAULT_JSON"]},{"name":"val EMPTY: Binary","description":"space.kscience.dataforge.io.Binary.Companion.EMPTY","location":"dataforge-io/space.kscience.dataforge.io/-binary/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: Binary","space.kscience.dataforge.io.Binary.Companion.EMPTY"]},{"name":"val ENVELOPE_DATA_ID_KEY: Name","description":"space.kscience.dataforge.io.Envelope.Companion.ENVELOPE_DATA_ID_KEY","location":"dataforge-io/space.kscience.dataforge.io/-envelope/-companion/-e-n-v-e-l-o-p-e_-d-a-t-a_-i-d_-k-e-y.html","searchKeys":["ENVELOPE_DATA_ID_KEY","val ENVELOPE_DATA_ID_KEY: Name","space.kscience.dataforge.io.Envelope.Companion.ENVELOPE_DATA_ID_KEY"]},{"name":"val ENVELOPE_DATA_TYPE_KEY: Name","description":"space.kscience.dataforge.io.Envelope.Companion.ENVELOPE_DATA_TYPE_KEY","location":"dataforge-io/space.kscience.dataforge.io/-envelope/-companion/-e-n-v-e-l-o-p-e_-d-a-t-a_-t-y-p-e_-k-e-y.html","searchKeys":["ENVELOPE_DATA_TYPE_KEY","val ENVELOPE_DATA_TYPE_KEY: Name","space.kscience.dataforge.io.Envelope.Companion.ENVELOPE_DATA_TYPE_KEY"]},{"name":"val ENVELOPE_DESCRIPTION_KEY: Name","description":"space.kscience.dataforge.io.Envelope.Companion.ENVELOPE_DESCRIPTION_KEY","location":"dataforge-io/space.kscience.dataforge.io/-envelope/-companion/-e-n-v-e-l-o-p-e_-d-e-s-c-r-i-p-t-i-o-n_-k-e-y.html","searchKeys":["ENVELOPE_DESCRIPTION_KEY","val ENVELOPE_DESCRIPTION_KEY: Name","space.kscience.dataforge.io.Envelope.Companion.ENVELOPE_DESCRIPTION_KEY"]},{"name":"val ENVELOPE_NAME_KEY: Name","description":"space.kscience.dataforge.io.Envelope.Companion.ENVELOPE_NAME_KEY","location":"dataforge-io/space.kscience.dataforge.io/-envelope/-companion/-e-n-v-e-l-o-p-e_-n-a-m-e_-k-e-y.html","searchKeys":["ENVELOPE_NAME_KEY","val ENVELOPE_NAME_KEY: Name","space.kscience.dataforge.io.Envelope.Companion.ENVELOPE_NAME_KEY"]},{"name":"val ENVELOPE_NODE_KEY: Name","description":"space.kscience.dataforge.io.Envelope.Companion.ENVELOPE_NODE_KEY","location":"dataforge-io/space.kscience.dataforge.io/-envelope/-companion/-e-n-v-e-l-o-p-e_-n-o-d-e_-k-e-y.html","searchKeys":["ENVELOPE_NODE_KEY","val ENVELOPE_NODE_KEY: Name","space.kscience.dataforge.io.Envelope.Companion.ENVELOPE_NODE_KEY"]},{"name":"val ENVELOPE_TYPE_KEY: Name","description":"space.kscience.dataforge.io.Envelope.Companion.ENVELOPE_TYPE_KEY","location":"dataforge-io/space.kscience.dataforge.io/-envelope/-companion/-e-n-v-e-l-o-p-e_-t-y-p-e_-k-e-y.html","searchKeys":["ENVELOPE_TYPE_KEY","val ENVELOPE_TYPE_KEY: Name","space.kscience.dataforge.io.Envelope.Companion.ENVELOPE_TYPE_KEY"]},{"name":"val Envelope.dataID: String?","description":"space.kscience.dataforge.io.dataID","location":"dataforge-io/space.kscience.dataforge.io/data-i-d.html","searchKeys":["dataID","val Envelope.dataID: String?","space.kscience.dataforge.io.dataID"]},{"name":"val Envelope.dataType: String?","description":"space.kscience.dataforge.io.dataType","location":"dataforge-io/space.kscience.dataforge.io/data-type.html","searchKeys":["dataType","val Envelope.dataType: String?","space.kscience.dataforge.io.dataType"]},{"name":"val Envelope.description: String?","description":"space.kscience.dataforge.io.description","location":"dataforge-io/space.kscience.dataforge.io/description.html","searchKeys":["description","val Envelope.description: String?","space.kscience.dataforge.io.description"]},{"name":"val Envelope.type: String?","description":"space.kscience.dataforge.io.type","location":"dataforge-io/space.kscience.dataforge.io/type.html","searchKeys":["type","val Envelope.type: String?","space.kscience.dataforge.io.type"]},{"name":"val EnvelopePart.name: String?","description":"space.kscience.dataforge.io.name","location":"dataforge-io/space.kscience.dataforge.io/name.html","searchKeys":["name","val EnvelopePart.name: String?","space.kscience.dataforge.io.name"]},{"name":"val IOPlugin.Companion.DATA_FILE_NAME: String","description":"space.kscience.dataforge.io.DATA_FILE_NAME","location":"dataforge-io/space.kscience.dataforge.io/-d-a-t-a_-f-i-l-e_-n-a-m-e.html","searchKeys":["DATA_FILE_NAME","val IOPlugin.Companion.DATA_FILE_NAME: String","space.kscience.dataforge.io.DATA_FILE_NAME"]},{"name":"val IOPlugin.Companion.META_FILE_NAME: String","description":"space.kscience.dataforge.io.META_FILE_NAME","location":"dataforge-io/space.kscience.dataforge.io/-m-e-t-a_-f-i-l-e_-n-a-m-e.html","searchKeys":["META_FILE_NAME","val IOPlugin.Companion.META_FILE_NAME: String","space.kscience.dataforge.io.META_FILE_NAME"]},{"name":"val META_KEY: Name","description":"space.kscience.dataforge.io.IOFormat.Companion.META_KEY","location":"dataforge-io/space.kscience.dataforge.io/-i-o-format/-companion/-m-e-t-a_-k-e-y.html","searchKeys":["META_KEY","val META_KEY: Name","space.kscience.dataforge.io.IOFormat.Companion.META_KEY"]},{"name":"val NAME_KEY: Name","description":"space.kscience.dataforge.io.IOFormat.Companion.NAME_KEY","location":"dataforge-io/space.kscience.dataforge.io/-i-o-format/-companion/-n-a-m-e_-k-e-y.html","searchKeys":["NAME_KEY","val NAME_KEY: Name","space.kscience.dataforge.io.IOFormat.Companion.NAME_KEY"]},{"name":"val binary: Binary","description":"space.kscience.dataforge.io.EnvelopePart.binary","location":"dataforge-io/space.kscience.dataforge.io/-envelope-part/binary.html","searchKeys":["binary","val binary: Binary","space.kscience.dataforge.io.EnvelopePart.binary"]},{"name":"val dataOffset: UInt","description":"space.kscience.dataforge.io.PartialEnvelope.dataOffset","location":"dataforge-io/space.kscience.dataforge.io/-partial-envelope/data-offset.html","searchKeys":["dataOffset","val dataOffset: UInt","space.kscience.dataforge.io.PartialEnvelope.dataOffset"]},{"name":"val dataSize: ULong?","description":"space.kscience.dataforge.io.PartialEnvelope.dataSize","location":"dataforge-io/space.kscience.dataforge.io/-partial-envelope/data-size.html","searchKeys":["dataSize","val dataSize: ULong?","space.kscience.dataforge.io.PartialEnvelope.dataSize"]},{"name":"val defaultEnvelopeFormats: List<EnvelopeFormatFactory>","description":"space.kscience.dataforge.io.IOPlugin.Companion.defaultEnvelopeFormats","location":"dataforge-io/space.kscience.dataforge.io/-i-o-plugin/-companion/default-envelope-formats.html","searchKeys":["defaultEnvelopeFormats","val defaultEnvelopeFormats: List<EnvelopeFormatFactory>","space.kscience.dataforge.io.IOPlugin.Companion.defaultEnvelopeFormats"]},{"name":"val defaultMetaFormats: List<MetaFormatFactory>","description":"space.kscience.dataforge.io.IOPlugin.Companion.defaultMetaFormats","location":"dataforge-io/space.kscience.dataforge.io/-i-o-plugin/-companion/default-meta-formats.html","searchKeys":["defaultMetaFormats","val defaultMetaFormats: List<MetaFormatFactory>","space.kscience.dataforge.io.IOPlugin.Companion.defaultMetaFormats"]},{"name":"val description: Meta?","description":"space.kscience.dataforge.io.EnvelopePart.description","location":"dataforge-io/space.kscience.dataforge.io/-envelope-part/description.html","searchKeys":["description","val description: Meta?","space.kscience.dataforge.io.EnvelopePart.description"]},{"name":"val envelopeFormatFactories: Collection<EnvelopeFormatFactory>","description":"space.kscience.dataforge.io.IOPlugin.envelopeFormatFactories","location":"dataforge-io/space.kscience.dataforge.io/-i-o-plugin/envelope-format-factories.html","searchKeys":["envelopeFormatFactories","val envelopeFormatFactories: Collection<EnvelopeFormatFactory>","space.kscience.dataforge.io.IOPlugin.envelopeFormatFactories"]},{"name":"val io: IOPlugin","description":"space.kscience.dataforge.io.TaggedEnvelopeFormat.io","location":"dataforge-io/space.kscience.dataforge.io/-tagged-envelope-format/io.html","searchKeys":["io","val io: IOPlugin","space.kscience.dataforge.io.TaggedEnvelopeFormat.io"]},{"name":"val io: IOPlugin","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.io","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/io.html","searchKeys":["io","val io: IOPlugin","space.kscience.dataforge.io.TaglessEnvelopeFormat.io"]},{"name":"val ioFormatFactories: Collection<IOFormatFactory<*>>","description":"space.kscience.dataforge.io.IOPlugin.ioFormatFactories","location":"dataforge-io/space.kscience.dataforge.io/-i-o-plugin/io-format-factories.html","searchKeys":["ioFormatFactories","val ioFormatFactories: Collection<IOFormatFactory<*>>","space.kscience.dataforge.io.IOPlugin.ioFormatFactories"]},{"name":"val meta: Meta","description":"space.kscience.dataforge.io.PartialEnvelope.meta","location":"dataforge-io/space.kscience.dataforge.io/-partial-envelope/meta.html","searchKeys":["meta","val meta: Meta","space.kscience.dataforge.io.PartialEnvelope.meta"]},{"name":"val meta: Meta","description":"space.kscience.dataforge.io.TaglessEnvelopeFormat.meta","location":"dataforge-io/space.kscience.dataforge.io/-tagless-envelope-format/meta.html","searchKeys":["meta","val meta: Meta","space.kscience.dataforge.io.TaglessEnvelopeFormat.meta"]},{"name":"val metaFormatFactories: Collection<MetaFormatFactory>","description":"space.kscience.dataforge.io.IOPlugin.metaFormatFactories","location":"dataforge-io/space.kscience.dataforge.io/-i-o-plugin/meta-format-factories.html","searchKeys":["metaFormatFactories","val metaFormatFactories: Collection<MetaFormatFactory>","space.kscience.dataforge.io.IOPlugin.metaFormatFactories"]},{"name":"val source: Envelope","description":"space.kscience.dataforge.io.ProxyEnvelope.source","location":"dataforge-io/space.kscience.dataforge.io/-proxy-envelope/source.html","searchKeys":["source","val source: Envelope","space.kscience.dataforge.io.ProxyEnvelope.source"]},{"name":"val tagSize: UInt","description":"space.kscience.dataforge.io.TaggedEnvelopeFormat.VERSION.tagSize","location":"dataforge-io/space.kscience.dataforge.io/-tagged-envelope-format/-v-e-r-s-i-o-n/tag-size.html","searchKeys":["tagSize","val tagSize: UInt","space.kscience.dataforge.io.TaggedEnvelopeFormat.VERSION.tagSize"]},{"name":"val version: TaggedEnvelopeFormat.VERSION","description":"space.kscience.dataforge.io.TaggedEnvelopeFormat.version","location":"dataforge-io/space.kscience.dataforge.io/-tagged-envelope-format/version.html","searchKeys":["version","val version: TaggedEnvelopeFormat.VERSION","space.kscience.dataforge.io.TaggedEnvelopeFormat.version"]},{"name":"var dataID: String?","description":"space.kscience.dataforge.io.EnvelopeBuilder.dataID","location":"dataforge-io/space.kscience.dataforge.io/-envelope-builder/data-i-d.html","searchKeys":["dataID","var dataID: String?","space.kscience.dataforge.io.EnvelopeBuilder.dataID"]},{"name":"var dataType: String?","description":"space.kscience.dataforge.io.EnvelopeBuilder.dataType","location":"dataforge-io/space.kscience.dataforge.io/-envelope-builder/data-type.html","searchKeys":["dataType","var dataType: String?","space.kscience.dataforge.io.EnvelopeBuilder.dataType"]},{"name":"var description: String?","description":"space.kscience.dataforge.io.EnvelopeBuilder.description","location":"dataforge-io/space.kscience.dataforge.io/-envelope-builder/description.html","searchKeys":["description","var description: String?","space.kscience.dataforge.io.EnvelopeBuilder.description"]},{"name":"var name: String?","description":"space.kscience.dataforge.io.EnvelopeBuilder.name","location":"dataforge-io/space.kscience.dataforge.io/-envelope-builder/name.html","searchKeys":["name","var name: String?","space.kscience.dataforge.io.EnvelopeBuilder.name"]},{"name":"var type: String?","description":"space.kscience.dataforge.io.EnvelopeBuilder.type","location":"dataforge-io/space.kscience.dataforge.io/-envelope-builder/type.html","searchKeys":["type","var type: String?","space.kscience.dataforge.io.EnvelopeBuilder.type"]},{"name":"ABSENT()","description":"space.kscience.dataforge.meta.descriptors.ValueRequirement.ABSENT","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-value-requirement/-a-b-s-e-n-t/index.html","searchKeys":["ABSENT","ABSENT()","space.kscience.dataforge.meta.descriptors.ValueRequirement.ABSENT"]},{"name":"BOOLEAN()","description":"space.kscience.dataforge.values.ValueType.BOOLEAN","location":"dataforge-meta/space.kscience.dataforge.values/-value-type/-b-o-o-l-e-a-n/index.html","searchKeys":["BOOLEAN","BOOLEAN()","space.kscience.dataforge.values.ValueType.BOOLEAN"]},{"name":"LIST()","description":"space.kscience.dataforge.values.ValueType.LIST","location":"dataforge-meta/space.kscience.dataforge.values/-value-type/-l-i-s-t/index.html","searchKeys":["LIST","LIST()","space.kscience.dataforge.values.ValueType.LIST"]},{"name":"NONE()","description":"space.kscience.dataforge.meta.descriptors.ValueRequirement.NONE","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-value-requirement/-n-o-n-e/index.html","searchKeys":["NONE","NONE()","space.kscience.dataforge.meta.descriptors.ValueRequirement.NONE"]},{"name":"NULL()","description":"space.kscience.dataforge.values.ValueType.NULL","location":"dataforge-meta/space.kscience.dataforge.values/-value-type/-n-u-l-l/index.html","searchKeys":["NULL","NULL()","space.kscience.dataforge.values.ValueType.NULL"]},{"name":"NUMBER()","description":"space.kscience.dataforge.values.ValueType.NUMBER","location":"dataforge-meta/space.kscience.dataforge.values/-value-type/-n-u-m-b-e-r/index.html","searchKeys":["NUMBER","NUMBER()","space.kscience.dataforge.values.ValueType.NUMBER"]},{"name":"REQUIRED()","description":"space.kscience.dataforge.meta.descriptors.ValueRequirement.REQUIRED","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-value-requirement/-r-e-q-u-i-r-e-d/index.html","searchKeys":["REQUIRED","REQUIRED()","space.kscience.dataforge.meta.descriptors.ValueRequirement.REQUIRED"]},{"name":"STRING()","description":"space.kscience.dataforge.values.ValueType.STRING","location":"dataforge-meta/space.kscience.dataforge.values/-value-type/-s-t-r-i-n-g/index.html","searchKeys":["STRING","STRING()","space.kscience.dataforge.values.ValueType.STRING"]},{"name":"abstract fun attach(name: Name, node: M)","description":"space.kscience.dataforge.meta.MutableTypedMeta.attach","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-typed-meta/attach.html","searchKeys":["attach","abstract fun attach(name: Name, node: M)","space.kscience.dataforge.meta.MutableTypedMeta.attach"]},{"name":"abstract fun empty(): T","description":"space.kscience.dataforge.meta.ReadOnlySpecification.empty","location":"dataforge-meta/space.kscience.dataforge.meta/-read-only-specification/empty.html","searchKeys":["empty","abstract fun empty(): T","space.kscience.dataforge.meta.ReadOnlySpecification.empty"]},{"name":"abstract fun getMeta(name: Name): Meta?","description":"space.kscience.dataforge.meta.MetaProvider.getMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-meta-provider/get-meta.html","searchKeys":["getMeta","abstract fun getMeta(name: Name): Meta?","space.kscience.dataforge.meta.MetaProvider.getMeta"]},{"name":"abstract fun getOrCreate(name: Name): MutableMeta","description":"space.kscience.dataforge.meta.MutableMeta.getOrCreate","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/get-or-create.html","searchKeys":["getOrCreate","abstract fun getOrCreate(name: Name): MutableMeta","space.kscience.dataforge.meta.MutableMeta.getOrCreate"]},{"name":"abstract fun getValue(name: Name): Value?","description":"space.kscience.dataforge.values.ValueProvider.getValue","location":"dataforge-meta/space.kscience.dataforge.values/-value-provider/get-value.html","searchKeys":["getValue","abstract fun getValue(name: Name): Value?","space.kscience.dataforge.values.ValueProvider.getValue"]},{"name":"abstract fun invalidate(name: Name)","description":"space.kscience.dataforge.meta.ObservableMeta.invalidate","location":"dataforge-meta/space.kscience.dataforge.meta/-observable-meta/invalidate.html","searchKeys":["invalidate","abstract fun invalidate(name: Name)","space.kscience.dataforge.meta.ObservableMeta.invalidate"]},{"name":"abstract fun matches(name: Name, item: Meta?): Boolean","description":"space.kscience.dataforge.meta.transformations.TransformationRule.matches","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-transformation-rule/matches.html","searchKeys":["matches","abstract fun matches(name: Name, item: Meta?): Boolean","space.kscience.dataforge.meta.transformations.TransformationRule.matches"]},{"name":"abstract fun metaToObject(meta: Meta): T?","description":"space.kscience.dataforge.meta.transformations.MetaConverter.metaToObject","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-converter/meta-to-object.html","searchKeys":["metaToObject","abstract fun metaToObject(meta: Meta): T?","space.kscience.dataforge.meta.transformations.MetaConverter.metaToObject"]},{"name":"abstract fun objectToMeta(obj: T): Meta","description":"space.kscience.dataforge.meta.transformations.MetaConverter.objectToMeta","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-converter/object-to-meta.html","searchKeys":["objectToMeta","abstract fun objectToMeta(obj: T): Meta","space.kscience.dataforge.meta.transformations.MetaConverter.objectToMeta"]},{"name":"abstract fun onChange(owner: Any?, callback: Meta.(name: Name) -> Unit)","description":"space.kscience.dataforge.meta.ObservableMeta.onChange","location":"dataforge-meta/space.kscience.dataforge.meta/-observable-meta/on-change.html","searchKeys":["onChange","abstract fun onChange(owner: Any?, callback: Meta.(name: Name) -> Unit)","space.kscience.dataforge.meta.ObservableMeta.onChange"]},{"name":"abstract fun read(source: Meta): T","description":"space.kscience.dataforge.meta.ReadOnlySpecification.read","location":"dataforge-meta/space.kscience.dataforge.meta/-read-only-specification/read.html","searchKeys":["read","abstract fun read(source: Meta): T","space.kscience.dataforge.meta.ReadOnlySpecification.read"]},{"name":"abstract fun removeListener(owner: Any?)","description":"space.kscience.dataforge.meta.ObservableMeta.removeListener","location":"dataforge-meta/space.kscience.dataforge.meta/-observable-meta/remove-listener.html","searchKeys":["removeListener","abstract fun removeListener(owner: Any?)","space.kscience.dataforge.meta.ObservableMeta.removeListener"]},{"name":"abstract fun setMeta(name: Name, node: Meta?)","description":"space.kscience.dataforge.meta.MutableMetaProvider.setMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta-provider/set-meta.html","searchKeys":["setMeta","abstract fun setMeta(name: Name, node: Meta?)","space.kscience.dataforge.meta.MutableMetaProvider.setMeta"]},{"name":"abstract fun setValue(name: Name, value: Value?)","description":"space.kscience.dataforge.values.MutableValueProvider.setValue","location":"dataforge-meta/space.kscience.dataforge.values/-mutable-value-provider/set-value.html","searchKeys":["setValue","abstract fun setValue(name: Name, value: Value?)","space.kscience.dataforge.values.MutableValueProvider.setValue"]},{"name":"abstract fun toMeta(): Meta","description":"space.kscience.dataforge.meta.MetaRepr.toMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-meta-repr/to-meta.html","searchKeys":["toMeta","abstract fun toMeta(): Meta","space.kscience.dataforge.meta.MetaRepr.toMeta"]},{"name":"abstract fun transformItem(name: Name, item: Meta?, target: MutableMeta)","description":"space.kscience.dataforge.meta.transformations.TransformationRule.transformItem","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-transformation-rule/transform-item.html","searchKeys":["transformItem","abstract fun transformItem(name: Name, item: Meta?, target: MutableMeta)","space.kscience.dataforge.meta.transformations.TransformationRule.transformItem"]},{"name":"abstract fun write(target: MutableMeta): T","description":"space.kscience.dataforge.meta.Specification.write","location":"dataforge-meta/space.kscience.dataforge.meta/-specification/write.html","searchKeys":["write","abstract fun write(target: MutableMeta): T","space.kscience.dataforge.meta.Specification.write"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"space.kscience.dataforge.meta.Meta.equals","location":"dataforge-meta/space.kscience.dataforge.meta/-meta/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","space.kscience.dataforge.meta.Meta.equals"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"space.kscience.dataforge.values.Value.equals","location":"dataforge-meta/space.kscience.dataforge.values/-value/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","space.kscience.dataforge.values.Value.equals"]},{"name":"abstract override fun getMeta(name: Name): M?","description":"space.kscience.dataforge.meta.MutableTypedMeta.getMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-typed-meta/get-meta.html","searchKeys":["getMeta","abstract override fun getMeta(name: Name): M?","space.kscience.dataforge.meta.MutableTypedMeta.getMeta"]},{"name":"abstract override fun getMeta(name: Name): MutableMeta?","description":"space.kscience.dataforge.meta.MutableMetaProvider.getMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta-provider/get-meta.html","searchKeys":["getMeta","abstract override fun getMeta(name: Name): MutableMeta?","space.kscience.dataforge.meta.MutableMetaProvider.getMeta"]},{"name":"abstract override fun getOrCreate(name: Name): M","description":"space.kscience.dataforge.meta.MutableTypedMeta.getOrCreate","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-typed-meta/get-or-create.html","searchKeys":["getOrCreate","abstract override fun getOrCreate(name: Name): M","space.kscience.dataforge.meta.MutableTypedMeta.getOrCreate"]},{"name":"abstract override fun getOrCreate(name: Name): ObservableMutableMeta","description":"space.kscience.dataforge.meta.ObservableMutableMeta.getOrCreate","location":"dataforge-meta/space.kscience.dataforge.meta/-observable-mutable-meta/get-or-create.html","searchKeys":["getOrCreate","abstract override fun getOrCreate(name: Name): ObservableMutableMeta","space.kscience.dataforge.meta.ObservableMutableMeta.getOrCreate"]},{"name":"abstract override fun hashCode(): Int","description":"space.kscience.dataforge.meta.Meta.hashCode","location":"dataforge-meta/space.kscience.dataforge.meta/-meta/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","space.kscience.dataforge.meta.Meta.hashCode"]},{"name":"abstract override fun hashCode(): Int","description":"space.kscience.dataforge.values.Value.hashCode","location":"dataforge-meta/space.kscience.dataforge.values/-value/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","space.kscience.dataforge.values.Value.hashCode"]},{"name":"abstract override fun toString(): String","description":"space.kscience.dataforge.meta.Meta.toString","location":"dataforge-meta/space.kscience.dataforge.meta/-meta/to-string.html","searchKeys":["toString","abstract override fun toString(): String","space.kscience.dataforge.meta.Meta.toString"]},{"name":"abstract override fun toString(): String","description":"space.kscience.dataforge.values.Value.toString","location":"dataforge-meta/space.kscience.dataforge.values/-value/to-string.html","searchKeys":["toString","abstract override fun toString(): String","space.kscience.dataforge.values.Value.toString"]},{"name":"abstract override val items: Map<NameToken, M>","description":"space.kscience.dataforge.meta.TypedMeta.items","location":"dataforge-meta/space.kscience.dataforge.meta/-typed-meta/items.html","searchKeys":["items","abstract override val items: Map<NameToken, M>","space.kscience.dataforge.meta.TypedMeta.items"]},{"name":"abstract override val items: Map<NameToken, MutableMeta>","description":"space.kscience.dataforge.meta.MutableMeta.items","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/items.html","searchKeys":["items","abstract override val items: Map<NameToken, MutableMeta>","space.kscience.dataforge.meta.MutableMeta.items"]},{"name":"abstract override var value: Value?","description":"space.kscience.dataforge.meta.MutableMeta.value","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/value.html","searchKeys":["value","abstract override var value: Value?","space.kscience.dataforge.meta.MutableMeta.value"]},{"name":"abstract val descriptor: MetaDescriptor?","description":"space.kscience.dataforge.meta.descriptors.Described.descriptor","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-described/descriptor.html","searchKeys":["descriptor","abstract val descriptor: MetaDescriptor?","space.kscience.dataforge.meta.descriptors.Described.descriptor"]},{"name":"abstract val items: Map<NameToken, Meta>","description":"space.kscience.dataforge.meta.Meta.items","location":"dataforge-meta/space.kscience.dataforge.meta/-meta/items.html","searchKeys":["items","abstract val items: Map<NameToken, Meta>","space.kscience.dataforge.meta.Meta.items"]},{"name":"abstract val meta: MutableMeta","description":"space.kscience.dataforge.meta.Configurable.meta","location":"dataforge-meta/space.kscience.dataforge.meta/-configurable/meta.html","searchKeys":["meta","abstract val meta: MutableMeta","space.kscience.dataforge.meta.Configurable.meta"]},{"name":"abstract val name: Name","description":"space.kscience.dataforge.misc.Named.name","location":"dataforge-meta/space.kscience.dataforge.misc/-named/name.html","searchKeys":["name","abstract val name: Name","space.kscience.dataforge.misc.Named.name"]},{"name":"abstract val type: ValueType","description":"space.kscience.dataforge.values.Value.type","location":"dataforge-meta/space.kscience.dataforge.values/-value/type.html","searchKeys":["type","abstract val type: ValueType","space.kscience.dataforge.values.Value.type"]},{"name":"abstract val value: Any?","description":"space.kscience.dataforge.values.Value.value","location":"dataforge-meta/space.kscience.dataforge.values/-value/value.html","searchKeys":["value","abstract val value: Any?","space.kscience.dataforge.values.Value.value"]},{"name":"abstract val value: Value?","description":"space.kscience.dataforge.meta.Meta.value","location":"dataforge-meta/space.kscience.dataforge.meta/-meta/value.html","searchKeys":["value","abstract val value: Value?","space.kscience.dataforge.meta.Meta.value"]},{"name":"annotation class DFBuilder","description":"space.kscience.dataforge.misc.DFBuilder","location":"dataforge-meta/space.kscience.dataforge.misc/-d-f-builder/index.html","searchKeys":["DFBuilder","annotation class DFBuilder","space.kscience.dataforge.misc.DFBuilder"]},{"name":"annotation class DFExperimental","description":"space.kscience.dataforge.misc.DFExperimental","location":"dataforge-meta/space.kscience.dataforge.misc/-d-f-experimental/index.html","searchKeys":["DFExperimental","annotation class DFExperimental","space.kscience.dataforge.misc.DFExperimental"]},{"name":"annotation class DFInternal","description":"space.kscience.dataforge.misc.DFInternal","location":"dataforge-meta/space.kscience.dataforge.misc/-d-f-internal/index.html","searchKeys":["DFInternal","annotation class DFInternal","space.kscience.dataforge.misc.DFInternal"]},{"name":"annotation class MetaBuilder","description":"space.kscience.dataforge.meta.MetaBuilder","location":"dataforge-meta/space.kscience.dataforge.meta/-meta-builder/index.html","searchKeys":["MetaBuilder","annotation class MetaBuilder","space.kscience.dataforge.meta.MetaBuilder"]},{"name":"annotation class Type(id: String)","description":"space.kscience.dataforge.misc.Type","location":"dataforge-meta/space.kscience.dataforge.misc/-type/index.html","searchKeys":["Type","annotation class Type(id: String)","space.kscience.dataforge.misc.Type"]},{"name":"class DoubleArrayValue(value: DoubleArray) : Value, Iterable<Double> ","description":"space.kscience.dataforge.values.DoubleArrayValue","location":"dataforge-meta/space.kscience.dataforge.values/-double-array-value/index.html","searchKeys":["DoubleArrayValue","class DoubleArrayValue(value: DoubleArray) : Value, Iterable<Double> ","space.kscience.dataforge.values.DoubleArrayValue"]},{"name":"class DynamicMeta(obj: dynamic) : TypedMeta<DynamicMeta> ","description":"space.kscience.dataforge.meta.DynamicMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-dynamic-meta/index.html","searchKeys":["DynamicMeta","class DynamicMeta(obj: dynamic) : TypedMeta<DynamicMeta> ","space.kscience.dataforge.meta.DynamicMeta"]},{"name":"class EnumValue<E : Enum<*>>(value: E) : Value","description":"space.kscience.dataforge.values.EnumValue","location":"dataforge-meta/space.kscience.dataforge.values/-enum-value/index.html","searchKeys":["EnumValue","class EnumValue<E : Enum<*>>(value: E) : Value","space.kscience.dataforge.values.EnumValue"]},{"name":"class Laminate : TypedMeta<Laminate> ","description":"space.kscience.dataforge.meta.Laminate","location":"dataforge-meta/space.kscience.dataforge.meta/-laminate/index.html","searchKeys":["Laminate","class Laminate : TypedMeta<Laminate> ","space.kscience.dataforge.meta.Laminate"]},{"name":"class LazyParsedValue(string: String) : Value","description":"space.kscience.dataforge.values.LazyParsedValue","location":"dataforge-meta/space.kscience.dataforge.values/-lazy-parsed-value/index.html","searchKeys":["LazyParsedValue","class LazyParsedValue(string: String) : Value","space.kscience.dataforge.values.LazyParsedValue"]},{"name":"class ListValue(list: List<Value>) : Value, Iterable<Value> ","description":"space.kscience.dataforge.values.ListValue","location":"dataforge-meta/space.kscience.dataforge.values/-list-value/index.html","searchKeys":["ListValue","class ListValue(list: List<Value>) : Value, Iterable<Value> ","space.kscience.dataforge.values.ListValue"]},{"name":"class MetaDescriptorBuilder","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor-builder/index.html","searchKeys":["MetaDescriptorBuilder","class MetaDescriptorBuilder","space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder"]},{"name":"class MetaTransformationBuilder","description":"space.kscience.dataforge.meta.transformations.MetaTransformationBuilder","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-transformation-builder/index.html","searchKeys":["MetaTransformationBuilder","class MetaTransformationBuilder","space.kscience.dataforge.meta.transformations.MetaTransformationBuilder"]},{"name":"class Name(tokens: List<NameToken>)","description":"space.kscience.dataforge.names.Name","location":"dataforge-meta/space.kscience.dataforge.names/-name/index.html","searchKeys":["Name","class Name(tokens: List<NameToken>)","space.kscience.dataforge.names.Name"]},{"name":"class NumberValue(number: Number) : Value","description":"space.kscience.dataforge.values.NumberValue","location":"dataforge-meta/space.kscience.dataforge.values/-number-value/index.html","searchKeys":["NumberValue","class NumberValue(number: Number) : Value","space.kscience.dataforge.values.NumberValue"]},{"name":"class SealedMeta : TypedMeta<SealedMeta> ","description":"space.kscience.dataforge.meta.SealedMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-sealed-meta/index.html","searchKeys":["SealedMeta","class SealedMeta : TypedMeta<SealedMeta> ","space.kscience.dataforge.meta.SealedMeta"]},{"name":"const val INDEX_KEY: String","description":"space.kscience.dataforge.meta.Meta.Companion.INDEX_KEY","location":"dataforge-meta/space.kscience.dataforge.meta/-meta/-companion/-i-n-d-e-x_-k-e-y.html","searchKeys":["INDEX_KEY","const val INDEX_KEY: String","space.kscience.dataforge.meta.Meta.Companion.INDEX_KEY"]},{"name":"const val NAME_SEPARATOR: String","description":"space.kscience.dataforge.names.Name.Companion.NAME_SEPARATOR","location":"dataforge-meta/space.kscience.dataforge.names/-name/-companion/-n-a-m-e_-s-e-p-a-r-a-t-o-r.html","searchKeys":["NAME_SEPARATOR","const val NAME_SEPARATOR: String","space.kscience.dataforge.names.Name.Companion.NAME_SEPARATOR"]},{"name":"const val TYPE: String","description":"space.kscience.dataforge.meta.Meta.Companion.TYPE","location":"dataforge-meta/space.kscience.dataforge.meta/-meta/-companion/-t-y-p-e.html","searchKeys":["TYPE","const val TYPE: String","space.kscience.dataforge.meta.Meta.Companion.TYPE"]},{"name":"const val TYPE: String","description":"space.kscience.dataforge.values.Value.Companion.TYPE","location":"dataforge-meta/space.kscience.dataforge.values/-value/-companion/-t-y-p-e.html","searchKeys":["TYPE","const val TYPE: String","space.kscience.dataforge.values.Value.Companion.TYPE"]},{"name":"const val VALUE_KEY: String","description":"space.kscience.dataforge.meta.Meta.Companion.VALUE_KEY","location":"dataforge-meta/space.kscience.dataforge.meta/-meta/-companion/-v-a-l-u-e_-k-e-y.html","searchKeys":["VALUE_KEY","const val VALUE_KEY: String","space.kscience.dataforge.meta.Meta.Companion.VALUE_KEY"]},{"name":"data class KeepTransformationRule(selector: (Name) -> Boolean) : TransformationRule","description":"space.kscience.dataforge.meta.transformations.KeepTransformationRule","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-keep-transformation-rule/index.html","searchKeys":["KeepTransformationRule","data class KeepTransformationRule(selector: (Name) -> Boolean) : TransformationRule","space.kscience.dataforge.meta.transformations.KeepTransformationRule"]},{"name":"data class MetaDescriptor(info: String?, children: Map<String, MetaDescriptor>, multiple: Boolean, valueRequirement: ValueRequirement, valueTypes: List<ValueType>?, indexKey: String, defaultValue: Value?, attributes: Meta)","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptor","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor/index.html","searchKeys":["MetaDescriptor","data class MetaDescriptor(info: String?, children: Map<String, MetaDescriptor>, multiple: Boolean, valueRequirement: ValueRequirement, valueTypes: List<ValueType>?, indexKey: String, defaultValue: Value?, attributes: Meta)","space.kscience.dataforge.meta.descriptors.MetaDescriptor"]},{"name":"data class NameToken(body: String, index: String?)","description":"space.kscience.dataforge.names.NameToken","location":"dataforge-meta/space.kscience.dataforge.names/-name-token/index.html","searchKeys":["NameToken","data class NameToken(body: String, index: String?)","space.kscience.dataforge.names.NameToken"]},{"name":"data class RegexItemTransformationRule(from: Regex, transform: MutableMeta.(name: Name, MatchResult, Meta?) -> Unit) : TransformationRule","description":"space.kscience.dataforge.meta.transformations.RegexItemTransformationRule","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-regex-item-transformation-rule/index.html","searchKeys":["RegexItemTransformationRule","data class RegexItemTransformationRule(from: Regex, transform: MutableMeta.(name: Name, MatchResult, Meta?) -> Unit) : TransformationRule","space.kscience.dataforge.meta.transformations.RegexItemTransformationRule"]},{"name":"data class SingleItemTransformationRule(from: Name, transform: MutableMeta.(Name, Meta?) -> Unit) : TransformationRule","description":"space.kscience.dataforge.meta.transformations.SingleItemTransformationRule","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-single-item-transformation-rule/index.html","searchKeys":["SingleItemTransformationRule","data class SingleItemTransformationRule(from: Name, transform: MutableMeta.(Name, Meta?) -> Unit) : TransformationRule","space.kscience.dataforge.meta.transformations.SingleItemTransformationRule"]},{"name":"enum ValueRequirement : Enum<ValueRequirement> ","description":"space.kscience.dataforge.meta.descriptors.ValueRequirement","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-value-requirement/index.html","searchKeys":["ValueRequirement","enum ValueRequirement : Enum<ValueRequirement> ","space.kscience.dataforge.meta.descriptors.ValueRequirement"]},{"name":"enum ValueType : Enum<ValueType> ","description":"space.kscience.dataforge.values.ValueType","location":"dataforge-meta/space.kscience.dataforge.values/-value-type/index.html","searchKeys":["ValueType","enum ValueType : Enum<ValueType> ","space.kscience.dataforge.values.ValueType"]},{"name":"fun <E : Enum<*>> EnumValue(value: E)","description":"space.kscience.dataforge.values.EnumValue.EnumValue","location":"dataforge-meta/space.kscience.dataforge.values/-enum-value/-enum-value.html","searchKeys":["EnumValue","fun <E : Enum<*>> EnumValue(value: E)","space.kscience.dataforge.values.EnumValue.EnumValue"]},{"name":"fun <E : Enum<E>> E.asValue(): Value","description":"space.kscience.dataforge.values.asValue","location":"dataforge-meta/space.kscience.dataforge.values/as-value.html","searchKeys":["asValue","fun <E : Enum<E>> E.asValue(): Value","space.kscience.dataforge.values.asValue"]},{"name":"fun <M : MutableTypedMeta<M>> M.getOrCreate(key: String): M","description":"space.kscience.dataforge.meta.getOrCreate","location":"dataforge-meta/space.kscience.dataforge.meta/get-or-create.html","searchKeys":["getOrCreate","fun <M : MutableTypedMeta<M>> M.getOrCreate(key: String): M","space.kscience.dataforge.meta.getOrCreate"]},{"name":"fun <M : MutableTypedMeta<M>> MutableTypedMeta<M>.edit(name: Name, builder: M.() -> Unit): M","description":"space.kscience.dataforge.meta.edit","location":"dataforge-meta/space.kscience.dataforge.meta/edit.html","searchKeys":["edit","fun <M : MutableTypedMeta<M>> MutableTypedMeta<M>.edit(name: Name, builder: M.() -> Unit): M","space.kscience.dataforge.meta.edit"]},{"name":"fun <M : TypedMeta<M>> TypedMeta<M>.getIndexed(name: Name): Map<String?, M>","description":"space.kscience.dataforge.meta.getIndexed","location":"dataforge-meta/space.kscience.dataforge.meta/get-indexed.html","searchKeys":["getIndexed","fun <M : TypedMeta<M>> TypedMeta<M>.getIndexed(name: Name): Map<String?, M>","space.kscience.dataforge.meta.getIndexed"]},{"name":"fun <M : TypedMeta<M>> TypedMeta<M>.getIndexed(name: String): Map<String?, Meta>","description":"space.kscience.dataforge.meta.getIndexed","location":"dataforge-meta/space.kscience.dataforge.meta/get-indexed.html","searchKeys":["getIndexed","fun <M : TypedMeta<M>> TypedMeta<M>.getIndexed(name: String): Map<String?, Meta>","space.kscience.dataforge.meta.getIndexed"]},{"name":"fun <R> MetaProvider.value(key: Name? = null, reader: (Value?) -> R): ReadOnlyProperty<Any?, R>","description":"space.kscience.dataforge.meta.value","location":"dataforge-meta/space.kscience.dataforge.meta/value.html","searchKeys":["value","fun <R> MetaProvider.value(key: Name? = null, reader: (Value?) -> R): ReadOnlyProperty<Any?, R>","space.kscience.dataforge.meta.value"]},{"name":"fun <S : Scheme, T> S.useProperty(property: KProperty1<S, T>, owner: Any? = null, callBack: S.(T) -> Unit)","description":"space.kscience.dataforge.meta.useProperty","location":"dataforge-meta/space.kscience.dataforge.meta/use-property.html","searchKeys":["useProperty","fun <S : Scheme, T> S.useProperty(property: KProperty1<S, T>, owner: Any? = null, callBack: S.(T) -> Unit)","space.kscience.dataforge.meta.useProperty"]},{"name":"fun <T : Any> Configurable.updateWith(spec: Specification<T>, action: T.() -> Unit): T","description":"space.kscience.dataforge.meta.updateWith","location":"dataforge-meta/space.kscience.dataforge.meta/update-with.html","searchKeys":["updateWith","fun <T : Any> Configurable.updateWith(spec: Specification<T>, action: T.() -> Unit): T","space.kscience.dataforge.meta.updateWith"]},{"name":"fun <T : Any> MetaConverter<T>.nullableMetaToObject(item: Meta?): T?","description":"space.kscience.dataforge.meta.transformations.nullableMetaToObject","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/nullable-meta-to-object.html","searchKeys":["nullableMetaToObject","fun <T : Any> MetaConverter<T>.nullableMetaToObject(item: Meta?): T?","space.kscience.dataforge.meta.transformations.nullableMetaToObject"]},{"name":"fun <T : Any> MetaConverter<T>.nullableObjectToMeta(obj: T?): Meta?","description":"space.kscience.dataforge.meta.transformations.nullableObjectToMeta","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/nullable-object-to-meta.html","searchKeys":["nullableObjectToMeta","fun <T : Any> MetaConverter<T>.nullableObjectToMeta(obj: T?): Meta?","space.kscience.dataforge.meta.transformations.nullableObjectToMeta"]},{"name":"fun <T : Any> MutableMeta.updateWith(spec: Specification<T>, action: T.() -> Unit): T","description":"space.kscience.dataforge.meta.updateWith","location":"dataforge-meta/space.kscience.dataforge.meta/update-with.html","searchKeys":["updateWith","fun <T : Any> MutableMeta.updateWith(spec: Specification<T>, action: T.() -> Unit): T","space.kscience.dataforge.meta.updateWith"]},{"name":"fun <T : Configurable> T.configure(meta: Meta): T","description":"space.kscience.dataforge.meta.configure","location":"dataforge-meta/space.kscience.dataforge.meta/configure.html","searchKeys":["configure","fun <T : Configurable> T.configure(meta: Meta): T","space.kscience.dataforge.meta.configure"]},{"name":"fun <T : Scheme> MutableMeta.listOfSpec(spec: Specification<T>, key: Name? = null): ReadWriteProperty<Any?, List<T>>","description":"space.kscience.dataforge.meta.listOfSpec","location":"dataforge-meta/space.kscience.dataforge.meta/list-of-spec.html","searchKeys":["listOfSpec","fun <T : Scheme> MutableMeta.listOfSpec(spec: Specification<T>, key: Name? = null): ReadWriteProperty<Any?, List<T>>","space.kscience.dataforge.meta.listOfSpec"]},{"name":"fun <T : Scheme> MutableMeta.spec(spec: Specification<T>, key: Name? = null): ReadWriteProperty<Any?, T>","description":"space.kscience.dataforge.meta.spec","location":"dataforge-meta/space.kscience.dataforge.meta/spec.html","searchKeys":["spec","fun <T : Scheme> MutableMeta.spec(spec: Specification<T>, key: Name? = null): ReadWriteProperty<Any?, T>","space.kscience.dataforge.meta.spec"]},{"name":"fun <T : Scheme> Scheme.spec(spec: Specification<T>, key: Name? = null): ReadWriteProperty<Any?, T>","description":"space.kscience.dataforge.meta.spec","location":"dataforge-meta/space.kscience.dataforge.meta/spec.html","searchKeys":["spec","fun <T : Scheme> Scheme.spec(spec: Specification<T>, key: Name? = null): ReadWriteProperty<Any?, T>","space.kscience.dataforge.meta.spec"]},{"name":"fun <T : Scheme> T.retarget(provider: MutableMeta): T","description":"space.kscience.dataforge.meta.retarget","location":"dataforge-meta/space.kscience.dataforge.meta/retarget.html","searchKeys":["retarget","fun <T : Scheme> T.retarget(provider: MutableMeta): T","space.kscience.dataforge.meta.retarget"]},{"name":"fun <T> MetaConverter<T>.valueToObject(value: Value): T?","description":"space.kscience.dataforge.meta.transformations.valueToObject","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/value-to-object.html","searchKeys":["valueToObject","fun <T> MetaConverter<T>.valueToObject(value: Value): T?","space.kscience.dataforge.meta.transformations.valueToObject"]},{"name":"fun <T> MetaProvider.node(key: Name? = null, converter: MetaConverter<T>): ReadOnlyProperty<Any?, T?>","description":"space.kscience.dataforge.meta.node","location":"dataforge-meta/space.kscience.dataforge.meta/node.html","searchKeys":["node","fun <T> MetaProvider.node(key: Name? = null, converter: MetaConverter<T>): ReadOnlyProperty<Any?, T?>","space.kscience.dataforge.meta.node"]},{"name":"fun <T> MutableMetaProvider.listValue(key: Name? = null, writer: (T) -> Value = { Value.of(it) }, reader: (Value) -> T): ReadWriteProperty<Any?, List<T>?>","description":"space.kscience.dataforge.meta.listValue","location":"dataforge-meta/space.kscience.dataforge.meta/list-value.html","searchKeys":["listValue","fun <T> MutableMetaProvider.listValue(key: Name? = null, writer: (T) -> Value = { Value.of(it) }, reader: (Value) -> T): ReadWriteProperty<Any?, List<T>?>","space.kscience.dataforge.meta.listValue"]},{"name":"fun <T> MutableMetaProvider.node(key: Name? = null, converter: MetaConverter<T>): ReadWriteProperty<Any?, T?>","description":"space.kscience.dataforge.meta.node","location":"dataforge-meta/space.kscience.dataforge.meta/node.html","searchKeys":["node","fun <T> MutableMetaProvider.node(key: Name? = null, converter: MetaConverter<T>): ReadWriteProperty<Any?, T?>","space.kscience.dataforge.meta.node"]},{"name":"fun <T> MutableMetaProvider.value(key: Name? = null, writer: (T) -> Value? = { Value.of(it) }, reader: (Value?) -> T): ReadWriteProperty<Any?, T>","description":"space.kscience.dataforge.meta.value","location":"dataforge-meta/space.kscience.dataforge.meta/value.html","searchKeys":["value","fun <T> MutableMetaProvider.value(key: Name? = null, writer: (T) -> Value? = { Value.of(it) }, reader: (Value?) -> T): ReadWriteProperty<Any?, T>","space.kscience.dataforge.meta.value"]},{"name":"fun <T> valueList(writer: (T) -> Value = { Value.of(it) }, reader: (Value) -> T): MetaConverter<List<T>>","description":"space.kscience.dataforge.meta.transformations.MetaConverter.Companion.valueList","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-converter/-companion/value-list.html","searchKeys":["valueList","fun <T> valueList(writer: (T) -> Value = { Value.of(it) }, reader: (Value) -> T): MetaConverter<List<T>>","space.kscience.dataforge.meta.transformations.MetaConverter.Companion.valueList"]},{"name":"fun <out T : Scheme> SchemeSpec(builder: () -> T)","description":"space.kscience.dataforge.meta.SchemeSpec.SchemeSpec","location":"dataforge-meta/space.kscience.dataforge.meta/-scheme-spec/-scheme-spec.html","searchKeys":["SchemeSpec","fun <out T : Scheme> SchemeSpec(builder: () -> T)","space.kscience.dataforge.meta.SchemeSpec.SchemeSpec"]},{"name":"fun Boolean.asValue(): Value","description":"space.kscience.dataforge.values.asValue","location":"dataforge-meta/space.kscience.dataforge.values/as-value.html","searchKeys":["asValue","fun Boolean.asValue(): Value","space.kscience.dataforge.values.asValue"]},{"name":"fun ByteArray.asValue(): Value","description":"space.kscience.dataforge.values.asValue","location":"dataforge-meta/space.kscience.dataforge.values/as-value.html","searchKeys":["asValue","fun ByteArray.asValue(): Value","space.kscience.dataforge.values.asValue"]},{"name":"fun DFBuilder()","description":"space.kscience.dataforge.misc.DFBuilder.DFBuilder","location":"dataforge-meta/space.kscience.dataforge.misc/-d-f-builder/-d-f-builder.html","searchKeys":["DFBuilder","fun DFBuilder()","space.kscience.dataforge.misc.DFBuilder.DFBuilder"]},{"name":"fun DFExperimental()","description":"space.kscience.dataforge.misc.DFExperimental.DFExperimental","location":"dataforge-meta/space.kscience.dataforge.misc/-d-f-experimental/-d-f-experimental.html","searchKeys":["DFExperimental","fun DFExperimental()","space.kscience.dataforge.misc.DFExperimental.DFExperimental"]},{"name":"fun DFInternal()","description":"space.kscience.dataforge.misc.DFInternal.DFInternal","location":"dataforge-meta/space.kscience.dataforge.misc/-d-f-internal/-d-f-internal.html","searchKeys":["DFInternal","fun DFInternal()","space.kscience.dataforge.misc.DFInternal.DFInternal"]},{"name":"fun DoubleArray.asValue(): Value","description":"space.kscience.dataforge.values.asValue","location":"dataforge-meta/space.kscience.dataforge.values/as-value.html","searchKeys":["asValue","fun DoubleArray.asValue(): Value","space.kscience.dataforge.values.asValue"]},{"name":"fun DoubleArrayValue(value: DoubleArray)","description":"space.kscience.dataforge.values.DoubleArrayValue.DoubleArrayValue","location":"dataforge-meta/space.kscience.dataforge.values/-double-array-value/-double-array-value.html","searchKeys":["DoubleArrayValue","fun DoubleArrayValue(value: DoubleArray)","space.kscience.dataforge.values.DoubleArrayValue.DoubleArrayValue"]},{"name":"fun DynamicMeta(obj: dynamic)","description":"space.kscience.dataforge.meta.DynamicMeta.DynamicMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-dynamic-meta/-dynamic-meta.html","searchKeys":["DynamicMeta","fun DynamicMeta(obj: dynamic)","space.kscience.dataforge.meta.DynamicMeta.DynamicMeta"]},{"name":"fun FloatArray.asValue(): Value","description":"space.kscience.dataforge.values.asValue","location":"dataforge-meta/space.kscience.dataforge.values/as-value.html","searchKeys":["asValue","fun FloatArray.asValue(): Value","space.kscience.dataforge.values.asValue"]},{"name":"fun IntArray.asValue(): Value","description":"space.kscience.dataforge.values.asValue","location":"dataforge-meta/space.kscience.dataforge.values/as-value.html","searchKeys":["asValue","fun IntArray.asValue(): Value","space.kscience.dataforge.values.asValue"]},{"name":"fun Iterable<Value>.asValue(): Value","description":"space.kscience.dataforge.values.asValue","location":"dataforge-meta/space.kscience.dataforge.values/as-value.html","searchKeys":["asValue","fun Iterable<Value>.asValue(): Value","space.kscience.dataforge.values.asValue"]},{"name":"fun JsonElement.toMeta(descriptor: MetaDescriptor? = null): SealedMeta","description":"space.kscience.dataforge.meta.toMeta","location":"dataforge-meta/space.kscience.dataforge.meta/to-meta.html","searchKeys":["toMeta","fun JsonElement.toMeta(descriptor: MetaDescriptor? = null): SealedMeta","space.kscience.dataforge.meta.toMeta"]},{"name":"fun JsonObject.toMeta(descriptor: MetaDescriptor? = null): SealedMeta","description":"space.kscience.dataforge.meta.toMeta","location":"dataforge-meta/space.kscience.dataforge.meta/to-meta.html","searchKeys":["toMeta","fun JsonObject.toMeta(descriptor: MetaDescriptor? = null): SealedMeta","space.kscience.dataforge.meta.toMeta"]},{"name":"fun JsonPrimitive.toValue(descriptor: MetaDescriptor?): Value","description":"space.kscience.dataforge.meta.toValue","location":"dataforge-meta/space.kscience.dataforge.meta/to-value.html","searchKeys":["toValue","fun JsonPrimitive.toValue(descriptor: MetaDescriptor?): Value","space.kscience.dataforge.meta.toValue"]},{"name":"fun KeepTransformationRule(selector: (Name) -> Boolean)","description":"space.kscience.dataforge.meta.transformations.KeepTransformationRule.KeepTransformationRule","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-keep-transformation-rule/-keep-transformation-rule.html","searchKeys":["KeepTransformationRule","fun KeepTransformationRule(selector: (Name) -> Boolean)","space.kscience.dataforge.meta.transformations.KeepTransformationRule.KeepTransformationRule"]},{"name":"fun Laminate(layers: Collection<Meta?>): Laminate","description":"space.kscience.dataforge.meta.Laminate","location":"dataforge-meta/space.kscience.dataforge.meta/-laminate.html","searchKeys":["Laminate","fun Laminate(layers: Collection<Meta?>): Laminate","space.kscience.dataforge.meta.Laminate"]},{"name":"fun Laminate(vararg layers: Meta?): Laminate","description":"space.kscience.dataforge.meta.Laminate","location":"dataforge-meta/space.kscience.dataforge.meta/-laminate.html","searchKeys":["Laminate","fun Laminate(vararg layers: Meta?): Laminate","space.kscience.dataforge.meta.Laminate"]},{"name":"fun Laminate.getFirst(name: Name): Meta?","description":"space.kscience.dataforge.meta.getFirst","location":"dataforge-meta/space.kscience.dataforge.meta/get-first.html","searchKeys":["getFirst","fun Laminate.getFirst(name: Name): Meta?","space.kscience.dataforge.meta.getFirst"]},{"name":"fun Laminate.withBottom(meta: Meta): Laminate","description":"space.kscience.dataforge.meta.withBottom","location":"dataforge-meta/space.kscience.dataforge.meta/with-bottom.html","searchKeys":["withBottom","fun Laminate.withBottom(meta: Meta): Laminate","space.kscience.dataforge.meta.withBottom"]},{"name":"fun Laminate.withTop(meta: Meta): Laminate","description":"space.kscience.dataforge.meta.withTop","location":"dataforge-meta/space.kscience.dataforge.meta/with-top.html","searchKeys":["withTop","fun Laminate.withTop(meta: Meta): Laminate","space.kscience.dataforge.meta.withTop"]},{"name":"fun LazyParsedValue(string: String)","description":"space.kscience.dataforge.values.LazyParsedValue.LazyParsedValue","location":"dataforge-meta/space.kscience.dataforge.values/-lazy-parsed-value/-lazy-parsed-value.html","searchKeys":["LazyParsedValue","fun LazyParsedValue(string: String)","space.kscience.dataforge.values.LazyParsedValue.LazyParsedValue"]},{"name":"fun ListValue(list: List<Value>)","description":"space.kscience.dataforge.values.ListValue.ListValue","location":"dataforge-meta/space.kscience.dataforge.values/-list-value/-list-value.html","searchKeys":["ListValue","fun ListValue(list: List<Value>)","space.kscience.dataforge.values.ListValue.ListValue"]},{"name":"fun ListValue(vararg numbers: Number): ListValue","description":"space.kscience.dataforge.values.ListValue","location":"dataforge-meta/space.kscience.dataforge.values/-list-value.html","searchKeys":["ListValue","fun ListValue(vararg numbers: Number): ListValue","space.kscience.dataforge.values.ListValue"]},{"name":"fun ListValue(vararg strings: String): ListValue","description":"space.kscience.dataforge.values.ListValue","location":"dataforge-meta/space.kscience.dataforge.values/-list-value.html","searchKeys":["ListValue","fun ListValue(vararg strings: String): ListValue","space.kscience.dataforge.values.ListValue"]},{"name":"fun LongArray.asValue(): Value","description":"space.kscience.dataforge.values.asValue","location":"dataforge-meta/space.kscience.dataforge.values/as-value.html","searchKeys":["asValue","fun LongArray.asValue(): Value","space.kscience.dataforge.values.asValue"]},{"name":"fun Map<String, Any?>.toMeta(descriptor: MetaDescriptor? = null): Meta","description":"space.kscience.dataforge.meta.toMeta","location":"dataforge-meta/space.kscience.dataforge.meta/to-meta.html","searchKeys":["toMeta","fun Map<String, Any?>.toMeta(descriptor: MetaDescriptor? = null): Meta","space.kscience.dataforge.meta.toMeta"]},{"name":"fun Meta(value: Boolean): SealedMeta","description":"space.kscience.dataforge.meta.Meta","location":"dataforge-meta/space.kscience.dataforge.meta/-meta.html","searchKeys":["Meta","fun Meta(value: Boolean): SealedMeta","space.kscience.dataforge.meta.Meta"]},{"name":"fun Meta(value: Number): SealedMeta","description":"space.kscience.dataforge.meta.Meta","location":"dataforge-meta/space.kscience.dataforge.meta/-meta.html","searchKeys":["Meta","fun Meta(value: Number): SealedMeta","space.kscience.dataforge.meta.Meta"]},{"name":"fun Meta(value: String): SealedMeta","description":"space.kscience.dataforge.meta.Meta","location":"dataforge-meta/space.kscience.dataforge.meta/-meta.html","searchKeys":["Meta","fun Meta(value: String): SealedMeta","space.kscience.dataforge.meta.Meta"]},{"name":"fun Meta(value: Value): SealedMeta","description":"space.kscience.dataforge.meta.Meta","location":"dataforge-meta/space.kscience.dataforge.meta/-meta.html","searchKeys":["Meta","fun Meta(value: Value): SealedMeta","space.kscience.dataforge.meta.Meta"]},{"name":"fun Meta.asMutableMeta(): MutableMeta","description":"space.kscience.dataforge.meta.asMutableMeta","location":"dataforge-meta/space.kscience.dataforge.meta/as-mutable-meta.html","searchKeys":["asMutableMeta","fun Meta.asMutableMeta(): MutableMeta","space.kscience.dataforge.meta.asMutableMeta"]},{"name":"fun Meta.getIndexed(name: Name): Map<String?, Meta>","description":"space.kscience.dataforge.meta.getIndexed","location":"dataforge-meta/space.kscience.dataforge.meta/get-indexed.html","searchKeys":["getIndexed","fun Meta.getIndexed(name: Name): Map<String?, Meta>","space.kscience.dataforge.meta.getIndexed"]},{"name":"fun Meta.isEmpty(): Boolean","description":"space.kscience.dataforge.meta.isEmpty","location":"dataforge-meta/space.kscience.dataforge.meta/is-empty.html","searchKeys":["isEmpty","fun Meta.isEmpty(): Boolean","space.kscience.dataforge.meta.isEmpty"]},{"name":"fun Meta.nodeSequence(): Sequence<Pair<Name, Meta>>","description":"space.kscience.dataforge.meta.nodeSequence","location":"dataforge-meta/space.kscience.dataforge.meta/node-sequence.html","searchKeys":["nodeSequence","fun Meta.nodeSequence(): Sequence<Pair<Name, Meta>>","space.kscience.dataforge.meta.nodeSequence"]},{"name":"fun Meta.seal(): SealedMeta","description":"space.kscience.dataforge.meta.seal","location":"dataforge-meta/space.kscience.dataforge.meta/seal.html","searchKeys":["seal","fun Meta.seal(): SealedMeta","space.kscience.dataforge.meta.seal"]},{"name":"fun Meta.toDynamic(): dynamic","description":"space.kscience.dataforge.meta.toDynamic","location":"dataforge-meta/space.kscience.dataforge.meta/to-dynamic.html","searchKeys":["toDynamic","fun Meta.toDynamic(): dynamic","space.kscience.dataforge.meta.toDynamic"]},{"name":"fun Meta.toJson(descriptor: MetaDescriptor? = null): JsonObject","description":"space.kscience.dataforge.meta.toJson","location":"dataforge-meta/space.kscience.dataforge.meta/to-json.html","searchKeys":["toJson","fun Meta.toJson(descriptor: MetaDescriptor? = null): JsonObject","space.kscience.dataforge.meta.toJson"]},{"name":"fun Meta.toMap(descriptor: MetaDescriptor? = null): Map<String, Any?>","description":"space.kscience.dataforge.meta.toMap","location":"dataforge-meta/space.kscience.dataforge.meta/to-map.html","searchKeys":["toMap","fun Meta.toMap(descriptor: MetaDescriptor? = null): Map<String, Any?>","space.kscience.dataforge.meta.toMap"]},{"name":"fun Meta.toMutableMeta(): ObservableMutableMeta","description":"space.kscience.dataforge.meta.toMutableMeta","location":"dataforge-meta/space.kscience.dataforge.meta/to-mutable-meta.html","searchKeys":["toMutableMeta","fun Meta.toMutableMeta(): ObservableMutableMeta","space.kscience.dataforge.meta.toMutableMeta"]},{"name":"fun Meta.valueSequence(): Sequence<Pair<Name, Value>>","description":"space.kscience.dataforge.meta.valueSequence","location":"dataforge-meta/space.kscience.dataforge.meta/value-sequence.html","searchKeys":["valueSequence","fun Meta.valueSequence(): Sequence<Pair<Name, Value>>","space.kscience.dataforge.meta.valueSequence"]},{"name":"fun Meta.withDefault(default: Meta?): Meta","description":"space.kscience.dataforge.meta.withDefault","location":"dataforge-meta/space.kscience.dataforge.meta/with-default.html","searchKeys":["withDefault","fun Meta.withDefault(default: Meta?): Meta","space.kscience.dataforge.meta.withDefault"]},{"name":"fun MetaBuilder()","description":"space.kscience.dataforge.meta.MetaBuilder.MetaBuilder","location":"dataforge-meta/space.kscience.dataforge.meta/-meta-builder/-meta-builder.html","searchKeys":["MetaBuilder","fun MetaBuilder()","space.kscience.dataforge.meta.MetaBuilder.MetaBuilder"]},{"name":"fun MetaDescriptor(block: MetaDescriptorBuilder.() -> Unit): MetaDescriptor","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptor","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor.html","searchKeys":["MetaDescriptor","fun MetaDescriptor(block: MetaDescriptorBuilder.() -> Unit): MetaDescriptor","space.kscience.dataforge.meta.descriptors.MetaDescriptor"]},{"name":"fun MetaDescriptor(info: String? = null, children: Map<String, MetaDescriptor> = emptyMap(), multiple: Boolean = false, valueRequirement: ValueRequirement = ValueRequirement.NONE, valueTypes: List<ValueType>? = null, indexKey: String = Meta.INDEX_KEY, defaultValue: Value? = null, attributes: Meta = Meta.EMPTY)","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptor.MetaDescriptor","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor/-meta-descriptor.html","searchKeys":["MetaDescriptor","fun MetaDescriptor(info: String? = null, children: Map<String, MetaDescriptor> = emptyMap(), multiple: Boolean = false, valueRequirement: ValueRequirement = ValueRequirement.NONE, valueTypes: List<ValueType>? = null, indexKey: String = Meta.INDEX_KEY, defaultValue: Value? = null, attributes: Meta = Meta.EMPTY)","space.kscience.dataforge.meta.descriptors.MetaDescriptor.MetaDescriptor"]},{"name":"fun MetaDescriptor.copy(block: MetaDescriptorBuilder.() -> Unit = {}): MetaDescriptor","description":"space.kscience.dataforge.meta.descriptors.copy","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/copy.html","searchKeys":["copy","fun MetaDescriptor.copy(block: MetaDescriptorBuilder.() -> Unit = {}): MetaDescriptor","space.kscience.dataforge.meta.descriptors.copy"]},{"name":"fun MetaDescriptor.validate(item: Meta?): Boolean","description":"space.kscience.dataforge.meta.descriptors.validate","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/validate.html","searchKeys":["validate","fun MetaDescriptor.validate(item: Meta?): Boolean","space.kscience.dataforge.meta.descriptors.validate"]},{"name":"fun MetaDescriptor.validate(value: Value?): Boolean","description":"space.kscience.dataforge.meta.descriptors.validate","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/validate.html","searchKeys":["validate","fun MetaDescriptor.validate(value: Value?): Boolean","space.kscience.dataforge.meta.descriptors.validate"]},{"name":"fun MetaDescriptorBuilder.item(name: String, block: MetaDescriptorBuilder.() -> Unit): MetaDescriptorBuilder","description":"space.kscience.dataforge.meta.descriptors.item","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/item.html","searchKeys":["item","fun MetaDescriptorBuilder.item(name: String, block: MetaDescriptorBuilder.() -> Unit): MetaDescriptorBuilder","space.kscience.dataforge.meta.descriptors.item"]},{"name":"fun MetaDescriptorBuilder.node(key: String, described: Described, block: MetaDescriptorBuilder.() -> Unit = {})","description":"space.kscience.dataforge.meta.descriptors.node","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/node.html","searchKeys":["node","fun MetaDescriptorBuilder.node(key: String, described: Described, block: MetaDescriptorBuilder.() -> Unit = {})","space.kscience.dataforge.meta.descriptors.node"]},{"name":"fun MetaDescriptorBuilder.node(name: Name, block: MetaDescriptorBuilder.() -> Unit): MetaDescriptorBuilder","description":"space.kscience.dataforge.meta.descriptors.node","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/node.html","searchKeys":["node","fun MetaDescriptorBuilder.node(name: Name, block: MetaDescriptorBuilder.() -> Unit): MetaDescriptorBuilder","space.kscience.dataforge.meta.descriptors.node"]},{"name":"fun MetaDescriptorBuilder.node(name: String, block: MetaDescriptorBuilder.() -> Unit)","description":"space.kscience.dataforge.meta.descriptors.node","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/node.html","searchKeys":["node","fun MetaDescriptorBuilder.node(name: String, block: MetaDescriptorBuilder.() -> Unit)","space.kscience.dataforge.meta.descriptors.node"]},{"name":"fun MetaDescriptorBuilder.required()","description":"space.kscience.dataforge.meta.descriptors.required","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/required.html","searchKeys":["required","fun MetaDescriptorBuilder.required()","space.kscience.dataforge.meta.descriptors.required"]},{"name":"fun MetaDescriptorBuilder.value(name: Name, type: ValueType, vararg additionalTypes: ValueType, block: MetaDescriptorBuilder.() -> Unit = {}): MetaDescriptorBuilder","description":"space.kscience.dataforge.meta.descriptors.value","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/value.html","searchKeys":["value","fun MetaDescriptorBuilder.value(name: Name, type: ValueType, vararg additionalTypes: ValueType, block: MetaDescriptorBuilder.() -> Unit = {}): MetaDescriptorBuilder","space.kscience.dataforge.meta.descriptors.value"]},{"name":"fun MetaDescriptorBuilder.value(name: String, type: ValueType, vararg additionalTypes: ValueType, block: MetaDescriptorBuilder.() -> Unit = {}): MetaDescriptorBuilder","description":"space.kscience.dataforge.meta.descriptors.value","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/value.html","searchKeys":["value","fun MetaDescriptorBuilder.value(name: String, type: ValueType, vararg additionalTypes: ValueType, block: MetaDescriptorBuilder.() -> Unit = {}): MetaDescriptorBuilder","space.kscience.dataforge.meta.descriptors.value"]},{"name":"fun MetaProvider.boolean(default: Boolean, key: Name? = null): ReadOnlyProperty<Any?, Boolean>","description":"space.kscience.dataforge.meta.boolean","location":"dataforge-meta/space.kscience.dataforge.meta/boolean.html","searchKeys":["boolean","fun MetaProvider.boolean(default: Boolean, key: Name? = null): ReadOnlyProperty<Any?, Boolean>","space.kscience.dataforge.meta.boolean"]},{"name":"fun MetaProvider.boolean(key: Name? = null): ReadOnlyProperty<Any?, Boolean?>","description":"space.kscience.dataforge.meta.boolean","location":"dataforge-meta/space.kscience.dataforge.meta/boolean.html","searchKeys":["boolean","fun MetaProvider.boolean(key: Name? = null): ReadOnlyProperty<Any?, Boolean?>","space.kscience.dataforge.meta.boolean"]},{"name":"fun MetaProvider.boolean(key: Name? = null, default: () -> Boolean): ReadOnlyProperty<Any?, Boolean>","description":"space.kscience.dataforge.meta.boolean","location":"dataforge-meta/space.kscience.dataforge.meta/boolean.html","searchKeys":["boolean","fun MetaProvider.boolean(key: Name? = null, default: () -> Boolean): ReadOnlyProperty<Any?, Boolean>","space.kscience.dataforge.meta.boolean"]},{"name":"fun MetaProvider.double(default: Double, key: Name? = null): ReadOnlyProperty<Any?, Double>","description":"space.kscience.dataforge.meta.double","location":"dataforge-meta/space.kscience.dataforge.meta/double.html","searchKeys":["double","fun MetaProvider.double(default: Double, key: Name? = null): ReadOnlyProperty<Any?, Double>","space.kscience.dataforge.meta.double"]},{"name":"fun MetaProvider.double(key: Name? = null): ReadOnlyProperty<Any?, Double?>","description":"space.kscience.dataforge.meta.double","location":"dataforge-meta/space.kscience.dataforge.meta/double.html","searchKeys":["double","fun MetaProvider.double(key: Name? = null): ReadOnlyProperty<Any?, Double?>","space.kscience.dataforge.meta.double"]},{"name":"fun MetaProvider.float(default: Float, key: Name? = null): ReadOnlyProperty<Any?, Float>","description":"space.kscience.dataforge.meta.float","location":"dataforge-meta/space.kscience.dataforge.meta/float.html","searchKeys":["float","fun MetaProvider.float(default: Float, key: Name? = null): ReadOnlyProperty<Any?, Float>","space.kscience.dataforge.meta.float"]},{"name":"fun MetaProvider.float(key: Name? = null): ReadOnlyProperty<Any?, Float?>","description":"space.kscience.dataforge.meta.float","location":"dataforge-meta/space.kscience.dataforge.meta/float.html","searchKeys":["float","fun MetaProvider.float(key: Name? = null): ReadOnlyProperty<Any?, Float?>","space.kscience.dataforge.meta.float"]},{"name":"fun MetaProvider.int(default: Int, key: Name? = null): ReadOnlyProperty<Any?, Int>","description":"space.kscience.dataforge.meta.int","location":"dataforge-meta/space.kscience.dataforge.meta/int.html","searchKeys":["int","fun MetaProvider.int(default: Int, key: Name? = null): ReadOnlyProperty<Any?, Int>","space.kscience.dataforge.meta.int"]},{"name":"fun MetaProvider.int(key: Name? = null): ReadOnlyProperty<Any?, Int?>","description":"space.kscience.dataforge.meta.int","location":"dataforge-meta/space.kscience.dataforge.meta/int.html","searchKeys":["int","fun MetaProvider.int(key: Name? = null): ReadOnlyProperty<Any?, Int?>","space.kscience.dataforge.meta.int"]},{"name":"fun MetaProvider.long(default: Long, key: Name? = null): ReadOnlyProperty<Any?, Long>","description":"space.kscience.dataforge.meta.long","location":"dataforge-meta/space.kscience.dataforge.meta/long.html","searchKeys":["long","fun MetaProvider.long(default: Long, key: Name? = null): ReadOnlyProperty<Any?, Long>","space.kscience.dataforge.meta.long"]},{"name":"fun MetaProvider.long(key: Name? = null): ReadOnlyProperty<Any?, Long?>","description":"space.kscience.dataforge.meta.long","location":"dataforge-meta/space.kscience.dataforge.meta/long.html","searchKeys":["long","fun MetaProvider.long(key: Name? = null): ReadOnlyProperty<Any?, Long?>","space.kscience.dataforge.meta.long"]},{"name":"fun MetaProvider.node(key: Name? = null): ReadOnlyProperty<Any?, Meta?>","description":"space.kscience.dataforge.meta.node","location":"dataforge-meta/space.kscience.dataforge.meta/node.html","searchKeys":["node","fun MetaProvider.node(key: Name? = null): ReadOnlyProperty<Any?, Meta?>","space.kscience.dataforge.meta.node"]},{"name":"fun MetaProvider.number(default: Number, key: Name? = null): ReadOnlyProperty<Any?, Number>","description":"space.kscience.dataforge.meta.number","location":"dataforge-meta/space.kscience.dataforge.meta/number.html","searchKeys":["number","fun MetaProvider.number(default: Number, key: Name? = null): ReadOnlyProperty<Any?, Number>","space.kscience.dataforge.meta.number"]},{"name":"fun MetaProvider.number(key: Name? = null): ReadOnlyProperty<Any?, Number?>","description":"space.kscience.dataforge.meta.number","location":"dataforge-meta/space.kscience.dataforge.meta/number.html","searchKeys":["number","fun MetaProvider.number(key: Name? = null): ReadOnlyProperty<Any?, Number?>","space.kscience.dataforge.meta.number"]},{"name":"fun MetaProvider.number(key: Name? = null, default: () -> Number): ReadOnlyProperty<Any?, Number>","description":"space.kscience.dataforge.meta.number","location":"dataforge-meta/space.kscience.dataforge.meta/number.html","searchKeys":["number","fun MetaProvider.number(key: Name? = null, default: () -> Number): ReadOnlyProperty<Any?, Number>","space.kscience.dataforge.meta.number"]},{"name":"fun MetaProvider.string(default: String, key: Name? = null): ReadOnlyProperty<Any?, String>","description":"space.kscience.dataforge.meta.string","location":"dataforge-meta/space.kscience.dataforge.meta/string.html","searchKeys":["string","fun MetaProvider.string(default: String, key: Name? = null): ReadOnlyProperty<Any?, String>","space.kscience.dataforge.meta.string"]},{"name":"fun MetaProvider.string(key: Name? = null): ReadOnlyProperty<Any?, String?>","description":"space.kscience.dataforge.meta.string","location":"dataforge-meta/space.kscience.dataforge.meta/string.html","searchKeys":["string","fun MetaProvider.string(key: Name? = null): ReadOnlyProperty<Any?, String?>","space.kscience.dataforge.meta.string"]},{"name":"fun MetaProvider.string(key: Name? = null, default: () -> String): ReadOnlyProperty<Any?, String>","description":"space.kscience.dataforge.meta.string","location":"dataforge-meta/space.kscience.dataforge.meta/string.html","searchKeys":["string","fun MetaProvider.string(key: Name? = null, default: () -> String): ReadOnlyProperty<Any?, String>","space.kscience.dataforge.meta.string"]},{"name":"fun MetaProvider.value(key: Name? = null): ReadOnlyProperty<Any?, Value?>","description":"space.kscience.dataforge.meta.value","location":"dataforge-meta/space.kscience.dataforge.meta/value.html","searchKeys":["value","fun MetaProvider.value(key: Name? = null): ReadOnlyProperty<Any?, Value?>","space.kscience.dataforge.meta.value"]},{"name":"fun MetaTransformation(transformations: Collection<TransformationRule>)","description":"space.kscience.dataforge.meta.transformations.MetaTransformation.MetaTransformation","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-transformation/-meta-transformation.html","searchKeys":["MetaTransformation","fun MetaTransformation(transformations: Collection<TransformationRule>)","space.kscience.dataforge.meta.transformations.MetaTransformation.MetaTransformation"]},{"name":"fun MetaTransformationBuilder()","description":"space.kscience.dataforge.meta.transformations.MetaTransformationBuilder.MetaTransformationBuilder","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-transformation-builder/-meta-transformation-builder.html","searchKeys":["MetaTransformationBuilder","fun MetaTransformationBuilder()","space.kscience.dataforge.meta.transformations.MetaTransformationBuilder.MetaTransformationBuilder"]},{"name":"fun MutableMeta(): ObservableMutableMeta","description":"space.kscience.dataforge.meta.MutableMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta.html","searchKeys":["MutableMeta","fun MutableMeta(): ObservableMutableMeta","space.kscience.dataforge.meta.MutableMeta"]},{"name":"fun MutableMeta.append(key: String, meta: Meta)","description":"space.kscience.dataforge.meta.append","location":"dataforge-meta/space.kscience.dataforge.meta/append.html","searchKeys":["append","fun MutableMeta.append(key: String, meta: Meta)","space.kscience.dataforge.meta.append"]},{"name":"fun MutableMeta.append(key: String, value: Value)","description":"space.kscience.dataforge.meta.append","location":"dataforge-meta/space.kscience.dataforge.meta/append.html","searchKeys":["append","fun MutableMeta.append(key: String, value: Value)","space.kscience.dataforge.meta.append"]},{"name":"fun MutableMeta.append(name: Name, meta: Meta)","description":"space.kscience.dataforge.meta.append","location":"dataforge-meta/space.kscience.dataforge.meta/append.html","searchKeys":["append","fun MutableMeta.append(name: Name, meta: Meta)","space.kscience.dataforge.meta.append"]},{"name":"fun MutableMeta.append(name: Name, value: Value)","description":"space.kscience.dataforge.meta.append","location":"dataforge-meta/space.kscience.dataforge.meta/append.html","searchKeys":["append","fun MutableMeta.append(name: Name, value: Value)","space.kscience.dataforge.meta.append"]},{"name":"fun MutableMeta.asObservable(): ObservableMutableMeta","description":"space.kscience.dataforge.meta.asObservable","location":"dataforge-meta/space.kscience.dataforge.meta/as-observable.html","searchKeys":["asObservable","fun MutableMeta.asObservable(): ObservableMutableMeta","space.kscience.dataforge.meta.asObservable"]},{"name":"fun MutableMeta.getOrCreate(key: String): MutableMeta","description":"space.kscience.dataforge.meta.getOrCreate","location":"dataforge-meta/space.kscience.dataforge.meta/get-or-create.html","searchKeys":["getOrCreate","fun MutableMeta.getOrCreate(key: String): MutableMeta","space.kscience.dataforge.meta.getOrCreate"]},{"name":"fun MutableMeta.setIndexed(name: Name, metas: Iterable<Meta>, indexFactory: (Meta, index: Int) -> String = { _, index -> index.toString() })","description":"space.kscience.dataforge.meta.setIndexed","location":"dataforge-meta/space.kscience.dataforge.meta/set-indexed.html","searchKeys":["setIndexed","fun MutableMeta.setIndexed(name: Name, metas: Iterable<Meta>, indexFactory: (Meta, index: Int) -> String = { _, index -> index.toString() })","space.kscience.dataforge.meta.setIndexed"]},{"name":"fun MutableMeta.update(meta: Meta)","description":"space.kscience.dataforge.meta.update","location":"dataforge-meta/space.kscience.dataforge.meta/update.html","searchKeys":["update","fun MutableMeta.update(meta: Meta)","space.kscience.dataforge.meta.update"]},{"name":"fun MutableMeta.withDefault(default: Meta?): MutableMeta","description":"space.kscience.dataforge.meta.withDefault","location":"dataforge-meta/space.kscience.dataforge.meta/with-default.html","searchKeys":["withDefault","fun MutableMeta.withDefault(default: Meta?): MutableMeta","space.kscience.dataforge.meta.withDefault"]},{"name":"fun MutableMetaProvider.boolean(default: Boolean, key: Name? = null): ReadWriteProperty<Any?, Boolean>","description":"space.kscience.dataforge.meta.boolean","location":"dataforge-meta/space.kscience.dataforge.meta/boolean.html","searchKeys":["boolean","fun MutableMetaProvider.boolean(default: Boolean, key: Name? = null): ReadWriteProperty<Any?, Boolean>","space.kscience.dataforge.meta.boolean"]},{"name":"fun MutableMetaProvider.boolean(key: Name? = null): ReadWriteProperty<Any?, Boolean?>","description":"space.kscience.dataforge.meta.boolean","location":"dataforge-meta/space.kscience.dataforge.meta/boolean.html","searchKeys":["boolean","fun MutableMetaProvider.boolean(key: Name? = null): ReadWriteProperty<Any?, Boolean?>","space.kscience.dataforge.meta.boolean"]},{"name":"fun MutableMetaProvider.boolean(key: Name? = null, default: () -> Boolean): ReadWriteProperty<Any?, Boolean>","description":"space.kscience.dataforge.meta.boolean","location":"dataforge-meta/space.kscience.dataforge.meta/boolean.html","searchKeys":["boolean","fun MutableMetaProvider.boolean(key: Name? = null, default: () -> Boolean): ReadWriteProperty<Any?, Boolean>","space.kscience.dataforge.meta.boolean"]},{"name":"fun MutableMetaProvider.double(default: Double, key: Name? = null): ReadWriteProperty<Any?, Double>","description":"space.kscience.dataforge.meta.double","location":"dataforge-meta/space.kscience.dataforge.meta/double.html","searchKeys":["double","fun MutableMetaProvider.double(default: Double, key: Name? = null): ReadWriteProperty<Any?, Double>","space.kscience.dataforge.meta.double"]},{"name":"fun MutableMetaProvider.double(key: Name? = null): ReadWriteProperty<Any?, Double?>","description":"space.kscience.dataforge.meta.double","location":"dataforge-meta/space.kscience.dataforge.meta/double.html","searchKeys":["double","fun MutableMetaProvider.double(key: Name? = null): ReadWriteProperty<Any?, Double?>","space.kscience.dataforge.meta.double"]},{"name":"fun MutableMetaProvider.doubleArray(vararg default: Double, key: Name? = null): ReadWriteProperty<Any?, DoubleArray>","description":"space.kscience.dataforge.meta.doubleArray","location":"dataforge-meta/space.kscience.dataforge.meta/double-array.html","searchKeys":["doubleArray","fun MutableMetaProvider.doubleArray(vararg default: Double, key: Name? = null): ReadWriteProperty<Any?, DoubleArray>","space.kscience.dataforge.meta.doubleArray"]},{"name":"fun MutableMetaProvider.float(default: Float, key: Name? = null): ReadWriteProperty<Any?, Float>","description":"space.kscience.dataforge.meta.float","location":"dataforge-meta/space.kscience.dataforge.meta/float.html","searchKeys":["float","fun MutableMetaProvider.float(default: Float, key: Name? = null): ReadWriteProperty<Any?, Float>","space.kscience.dataforge.meta.float"]},{"name":"fun MutableMetaProvider.float(key: Name? = null): ReadWriteProperty<Any?, Float?>","description":"space.kscience.dataforge.meta.float","location":"dataforge-meta/space.kscience.dataforge.meta/float.html","searchKeys":["float","fun MutableMetaProvider.float(key: Name? = null): ReadWriteProperty<Any?, Float?>","space.kscience.dataforge.meta.float"]},{"name":"fun MutableMetaProvider.int(default: Int, key: Name? = null): ReadWriteProperty<Any?, Int>","description":"space.kscience.dataforge.meta.int","location":"dataforge-meta/space.kscience.dataforge.meta/int.html","searchKeys":["int","fun MutableMetaProvider.int(default: Int, key: Name? = null): ReadWriteProperty<Any?, Int>","space.kscience.dataforge.meta.int"]},{"name":"fun MutableMetaProvider.int(key: Name? = null): ReadWriteProperty<Any?, Int?>","description":"space.kscience.dataforge.meta.int","location":"dataforge-meta/space.kscience.dataforge.meta/int.html","searchKeys":["int","fun MutableMetaProvider.int(key: Name? = null): ReadWriteProperty<Any?, Int?>","space.kscience.dataforge.meta.int"]},{"name":"fun MutableMetaProvider.long(default: Long, key: Name? = null): ReadWriteProperty<Any?, Long>","description":"space.kscience.dataforge.meta.long","location":"dataforge-meta/space.kscience.dataforge.meta/long.html","searchKeys":["long","fun MutableMetaProvider.long(default: Long, key: Name? = null): ReadWriteProperty<Any?, Long>","space.kscience.dataforge.meta.long"]},{"name":"fun MutableMetaProvider.long(key: Name? = null): ReadWriteProperty<Any?, Long?>","description":"space.kscience.dataforge.meta.long","location":"dataforge-meta/space.kscience.dataforge.meta/long.html","searchKeys":["long","fun MutableMetaProvider.long(key: Name? = null): ReadWriteProperty<Any?, Long?>","space.kscience.dataforge.meta.long"]},{"name":"fun MutableMetaProvider.node(key: Name? = null): ReadWriteProperty<Any?, Meta?>","description":"space.kscience.dataforge.meta.node","location":"dataforge-meta/space.kscience.dataforge.meta/node.html","searchKeys":["node","fun MutableMetaProvider.node(key: Name? = null): ReadWriteProperty<Any?, Meta?>","space.kscience.dataforge.meta.node"]},{"name":"fun MutableMetaProvider.number(default: Number, key: Name? = null): ReadWriteProperty<Any?, Number>","description":"space.kscience.dataforge.meta.number","location":"dataforge-meta/space.kscience.dataforge.meta/number.html","searchKeys":["number","fun MutableMetaProvider.number(default: Number, key: Name? = null): ReadWriteProperty<Any?, Number>","space.kscience.dataforge.meta.number"]},{"name":"fun MutableMetaProvider.number(key: Name? = null): ReadWriteProperty<Any?, Number?>","description":"space.kscience.dataforge.meta.number","location":"dataforge-meta/space.kscience.dataforge.meta/number.html","searchKeys":["number","fun MutableMetaProvider.number(key: Name? = null): ReadWriteProperty<Any?, Number?>","space.kscience.dataforge.meta.number"]},{"name":"fun MutableMetaProvider.number(key: Name? = null, default: () -> Number): ReadWriteProperty<Any?, Number>","description":"space.kscience.dataforge.meta.number","location":"dataforge-meta/space.kscience.dataforge.meta/number.html","searchKeys":["number","fun MutableMetaProvider.number(key: Name? = null, default: () -> Number): ReadWriteProperty<Any?, Number>","space.kscience.dataforge.meta.number"]},{"name":"fun MutableMetaProvider.numberList(vararg default: Number, key: Name? = null): ReadWriteProperty<Any?, List<Number>>","description":"space.kscience.dataforge.meta.numberList","location":"dataforge-meta/space.kscience.dataforge.meta/number-list.html","searchKeys":["numberList","fun MutableMetaProvider.numberList(vararg default: Number, key: Name? = null): ReadWriteProperty<Any?, List<Number>>","space.kscience.dataforge.meta.numberList"]},{"name":"fun MutableMetaProvider.remove(key: String)","description":"space.kscience.dataforge.meta.remove","location":"dataforge-meta/space.kscience.dataforge.meta/remove.html","searchKeys":["remove","fun MutableMetaProvider.remove(key: String)","space.kscience.dataforge.meta.remove"]},{"name":"fun MutableMetaProvider.remove(name: Name)","description":"space.kscience.dataforge.meta.remove","location":"dataforge-meta/space.kscience.dataforge.meta/remove.html","searchKeys":["remove","fun MutableMetaProvider.remove(name: Name)","space.kscience.dataforge.meta.remove"]},{"name":"fun MutableMetaProvider.string(default: String, key: Name? = null): ReadWriteProperty<Any?, String>","description":"space.kscience.dataforge.meta.string","location":"dataforge-meta/space.kscience.dataforge.meta/string.html","searchKeys":["string","fun MutableMetaProvider.string(default: String, key: Name? = null): ReadWriteProperty<Any?, String>","space.kscience.dataforge.meta.string"]},{"name":"fun MutableMetaProvider.string(key: Name? = null): ReadWriteProperty<Any?, String?>","description":"space.kscience.dataforge.meta.string","location":"dataforge-meta/space.kscience.dataforge.meta/string.html","searchKeys":["string","fun MutableMetaProvider.string(key: Name? = null): ReadWriteProperty<Any?, String?>","space.kscience.dataforge.meta.string"]},{"name":"fun MutableMetaProvider.string(key: Name? = null, default: () -> String): ReadWriteProperty<Any?, String>","description":"space.kscience.dataforge.meta.string","location":"dataforge-meta/space.kscience.dataforge.meta/string.html","searchKeys":["string","fun MutableMetaProvider.string(key: Name? = null, default: () -> String): ReadWriteProperty<Any?, String>","space.kscience.dataforge.meta.string"]},{"name":"fun MutableMetaProvider.stringList(key: Name? = null): ReadWriteProperty<Any?, List<String>?>","description":"space.kscience.dataforge.meta.stringList","location":"dataforge-meta/space.kscience.dataforge.meta/string-list.html","searchKeys":["stringList","fun MutableMetaProvider.stringList(key: Name? = null): ReadWriteProperty<Any?, List<String>?>","space.kscience.dataforge.meta.stringList"]},{"name":"fun MutableMetaProvider.stringList(vararg default: String, key: Name? = null): ReadWriteProperty<Any?, List<String>>","description":"space.kscience.dataforge.meta.stringList","location":"dataforge-meta/space.kscience.dataforge.meta/string-list.html","searchKeys":["stringList","fun MutableMetaProvider.stringList(vararg default: String, key: Name? = null): ReadWriteProperty<Any?, List<String>>","space.kscience.dataforge.meta.stringList"]},{"name":"fun MutableMetaProvider.value(key: Name? = null): ReadWriteProperty<Any?, Value?>","description":"space.kscience.dataforge.meta.value","location":"dataforge-meta/space.kscience.dataforge.meta/value.html","searchKeys":["value","fun MutableMetaProvider.value(key: Name? = null): ReadWriteProperty<Any?, Value?>","space.kscience.dataforge.meta.value"]},{"name":"fun MutableValueProvider.setValue(key: String, value: Value?)","description":"space.kscience.dataforge.values.setValue","location":"dataforge-meta/space.kscience.dataforge.values/set-value.html","searchKeys":["setValue","fun MutableValueProvider.setValue(key: String, value: Value?)","space.kscience.dataforge.values.setValue"]},{"name":"fun Name(tokens: List<NameToken>)","description":"space.kscience.dataforge.names.Name.Name","location":"dataforge-meta/space.kscience.dataforge.names/-name/-name.html","searchKeys":["Name","fun Name(tokens: List<NameToken>)","space.kscience.dataforge.names.Name.Name"]},{"name":"fun Name.appendLeft(other: String): Name","description":"space.kscience.dataforge.names.appendLeft","location":"dataforge-meta/space.kscience.dataforge.names/append-left.html","searchKeys":["appendLeft","fun Name.appendLeft(other: String): Name","space.kscience.dataforge.names.appendLeft"]},{"name":"fun Name.cutFirst(): Name","description":"space.kscience.dataforge.names.cutFirst","location":"dataforge-meta/space.kscience.dataforge.names/cut-first.html","searchKeys":["cutFirst","fun Name.cutFirst(): Name","space.kscience.dataforge.names.cutFirst"]},{"name":"fun Name.cutLast(): Name","description":"space.kscience.dataforge.names.cutLast","location":"dataforge-meta/space.kscience.dataforge.names/cut-last.html","searchKeys":["cutLast","fun Name.cutLast(): Name","space.kscience.dataforge.names.cutLast"]},{"name":"fun Name.endsWith(name: Name): Boolean","description":"space.kscience.dataforge.names.endsWith","location":"dataforge-meta/space.kscience.dataforge.names/ends-with.html","searchKeys":["endsWith","fun Name.endsWith(name: Name): Boolean","space.kscience.dataforge.names.endsWith"]},{"name":"fun Name.endsWith(token: NameToken): Boolean","description":"space.kscience.dataforge.names.endsWith","location":"dataforge-meta/space.kscience.dataforge.names/ends-with.html","searchKeys":["endsWith","fun Name.endsWith(token: NameToken): Boolean","space.kscience.dataforge.names.endsWith"]},{"name":"fun Name.first(): NameToken","description":"space.kscience.dataforge.names.first","location":"dataforge-meta/space.kscience.dataforge.names/first.html","searchKeys":["first","fun Name.first(): NameToken","space.kscience.dataforge.names.first"]},{"name":"fun Name.firstOrNull(): NameToken?","description":"space.kscience.dataforge.names.firstOrNull","location":"dataforge-meta/space.kscience.dataforge.names/first-or-null.html","searchKeys":["firstOrNull","fun Name.firstOrNull(): NameToken?","space.kscience.dataforge.names.firstOrNull"]},{"name":"fun Name.isEmpty(): Boolean","description":"space.kscience.dataforge.names.isEmpty","location":"dataforge-meta/space.kscience.dataforge.names/is-empty.html","searchKeys":["isEmpty","fun Name.isEmpty(): Boolean","space.kscience.dataforge.names.isEmpty"]},{"name":"fun Name.lastOrNull(): NameToken?","description":"space.kscience.dataforge.names.lastOrNull","location":"dataforge-meta/space.kscience.dataforge.names/last-or-null.html","searchKeys":["lastOrNull","fun Name.lastOrNull(): NameToken?","space.kscience.dataforge.names.lastOrNull"]},{"name":"fun Name.matches(pattern: Name): Boolean","description":"space.kscience.dataforge.names.matches","location":"dataforge-meta/space.kscience.dataforge.names/matches.html","searchKeys":["matches","fun Name.matches(pattern: Name): Boolean","space.kscience.dataforge.names.matches"]},{"name":"fun Name.matches(pattern: String): Boolean","description":"space.kscience.dataforge.names.matches","location":"dataforge-meta/space.kscience.dataforge.names/matches.html","searchKeys":["matches","fun Name.matches(pattern: String): Boolean","space.kscience.dataforge.names.matches"]},{"name":"fun Name.removeHeadOrNull(head: Name): Name?","description":"space.kscience.dataforge.names.removeHeadOrNull","location":"dataforge-meta/space.kscience.dataforge.names/remove-head-or-null.html","searchKeys":["removeHeadOrNull","fun Name.removeHeadOrNull(head: Name): Name?","space.kscience.dataforge.names.removeHeadOrNull"]},{"name":"fun Name.startsWith(name: Name): Boolean","description":"space.kscience.dataforge.names.startsWith","location":"dataforge-meta/space.kscience.dataforge.names/starts-with.html","searchKeys":["startsWith","fun Name.startsWith(name: Name): Boolean","space.kscience.dataforge.names.startsWith"]},{"name":"fun Name.startsWith(token: NameToken): Boolean","description":"space.kscience.dataforge.names.startsWith","location":"dataforge-meta/space.kscience.dataforge.names/starts-with.html","searchKeys":["startsWith","fun Name.startsWith(token: NameToken): Boolean","space.kscience.dataforge.names.startsWith"]},{"name":"fun Name.withIndex(index: String): Name","description":"space.kscience.dataforge.names.withIndex","location":"dataforge-meta/space.kscience.dataforge.names/with-index.html","searchKeys":["withIndex","fun Name.withIndex(index: String): Name","space.kscience.dataforge.names.withIndex"]},{"name":"fun NameToken(body: String, index: String? = null)","description":"space.kscience.dataforge.names.NameToken.NameToken","location":"dataforge-meta/space.kscience.dataforge.names/-name-token/-name-token.html","searchKeys":["NameToken","fun NameToken(body: String, index: String? = null)","space.kscience.dataforge.names.NameToken.NameToken"]},{"name":"fun NameToken.asName(): Name","description":"space.kscience.dataforge.names.asName","location":"dataforge-meta/space.kscience.dataforge.names/as-name.html","searchKeys":["asName","fun NameToken.asName(): Name","space.kscience.dataforge.names.asName"]},{"name":"fun NameToken.hasIndex(): Boolean","description":"space.kscience.dataforge.names.hasIndex","location":"dataforge-meta/space.kscience.dataforge.names/has-index.html","searchKeys":["hasIndex","fun NameToken.hasIndex(): Boolean","space.kscience.dataforge.names.hasIndex"]},{"name":"fun NameToken.matches(pattern: NameToken): Boolean","description":"space.kscience.dataforge.names.matches","location":"dataforge-meta/space.kscience.dataforge.names/matches.html","searchKeys":["matches","fun NameToken.matches(pattern: NameToken): Boolean","space.kscience.dataforge.names.matches"]},{"name":"fun NameToken.withIndex(newIndex: String): NameToken","description":"space.kscience.dataforge.names.withIndex","location":"dataforge-meta/space.kscience.dataforge.names/with-index.html","searchKeys":["withIndex","fun NameToken.withIndex(newIndex: String): NameToken","space.kscience.dataforge.names.withIndex"]},{"name":"fun Number.asValue(): Value","description":"space.kscience.dataforge.values.asValue","location":"dataforge-meta/space.kscience.dataforge.values/as-value.html","searchKeys":["asValue","fun Number.asValue(): Value","space.kscience.dataforge.values.asValue"]},{"name":"fun NumberValue(number: Number)","description":"space.kscience.dataforge.values.NumberValue.NumberValue","location":"dataforge-meta/space.kscience.dataforge.values/-number-value/-number-value.html","searchKeys":["NumberValue","fun NumberValue(number: Number)","space.kscience.dataforge.values.NumberValue.NumberValue"]},{"name":"fun RegexItemTransformationRule(from: Regex, transform: MutableMeta.(name: Name, MatchResult, Meta?) -> Unit)","description":"space.kscience.dataforge.meta.transformations.RegexItemTransformationRule.RegexItemTransformationRule","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-regex-item-transformation-rule/-regex-item-transformation-rule.html","searchKeys":["RegexItemTransformationRule","fun RegexItemTransformationRule(from: Regex, transform: MutableMeta.(name: Name, MatchResult, Meta?) -> Unit)","space.kscience.dataforge.meta.transformations.RegexItemTransformationRule.RegexItemTransformationRule"]},{"name":"fun Scheme()","description":"space.kscience.dataforge.meta.Scheme.Scheme","location":"dataforge-meta/space.kscience.dataforge.meta/-scheme/-scheme.html","searchKeys":["Scheme","fun Scheme()","space.kscience.dataforge.meta.Scheme.Scheme"]},{"name":"fun ShortArray.asValue(): Value","description":"space.kscience.dataforge.values.asValue","location":"dataforge-meta/space.kscience.dataforge.values/as-value.html","searchKeys":["asValue","fun ShortArray.asValue(): Value","space.kscience.dataforge.values.asValue"]},{"name":"fun SingleItemTransformationRule(from: Name, transform: MutableMeta.(Name, Meta?) -> Unit)","description":"space.kscience.dataforge.meta.transformations.SingleItemTransformationRule.SingleItemTransformationRule","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-single-item-transformation-rule/-single-item-transformation-rule.html","searchKeys":["SingleItemTransformationRule","fun SingleItemTransformationRule(from: Name, transform: MutableMeta.(Name, Meta?) -> Unit)","space.kscience.dataforge.meta.transformations.SingleItemTransformationRule.SingleItemTransformationRule"]},{"name":"fun String.asName(): Name","description":"space.kscience.dataforge.names.asName","location":"dataforge-meta/space.kscience.dataforge.names/as-name.html","searchKeys":["asName","fun String.asName(): Name","space.kscience.dataforge.names.asName"]},{"name":"fun String.asValue(): Value","description":"space.kscience.dataforge.values.asValue","location":"dataforge-meta/space.kscience.dataforge.values/as-value.html","searchKeys":["asValue","fun String.asValue(): Value","space.kscience.dataforge.values.asValue"]},{"name":"fun String.lazyParseValue(): LazyParsedValue","description":"space.kscience.dataforge.values.lazyParseValue","location":"dataforge-meta/space.kscience.dataforge.values/lazy-parse-value.html","searchKeys":["lazyParseValue","fun String.lazyParseValue(): LazyParsedValue","space.kscience.dataforge.values.lazyParseValue"]},{"name":"fun String.parseAsName(): Name","description":"space.kscience.dataforge.names.parseAsName","location":"dataforge-meta/space.kscience.dataforge.names/parse-as-name.html","searchKeys":["parseAsName","fun String.parseAsName(): Name","space.kscience.dataforge.names.parseAsName"]},{"name":"fun String.parseValue(): Value","description":"space.kscience.dataforge.values.parseValue","location":"dataforge-meta/space.kscience.dataforge.values/parse-value.html","searchKeys":["parseValue","fun String.parseValue(): Value","space.kscience.dataforge.values.parseValue"]},{"name":"fun StringValue(string: String)","description":"space.kscience.dataforge.values.StringValue.StringValue","location":"dataforge-meta/space.kscience.dataforge.values/-string-value/-string-value.html","searchKeys":["StringValue","fun StringValue(string: String)","space.kscience.dataforge.values.StringValue.StringValue"]},{"name":"fun Type(id: String)","description":"space.kscience.dataforge.misc.Type.Type","location":"dataforge-meta/space.kscience.dataforge.misc/-type/-type.html","searchKeys":["Type","fun Type(id: String)","space.kscience.dataforge.misc.Type.Type"]},{"name":"fun Value.isList(): Boolean","description":"space.kscience.dataforge.values.isList","location":"dataforge-meta/space.kscience.dataforge.values/is-list.html","searchKeys":["isList","fun Value.isList(): Boolean","space.kscience.dataforge.values.isList"]},{"name":"fun Value.isNull(): Boolean","description":"space.kscience.dataforge.values.isNull","location":"dataforge-meta/space.kscience.dataforge.values/is-null.html","searchKeys":["isNull","fun Value.isNull(): Boolean","space.kscience.dataforge.values.isNull"]},{"name":"fun Value.toDynamic(): dynamic","description":"space.kscience.dataforge.meta.toDynamic","location":"dataforge-meta/space.kscience.dataforge.meta/to-dynamic.html","searchKeys":["toDynamic","fun Value.toDynamic(): dynamic","space.kscience.dataforge.meta.toDynamic"]},{"name":"fun Value.toJson(descriptor: MetaDescriptor? = null): JsonElement","description":"space.kscience.dataforge.meta.toJson","location":"dataforge-meta/space.kscience.dataforge.meta/to-json.html","searchKeys":["toJson","fun Value.toJson(descriptor: MetaDescriptor? = null): JsonElement","space.kscience.dataforge.meta.toJson"]},{"name":"fun Value.toMeta(): Meta","description":"space.kscience.dataforge.values.toMeta","location":"dataforge-meta/space.kscience.dataforge.values/to-meta.html","searchKeys":["toMeta","fun Value.toMeta(): Meta","space.kscience.dataforge.values.toMeta"]},{"name":"fun ValueProvider.getValue(key: String): Value?","description":"space.kscience.dataforge.values.getValue","location":"dataforge-meta/space.kscience.dataforge.values/get-value.html","searchKeys":["getValue","fun ValueProvider.getValue(key: String): Value?","space.kscience.dataforge.values.getValue"]},{"name":"fun allowedValues(vararg values: Any)","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.allowedValues","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor-builder/allowed-values.html","searchKeys":["allowedValues","fun allowedValues(vararg values: Any)","space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.allowedValues"]},{"name":"fun apply(source: Meta): Meta","description":"space.kscience.dataforge.meta.transformations.MetaTransformation.apply","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-transformation/apply.html","searchKeys":["apply","fun apply(source: Meta): Meta","space.kscience.dataforge.meta.transformations.MetaTransformation.apply"]},{"name":"fun bind(source: ObservableMeta, target: MutableMeta)","description":"space.kscience.dataforge.meta.transformations.MetaTransformation.bind","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-transformation/bind.html","searchKeys":["bind","fun bind(source: ObservableMeta, target: MutableMeta)","space.kscience.dataforge.meta.transformations.MetaTransformation.bind"]},{"name":"fun build(): MetaTransformation","description":"space.kscience.dataforge.meta.transformations.MetaTransformationBuilder.build","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-transformation-builder/build.html","searchKeys":["build","fun build(): MetaTransformation","space.kscience.dataforge.meta.transformations.MetaTransformationBuilder.build"]},{"name":"fun default(value: Any?)","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.default","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor-builder/default.html","searchKeys":["default","fun default(value: Any?)","space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.default"]},{"name":"fun equals(meta1: Meta?, meta2: Meta?): Boolean","description":"space.kscience.dataforge.meta.Meta.Companion.equals","location":"dataforge-meta/space.kscience.dataforge.meta/-meta/-companion/equals.html","searchKeys":["equals","fun equals(meta1: Meta?, meta2: Meta?): Boolean","space.kscience.dataforge.meta.Meta.Companion.equals"]},{"name":"fun generate(source: Meta): Meta","description":"space.kscience.dataforge.meta.transformations.MetaTransformation.generate","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-transformation/generate.html","searchKeys":["generate","fun generate(source: Meta): Meta","space.kscience.dataforge.meta.transformations.MetaTransformation.generate"]},{"name":"fun generate(source: ObservableMeta): ObservableMeta","description":"space.kscience.dataforge.meta.transformations.MetaTransformation.generate","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-transformation/generate.html","searchKeys":["generate","fun generate(source: ObservableMeta): ObservableMeta","space.kscience.dataforge.meta.transformations.MetaTransformation.generate"]},{"name":"fun hashCode(meta: Meta): Int","description":"space.kscience.dataforge.meta.Meta.Companion.hashCode","location":"dataforge-meta/space.kscience.dataforge.meta/-meta/-companion/hash-code.html","searchKeys":["hashCode","fun hashCode(meta: Meta): Int","space.kscience.dataforge.meta.Meta.Companion.hashCode"]},{"name":"fun interface MetaProvider : ValueProvider","description":"space.kscience.dataforge.meta.MetaProvider","location":"dataforge-meta/space.kscience.dataforge.meta/-meta-provider/index.html","searchKeys":["MetaProvider","fun interface MetaProvider : ValueProvider","space.kscience.dataforge.meta.MetaProvider"]},{"name":"fun interface ValueProvider","description":"space.kscience.dataforge.values.ValueProvider","location":"dataforge-meta/space.kscience.dataforge.values/-value-provider/index.html","searchKeys":["ValueProvider","fun interface ValueProvider","space.kscience.dataforge.values.ValueProvider"]},{"name":"fun item(name: Name, block: MetaDescriptorBuilder.() -> Unit = {}): MetaDescriptorBuilder","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.item","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor-builder/item.html","searchKeys":["item","fun item(name: Name, block: MetaDescriptorBuilder.() -> Unit = {}): MetaDescriptorBuilder","space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.item"]},{"name":"fun keep(name: Name)","description":"space.kscience.dataforge.meta.transformations.MetaTransformationBuilder.keep","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-transformation-builder/keep.html","searchKeys":["keep","fun keep(name: Name)","space.kscience.dataforge.meta.transformations.MetaTransformationBuilder.keep"]},{"name":"fun keep(regex: String)","description":"space.kscience.dataforge.meta.transformations.MetaTransformationBuilder.keep","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-transformation-builder/keep.html","searchKeys":["keep","fun keep(regex: String)","space.kscience.dataforge.meta.transformations.MetaTransformationBuilder.keep"]},{"name":"fun keep(selector: (Name) -> Boolean)","description":"space.kscience.dataforge.meta.transformations.MetaTransformationBuilder.keep","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-transformation-builder/keep.html","searchKeys":["keep","fun keep(selector: (Name) -> Boolean)","space.kscience.dataforge.meta.transformations.MetaTransformationBuilder.keep"]},{"name":"fun make(block: MetaTransformationBuilder.() -> Unit): MetaTransformation","description":"space.kscience.dataforge.meta.transformations.MetaTransformation.Companion.make","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-transformation/-companion/make.html","searchKeys":["make","fun make(block: MetaTransformationBuilder.() -> Unit): MetaTransformation","space.kscience.dataforge.meta.transformations.MetaTransformation.Companion.make"]},{"name":"fun merge(): SealedMeta","description":"space.kscience.dataforge.meta.Laminate.merge","location":"dataforge-meta/space.kscience.dataforge.meta/-laminate/merge.html","searchKeys":["merge","fun merge(): SealedMeta","space.kscience.dataforge.meta.Laminate.merge"]},{"name":"fun move(from: Name, to: Name, operation: (Meta?) -> Meta? = { it })","description":"space.kscience.dataforge.meta.transformations.MetaTransformationBuilder.move","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-transformation-builder/move.html","searchKeys":["move","fun move(from: Name, to: Name, operation: (Meta?) -> Meta? = { it })","space.kscience.dataforge.meta.transformations.MetaTransformationBuilder.move"]},{"name":"fun nameOf(obj: Any): Name","description":"space.kscience.dataforge.misc.Named.Companion.nameOf","location":"dataforge-meta/space.kscience.dataforge.misc/-named/-companion/name-of.html","searchKeys":["nameOf","fun nameOf(obj: Any): Name","space.kscience.dataforge.misc.Named.Companion.nameOf"]},{"name":"fun node(name: Name, descriptor: MetaDescriptor, block: MetaDescriptorBuilder.() -> Unit = {}): MetaDescriptorBuilder","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.node","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor-builder/node.html","searchKeys":["node","fun node(name: Name, descriptor: MetaDescriptor, block: MetaDescriptorBuilder.() -> Unit = {}): MetaDescriptorBuilder","space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.node"]},{"name":"fun of(value: Any?): Value","description":"space.kscience.dataforge.values.Value.Companion.of","location":"dataforge-meta/space.kscience.dataforge.values/-value/-companion/of.html","searchKeys":["of","fun of(value: Any?): Value","space.kscience.dataforge.values.Value.Companion.of"]},{"name":"fun of(vararg strings: String): Name","description":"space.kscience.dataforge.names.Name.Companion.of","location":"dataforge-meta/space.kscience.dataforge.names/-name/-companion/of.html","searchKeys":["of","fun of(vararg strings: String): Name","space.kscience.dataforge.names.Name.Companion.of"]},{"name":"fun parse(string: String): Name","description":"space.kscience.dataforge.names.Name.Companion.parse","location":"dataforge-meta/space.kscience.dataforge.names/-name/-companion/parse.html","searchKeys":["parse","fun parse(string: String): Name","space.kscience.dataforge.names.Name.Companion.parse"]},{"name":"fun toString(meta: Meta): String","description":"space.kscience.dataforge.meta.Meta.Companion.toString","location":"dataforge-meta/space.kscience.dataforge.meta/-meta/-companion/to-string.html","searchKeys":["toString","fun toString(meta: Meta): String","space.kscience.dataforge.meta.Meta.Companion.toString"]},{"name":"fun top(): SealedMeta","description":"space.kscience.dataforge.meta.Laminate.top","location":"dataforge-meta/space.kscience.dataforge.meta/-laminate/top.html","searchKeys":["top","fun top(): SealedMeta","space.kscience.dataforge.meta.Laminate.top"]},{"name":"fun type(primaryType: ValueType, vararg otherTypes: ValueType)","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.type","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor-builder/type.html","searchKeys":["type","fun type(primaryType: ValueType, vararg otherTypes: ValueType)","space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.type"]},{"name":"inline fun <E : Enum<E>> Meta?.enum(): E?","description":"space.kscience.dataforge.meta.enum","location":"dataforge-meta/space.kscience.dataforge.meta/enum.html","searchKeys":["enum","inline fun <E : Enum<E>> Meta?.enum(): E?","space.kscience.dataforge.meta.enum"]},{"name":"inline fun <E : Enum<E>> MetaDescriptorBuilder.enum(key: Name, default: E?, crossinline modifier: MetaDescriptorBuilder.() -> Unit = {}): MetaDescriptorBuilder","description":"space.kscience.dataforge.meta.descriptors.enum","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/enum.html","searchKeys":["enum","inline fun <E : Enum<E>> MetaDescriptorBuilder.enum(key: Name, default: E?, crossinline modifier: MetaDescriptorBuilder.() -> Unit = {}): MetaDescriptorBuilder","space.kscience.dataforge.meta.descriptors.enum"]},{"name":"inline fun <E : Enum<E>> MetaProvider.enum(default: E, key: Name? = null): ReadOnlyProperty<Any?, E>","description":"space.kscience.dataforge.meta.enum","location":"dataforge-meta/space.kscience.dataforge.meta/enum.html","searchKeys":["enum","inline fun <E : Enum<E>> MetaProvider.enum(default: E, key: Name? = null): ReadOnlyProperty<Any?, E>","space.kscience.dataforge.meta.enum"]},{"name":"inline fun <E : Enum<E>> MutableMetaProvider.enum(default: E, key: Name? = null): ReadWriteProperty<Any?, E>","description":"space.kscience.dataforge.meta.enum","location":"dataforge-meta/space.kscience.dataforge.meta/enum.html","searchKeys":["enum","inline fun <E : Enum<E>> MutableMetaProvider.enum(default: E, key: Name? = null): ReadWriteProperty<Any?, E>","space.kscience.dataforge.meta.enum"]},{"name":"inline fun <E : Enum<E>> Value.enum(): E","description":"space.kscience.dataforge.values.enum","location":"dataforge-meta/space.kscience.dataforge.values/enum.html","searchKeys":["enum","inline fun <E : Enum<E>> Value.enum(): E","space.kscience.dataforge.values.enum"]},{"name":"inline fun <E : Enum<E>> enum(): MetaConverter<E>","description":"space.kscience.dataforge.meta.transformations.MetaConverter.Companion.enum","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-converter/-companion/enum.html","searchKeys":["enum","inline fun <E : Enum<E>> enum(): MetaConverter<E>","space.kscience.dataforge.meta.transformations.MetaConverter.Companion.enum"]},{"name":"inline fun <S : Scheme, T : Scheme> MetaDescriptorBuilder.scheme(property: KProperty1<S, T>, spec: SchemeSpec<T>, noinline block: MetaDescriptorBuilder.() -> Unit = {})","description":"space.kscience.dataforge.meta.descriptors.scheme","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/scheme.html","searchKeys":["scheme","inline fun <S : Scheme, T : Scheme> MetaDescriptorBuilder.scheme(property: KProperty1<S, T>, spec: SchemeSpec<T>, noinline block: MetaDescriptorBuilder.() -> Unit = {})","space.kscience.dataforge.meta.descriptors.scheme"]},{"name":"inline fun <S : Scheme, T> MetaDescriptorBuilder.value(property: KProperty1<S, T>, noinline block: MetaDescriptorBuilder.() -> Unit = {}): MetaDescriptorBuilder","description":"space.kscience.dataforge.meta.descriptors.value","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/value.html","searchKeys":["value","inline fun <S : Scheme, T> MetaDescriptorBuilder.value(property: KProperty1<S, T>, noinline block: MetaDescriptorBuilder.() -> Unit = {}): MetaDescriptorBuilder","space.kscience.dataforge.meta.descriptors.value"]},{"name":"inline fun <T : Configurable> T.configure(action: MutableMeta.() -> Unit): T","description":"space.kscience.dataforge.meta.configure","location":"dataforge-meta/space.kscience.dataforge.meta/configure.html","searchKeys":["configure","inline fun <T : Configurable> T.configure(action: MutableMeta.() -> Unit): T","space.kscience.dataforge.meta.configure"]},{"name":"inline fun <T : Scheme> T.copy(spec: SchemeSpec<T>, block: T.() -> Unit = {}): T","description":"space.kscience.dataforge.meta.copy","location":"dataforge-meta/space.kscience.dataforge.meta/copy.html","searchKeys":["copy","inline fun <T : Scheme> T.copy(spec: SchemeSpec<T>, block: T.() -> Unit = {}): T","space.kscience.dataforge.meta.copy"]},{"name":"inline fun <T> Any?.unsafeCast(): T","description":"space.kscience.dataforge.misc.unsafeCast","location":"dataforge-meta/space.kscience.dataforge.misc/unsafe-cast.html","searchKeys":["unsafeCast","inline fun <T> Any?.unsafeCast(): T","space.kscience.dataforge.misc.unsafeCast"]},{"name":"inline fun Meta(builder: MutableMeta.() -> Unit): SealedMeta","description":"space.kscience.dataforge.meta.Meta","location":"dataforge-meta/space.kscience.dataforge.meta/-meta.html","searchKeys":["Meta","inline fun Meta(builder: MutableMeta.() -> Unit): SealedMeta","space.kscience.dataforge.meta.Meta"]},{"name":"inline fun Meta.copy(block: MutableMeta.() -> Unit = {}): Meta","description":"space.kscience.dataforge.meta.copy","location":"dataforge-meta/space.kscience.dataforge.meta/copy.html","searchKeys":["copy","inline fun Meta.copy(block: MutableMeta.() -> Unit = {}): Meta","space.kscience.dataforge.meta.copy"]},{"name":"inline fun MutableMeta(builder: MutableMeta.() -> Unit = {}): ObservableMutableMeta","description":"space.kscience.dataforge.meta.MutableMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta.html","searchKeys":["MutableMeta","inline fun MutableMeta(builder: MutableMeta.() -> Unit = {}): ObservableMutableMeta","space.kscience.dataforge.meta.MutableMeta"]},{"name":"inline fun attributes(block: MutableMeta.() -> Unit)","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.attributes","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor-builder/attributes.html","searchKeys":["attributes","inline fun attributes(block: MutableMeta.() -> Unit)","space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.attributes"]},{"name":"inline operator fun <T : Scheme> T.invoke(block: T.() -> Unit): T","description":"space.kscience.dataforge.meta.invoke","location":"dataforge-meta/space.kscience.dataforge.meta/invoke.html","searchKeys":["invoke","inline operator fun <T : Scheme> T.invoke(block: T.() -> Unit): T","space.kscience.dataforge.meta.invoke"]},{"name":"inline operator override fun invoke(action: T.() -> Unit): T","description":"space.kscience.dataforge.meta.SchemeSpec.invoke","location":"dataforge-meta/space.kscience.dataforge.meta/-scheme-spec/invoke.html","searchKeys":["invoke","inline operator override fun invoke(action: T.() -> Unit): T","space.kscience.dataforge.meta.SchemeSpec.invoke"]},{"name":"interface Configurable","description":"space.kscience.dataforge.meta.Configurable","location":"dataforge-meta/space.kscience.dataforge.meta/-configurable/index.html","searchKeys":["Configurable","interface Configurable","space.kscience.dataforge.meta.Configurable"]},{"name":"interface Described","description":"space.kscience.dataforge.meta.descriptors.Described","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-described/index.html","searchKeys":["Described","interface Described","space.kscience.dataforge.meta.descriptors.Described"]},{"name":"interface Meta : MetaRepr, MetaProvider","description":"space.kscience.dataforge.meta.Meta","location":"dataforge-meta/space.kscience.dataforge.meta/-meta/index.html","searchKeys":["Meta","interface Meta : MetaRepr, MetaProvider","space.kscience.dataforge.meta.Meta"]},{"name":"interface MetaConverter<T>","description":"space.kscience.dataforge.meta.transformations.MetaConverter","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-converter/index.html","searchKeys":["MetaConverter","interface MetaConverter<T>","space.kscience.dataforge.meta.transformations.MetaConverter"]},{"name":"interface MetaRepr","description":"space.kscience.dataforge.meta.MetaRepr","location":"dataforge-meta/space.kscience.dataforge.meta/-meta-repr/index.html","searchKeys":["MetaRepr","interface MetaRepr","space.kscience.dataforge.meta.MetaRepr"]},{"name":"interface MutableMeta : Meta, MutableMetaProvider","description":"space.kscience.dataforge.meta.MutableMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/index.html","searchKeys":["MutableMeta","interface MutableMeta : Meta, MutableMetaProvider","space.kscience.dataforge.meta.MutableMeta"]},{"name":"interface MutableMetaProvider : MetaProvider, MutableValueProvider","description":"space.kscience.dataforge.meta.MutableMetaProvider","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta-provider/index.html","searchKeys":["MutableMetaProvider","interface MutableMetaProvider : MetaProvider, MutableValueProvider","space.kscience.dataforge.meta.MutableMetaProvider"]},{"name":"interface MutableTypedMeta<M : MutableTypedMeta<M>> : TypedMeta<M> , MutableMeta","description":"space.kscience.dataforge.meta.MutableTypedMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-typed-meta/index.html","searchKeys":["MutableTypedMeta","interface MutableTypedMeta<M : MutableTypedMeta<M>> : TypedMeta<M> , MutableMeta","space.kscience.dataforge.meta.MutableTypedMeta"]},{"name":"interface MutableValueProvider : ValueProvider","description":"space.kscience.dataforge.values.MutableValueProvider","location":"dataforge-meta/space.kscience.dataforge.values/-mutable-value-provider/index.html","searchKeys":["MutableValueProvider","interface MutableValueProvider : ValueProvider","space.kscience.dataforge.values.MutableValueProvider"]},{"name":"interface Named","description":"space.kscience.dataforge.misc.Named","location":"dataforge-meta/space.kscience.dataforge.misc/-named/index.html","searchKeys":["Named","interface Named","space.kscience.dataforge.misc.Named"]},{"name":"interface ObservableMeta : Meta","description":"space.kscience.dataforge.meta.ObservableMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-observable-meta/index.html","searchKeys":["ObservableMeta","interface ObservableMeta : Meta","space.kscience.dataforge.meta.ObservableMeta"]},{"name":"interface ObservableMutableMeta : ObservableMeta, MutableMeta, MutableTypedMeta<ObservableMutableMeta> ","description":"space.kscience.dataforge.meta.ObservableMutableMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-observable-mutable-meta/index.html","searchKeys":["ObservableMutableMeta","interface ObservableMutableMeta : ObservableMeta, MutableMeta, MutableTypedMeta<ObservableMutableMeta> ","space.kscience.dataforge.meta.ObservableMutableMeta"]},{"name":"interface ReadOnlySpecification<out T : Any>","description":"space.kscience.dataforge.meta.ReadOnlySpecification","location":"dataforge-meta/space.kscience.dataforge.meta/-read-only-specification/index.html","searchKeys":["ReadOnlySpecification","interface ReadOnlySpecification<out T : Any>","space.kscience.dataforge.meta.ReadOnlySpecification"]},{"name":"interface Specification<out T : Any> : ReadOnlySpecification<T> ","description":"space.kscience.dataforge.meta.Specification","location":"dataforge-meta/space.kscience.dataforge.meta/-specification/index.html","searchKeys":["Specification","interface Specification<out T : Any> : ReadOnlySpecification<T> ","space.kscience.dataforge.meta.Specification"]},{"name":"interface TransformationRule","description":"space.kscience.dataforge.meta.transformations.TransformationRule","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-transformation-rule/index.html","searchKeys":["TransformationRule","interface TransformationRule","space.kscience.dataforge.meta.transformations.TransformationRule"]},{"name":"interface TypedMeta<out M : TypedMeta<M>> : Meta","description":"space.kscience.dataforge.meta.TypedMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-typed-meta/index.html","searchKeys":["TypedMeta","interface TypedMeta<out M : TypedMeta<M>> : Meta","space.kscience.dataforge.meta.TypedMeta"]},{"name":"interface Value","description":"space.kscience.dataforge.values.Value","location":"dataforge-meta/space.kscience.dataforge.values/-value/index.html","searchKeys":["Value","interface Value","space.kscience.dataforge.values.Value"]},{"name":"object Companion","description":"space.kscience.dataforge.meta.Laminate.Companion","location":"dataforge-meta/space.kscience.dataforge.meta/-laminate/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.meta.Laminate.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.meta.Meta.Companion","location":"dataforge-meta/space.kscience.dataforge.meta/-meta/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.meta.Meta.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptor.Companion","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.meta.descriptors.MetaDescriptor.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.meta.transformations.MetaConverter.Companion","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-converter/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.meta.transformations.MetaConverter.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.meta.transformations.MetaTransformation.Companion","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-transformation/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.meta.transformations.MetaTransformation.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.misc.Named.Companion","location":"dataforge-meta/space.kscience.dataforge.misc/-named/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.misc.Named.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.names.Name.Companion","location":"dataforge-meta/space.kscience.dataforge.names/-name/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.names.Name.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.values.ListValue.Companion","location":"dataforge-meta/space.kscience.dataforge.values/-list-value/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.values.ListValue.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.values.Value.Companion","location":"dataforge-meta/space.kscience.dataforge.values/-value/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.values.Value.Companion"]},{"name":"object False : Value","description":"space.kscience.dataforge.values.False","location":"dataforge-meta/space.kscience.dataforge.values/-false/index.html","searchKeys":["False","object False : Value","space.kscience.dataforge.values.False"]},{"name":"object MetaSerializer : KSerializer<Meta> ","description":"space.kscience.dataforge.meta.MetaSerializer","location":"dataforge-meta/space.kscience.dataforge.meta/-meta-serializer/index.html","searchKeys":["MetaSerializer","object MetaSerializer : KSerializer<Meta> ","space.kscience.dataforge.meta.MetaSerializer"]},{"name":"object MutableMetaSerializer : KSerializer<MutableMeta> ","description":"space.kscience.dataforge.meta.MutableMetaSerializer","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta-serializer/index.html","searchKeys":["MutableMetaSerializer","object MutableMetaSerializer : KSerializer<MutableMeta> ","space.kscience.dataforge.meta.MutableMetaSerializer"]},{"name":"object NameSerializer : KSerializer<Name> ","description":"space.kscience.dataforge.names.NameSerializer","location":"dataforge-meta/space.kscience.dataforge.names/-name-serializer/index.html","searchKeys":["NameSerializer","object NameSerializer : KSerializer<Name> ","space.kscience.dataforge.names.NameSerializer"]},{"name":"object NameTokenSerializer : KSerializer<NameToken> ","description":"space.kscience.dataforge.names.NameTokenSerializer","location":"dataforge-meta/space.kscience.dataforge.names/-name-token-serializer/index.html","searchKeys":["NameTokenSerializer","object NameTokenSerializer : KSerializer<NameToken> ","space.kscience.dataforge.names.NameTokenSerializer"]},{"name":"object Null : Value","description":"space.kscience.dataforge.values.Null","location":"dataforge-meta/space.kscience.dataforge.values/-null/index.html","searchKeys":["Null","object Null : Value","space.kscience.dataforge.values.Null"]},{"name":"object True : Value","description":"space.kscience.dataforge.values.True","location":"dataforge-meta/space.kscience.dataforge.values/-true/index.html","searchKeys":["True","object True : Value","space.kscience.dataforge.values.True"]},{"name":"object ValueSerializer : KSerializer<Value> ","description":"space.kscience.dataforge.values.ValueSerializer","location":"dataforge-meta/space.kscience.dataforge.values/-value-serializer/index.html","searchKeys":["ValueSerializer","object ValueSerializer : KSerializer<Value> ","space.kscience.dataforge.values.ValueSerializer"]},{"name":"open class Scheme : Described, MetaRepr, MutableMetaProvider, Configurable","description":"space.kscience.dataforge.meta.Scheme","location":"dataforge-meta/space.kscience.dataforge.meta/-scheme/index.html","searchKeys":["Scheme","open class Scheme : Described, MetaRepr, MutableMetaProvider, Configurable","space.kscience.dataforge.meta.Scheme"]},{"name":"open class SchemeSpec<out T : Scheme>(builder: () -> T) : Specification<T> , Described","description":"space.kscience.dataforge.meta.SchemeSpec","location":"dataforge-meta/space.kscience.dataforge.meta/-scheme-spec/index.html","searchKeys":["SchemeSpec","open class SchemeSpec<out T : Scheme>(builder: () -> T) : Specification<T> , Described","space.kscience.dataforge.meta.SchemeSpec"]},{"name":"open fun selectItems(meta: Meta): Sequence<Name>","description":"space.kscience.dataforge.meta.transformations.TransformationRule.selectItems","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-transformation-rule/select-items.html","searchKeys":["selectItems","open fun selectItems(meta: Meta): Sequence<Name>","space.kscience.dataforge.meta.transformations.TransformationRule.selectItems"]},{"name":"open fun validate(name: Name, meta: Meta?): Boolean","description":"space.kscience.dataforge.meta.Scheme.validate","location":"dataforge-meta/space.kscience.dataforge.meta/-scheme/validate.html","searchKeys":["validate","open fun validate(name: Name, meta: Meta?): Boolean","space.kscience.dataforge.meta.Scheme.validate"]},{"name":"open infix fun Name.put(boolean: Boolean)","description":"space.kscience.dataforge.meta.MutableMeta.put","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/put.html","searchKeys":["put","open infix fun Name.put(boolean: Boolean)","space.kscience.dataforge.meta.MutableMeta.put"]},{"name":"open infix fun Name.put(enum: Enum<*>)","description":"space.kscience.dataforge.meta.MutableMeta.put","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/put.html","searchKeys":["put","open infix fun Name.put(enum: Enum<*>)","space.kscience.dataforge.meta.MutableMeta.put"]},{"name":"open infix fun Name.put(meta: Meta)","description":"space.kscience.dataforge.meta.MutableMeta.put","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/put.html","searchKeys":["put","open infix fun Name.put(meta: Meta)","space.kscience.dataforge.meta.MutableMeta.put"]},{"name":"open infix fun Name.put(mutableMeta: MutableMeta.() -> Unit)","description":"space.kscience.dataforge.meta.MutableMeta.put","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/put.html","searchKeys":["put","open infix fun Name.put(mutableMeta: MutableMeta.() -> Unit)","space.kscience.dataforge.meta.MutableMeta.put"]},{"name":"open infix fun Name.put(number: Number)","description":"space.kscience.dataforge.meta.MutableMeta.put","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/put.html","searchKeys":["put","open infix fun Name.put(number: Number)","space.kscience.dataforge.meta.MutableMeta.put"]},{"name":"open infix fun Name.put(repr: MetaRepr)","description":"space.kscience.dataforge.meta.MutableMeta.put","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/put.html","searchKeys":["put","open infix fun Name.put(repr: MetaRepr)","space.kscience.dataforge.meta.MutableMeta.put"]},{"name":"open infix fun Name.put(string: String)","description":"space.kscience.dataforge.meta.MutableMeta.put","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/put.html","searchKeys":["put","open infix fun Name.put(string: String)","space.kscience.dataforge.meta.MutableMeta.put"]},{"name":"open infix fun Name.put(value: Value?)","description":"space.kscience.dataforge.meta.MutableMeta.put","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/put.html","searchKeys":["put","open infix fun Name.put(value: Value?)","space.kscience.dataforge.meta.MutableMeta.put"]},{"name":"open infix fun Name.putIndexed(iterable: Iterable<Meta>)","description":"space.kscience.dataforge.meta.MutableMeta.putIndexed","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/put-indexed.html","searchKeys":["putIndexed","open infix fun Name.putIndexed(iterable: Iterable<Meta>)","space.kscience.dataforge.meta.MutableMeta.putIndexed"]},{"name":"open infix fun String.put(array: DoubleArray)","description":"space.kscience.dataforge.meta.MutableMeta.put","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/put.html","searchKeys":["put","open infix fun String.put(array: DoubleArray)","space.kscience.dataforge.meta.MutableMeta.put"]},{"name":"open infix fun String.put(boolean: Boolean)","description":"space.kscience.dataforge.meta.MutableMeta.put","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/put.html","searchKeys":["put","open infix fun String.put(boolean: Boolean)","space.kscience.dataforge.meta.MutableMeta.put"]},{"name":"open infix fun String.put(builder: MutableMeta.() -> Unit)","description":"space.kscience.dataforge.meta.MutableMeta.put","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/put.html","searchKeys":["put","open infix fun String.put(builder: MutableMeta.() -> Unit)","space.kscience.dataforge.meta.MutableMeta.put"]},{"name":"open infix fun String.put(enum: Enum<*>)","description":"space.kscience.dataforge.meta.MutableMeta.put","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/put.html","searchKeys":["put","open infix fun String.put(enum: Enum<*>)","space.kscience.dataforge.meta.MutableMeta.put"]},{"name":"open infix fun String.put(meta: Meta)","description":"space.kscience.dataforge.meta.MutableMeta.put","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/put.html","searchKeys":["put","open infix fun String.put(meta: Meta)","space.kscience.dataforge.meta.MutableMeta.put"]},{"name":"open infix fun String.put(number: Number)","description":"space.kscience.dataforge.meta.MutableMeta.put","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/put.html","searchKeys":["put","open infix fun String.put(number: Number)","space.kscience.dataforge.meta.MutableMeta.put"]},{"name":"open infix fun String.put(repr: MetaRepr)","description":"space.kscience.dataforge.meta.MutableMeta.put","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/put.html","searchKeys":["put","open infix fun String.put(repr: MetaRepr)","space.kscience.dataforge.meta.MutableMeta.put"]},{"name":"open infix fun String.put(string: String)","description":"space.kscience.dataforge.meta.MutableMeta.put","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/put.html","searchKeys":["put","open infix fun String.put(string: String)","space.kscience.dataforge.meta.MutableMeta.put"]},{"name":"open infix fun String.put(value: Value?)","description":"space.kscience.dataforge.meta.MutableMeta.put","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/put.html","searchKeys":["put","open infix fun String.put(value: Value?)","space.kscience.dataforge.meta.MutableMeta.put"]},{"name":"open infix fun String.putIndexed(iterable: Iterable<Meta>)","description":"space.kscience.dataforge.meta.MutableMeta.putIndexed","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/put-indexed.html","searchKeys":["putIndexed","open infix fun String.putIndexed(iterable: Iterable<Meta>)","space.kscience.dataforge.meta.MutableMeta.putIndexed"]},{"name":"open operator fun invoke(action: T.() -> Unit): T","description":"space.kscience.dataforge.meta.ReadOnlySpecification.invoke","location":"dataforge-meta/space.kscience.dataforge.meta/-read-only-specification/invoke.html","searchKeys":["invoke","open operator fun invoke(action: T.() -> Unit): T","space.kscience.dataforge.meta.ReadOnlySpecification.invoke"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"space.kscience.dataforge.meta.DynamicMeta.equals","location":"dataforge-meta/space.kscience.dataforge.meta/-dynamic-meta/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","space.kscience.dataforge.meta.DynamicMeta.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"space.kscience.dataforge.meta.Laminate.equals","location":"dataforge-meta/space.kscience.dataforge.meta/-laminate/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","space.kscience.dataforge.meta.Laminate.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"space.kscience.dataforge.meta.SealedMeta.equals","location":"dataforge-meta/space.kscience.dataforge.meta/-sealed-meta/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","space.kscience.dataforge.meta.SealedMeta.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"space.kscience.dataforge.names.Name.equals","location":"dataforge-meta/space.kscience.dataforge.names/-name/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","space.kscience.dataforge.names.Name.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"space.kscience.dataforge.values.DoubleArrayValue.equals","location":"dataforge-meta/space.kscience.dataforge.values/-double-array-value/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","space.kscience.dataforge.values.DoubleArrayValue.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"space.kscience.dataforge.values.EnumValue.equals","location":"dataforge-meta/space.kscience.dataforge.values/-enum-value/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","space.kscience.dataforge.values.EnumValue.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"space.kscience.dataforge.values.False.equals","location":"dataforge-meta/space.kscience.dataforge.values/-false/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","space.kscience.dataforge.values.False.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"space.kscience.dataforge.values.LazyParsedValue.equals","location":"dataforge-meta/space.kscience.dataforge.values/-lazy-parsed-value/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","space.kscience.dataforge.values.LazyParsedValue.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"space.kscience.dataforge.values.ListValue.equals","location":"dataforge-meta/space.kscience.dataforge.values/-list-value/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","space.kscience.dataforge.values.ListValue.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"space.kscience.dataforge.values.Null.equals","location":"dataforge-meta/space.kscience.dataforge.values/-null/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","space.kscience.dataforge.values.Null.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"space.kscience.dataforge.values.NumberValue.equals","location":"dataforge-meta/space.kscience.dataforge.values/-number-value/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","space.kscience.dataforge.values.NumberValue.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"space.kscience.dataforge.values.True.equals","location":"dataforge-meta/space.kscience.dataforge.values/-true/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","space.kscience.dataforge.values.True.equals"]},{"name":"open operator override fun iterator(): Iterator<Double>","description":"space.kscience.dataforge.values.DoubleArrayValue.iterator","location":"dataforge-meta/space.kscience.dataforge.values/-double-array-value/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Double>","space.kscience.dataforge.values.DoubleArrayValue.iterator"]},{"name":"open operator override fun iterator(): Iterator<Value>","description":"space.kscience.dataforge.values.ListValue.iterator","location":"dataforge-meta/space.kscience.dataforge.values/-list-value/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Value>","space.kscience.dataforge.values.ListValue.iterator"]},{"name":"open override fun deserialize(decoder: Decoder): Meta","description":"space.kscience.dataforge.meta.MetaSerializer.deserialize","location":"dataforge-meta/space.kscience.dataforge.meta/-meta-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Meta","space.kscience.dataforge.meta.MetaSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): MutableMeta","description":"space.kscience.dataforge.meta.MutableMetaSerializer.deserialize","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): MutableMeta","space.kscience.dataforge.meta.MutableMetaSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Name","description":"space.kscience.dataforge.names.NameSerializer.deserialize","location":"dataforge-meta/space.kscience.dataforge.names/-name-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Name","space.kscience.dataforge.names.NameSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): NameToken","description":"space.kscience.dataforge.names.NameTokenSerializer.deserialize","location":"dataforge-meta/space.kscience.dataforge.names/-name-token-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): NameToken","space.kscience.dataforge.names.NameTokenSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Value","description":"space.kscience.dataforge.values.ValueSerializer.deserialize","location":"dataforge-meta/space.kscience.dataforge.values/-value-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Value","space.kscience.dataforge.values.ValueSerializer.deserialize"]},{"name":"open override fun empty(): T","description":"space.kscience.dataforge.meta.SchemeSpec.empty","location":"dataforge-meta/space.kscience.dataforge.meta/-scheme-spec/empty.html","searchKeys":["empty","open override fun empty(): T","space.kscience.dataforge.meta.SchemeSpec.empty"]},{"name":"open override fun getMeta(name: Name): Laminate?","description":"space.kscience.dataforge.meta.Laminate.getMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-laminate/get-meta.html","searchKeys":["getMeta","open override fun getMeta(name: Name): Laminate?","space.kscience.dataforge.meta.Laminate.getMeta"]},{"name":"open override fun getMeta(name: Name): M?","description":"space.kscience.dataforge.meta.TypedMeta.getMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-typed-meta/get-meta.html","searchKeys":["getMeta","open override fun getMeta(name: Name): M?","space.kscience.dataforge.meta.TypedMeta.getMeta"]},{"name":"open override fun getMeta(name: Name): Meta?","description":"space.kscience.dataforge.meta.Meta.getMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-meta/get-meta.html","searchKeys":["getMeta","open override fun getMeta(name: Name): Meta?","space.kscience.dataforge.meta.Meta.getMeta"]},{"name":"open override fun getMeta(name: Name): MutableMeta?","description":"space.kscience.dataforge.meta.MutableMeta.getMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/get-meta.html","searchKeys":["getMeta","open override fun getMeta(name: Name): MutableMeta?","space.kscience.dataforge.meta.MutableMeta.getMeta"]},{"name":"open override fun getMeta(name: Name): MutableMeta?","description":"space.kscience.dataforge.meta.Scheme.getMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-scheme/get-meta.html","searchKeys":["getMeta","open override fun getMeta(name: Name): MutableMeta?","space.kscience.dataforge.meta.Scheme.getMeta"]},{"name":"open override fun getMeta(name: Name): ObservableMutableMeta?","description":"space.kscience.dataforge.meta.ObservableMutableMeta.getMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-observable-mutable-meta/get-meta.html","searchKeys":["getMeta","open override fun getMeta(name: Name): ObservableMutableMeta?","space.kscience.dataforge.meta.ObservableMutableMeta.getMeta"]},{"name":"open override fun getValue(name: Name): Value?","description":"space.kscience.dataforge.meta.MetaProvider.getValue","location":"dataforge-meta/space.kscience.dataforge.meta/-meta-provider/get-value.html","searchKeys":["getValue","open override fun getValue(name: Name): Value?","space.kscience.dataforge.meta.MetaProvider.getValue"]},{"name":"open override fun hashCode(): Int","description":"space.kscience.dataforge.meta.DynamicMeta.hashCode","location":"dataforge-meta/space.kscience.dataforge.meta/-dynamic-meta/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","space.kscience.dataforge.meta.DynamicMeta.hashCode"]},{"name":"open override fun hashCode(): Int","description":"space.kscience.dataforge.meta.Laminate.hashCode","location":"dataforge-meta/space.kscience.dataforge.meta/-laminate/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","space.kscience.dataforge.meta.Laminate.hashCode"]},{"name":"open override fun hashCode(): Int","description":"space.kscience.dataforge.meta.SealedMeta.hashCode","location":"dataforge-meta/space.kscience.dataforge.meta/-sealed-meta/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","space.kscience.dataforge.meta.SealedMeta.hashCode"]},{"name":"open override fun hashCode(): Int","description":"space.kscience.dataforge.names.Name.hashCode","location":"dataforge-meta/space.kscience.dataforge.names/-name/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","space.kscience.dataforge.names.Name.hashCode"]},{"name":"open override fun hashCode(): Int","description":"space.kscience.dataforge.values.DoubleArrayValue.hashCode","location":"dataforge-meta/space.kscience.dataforge.values/-double-array-value/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","space.kscience.dataforge.values.DoubleArrayValue.hashCode"]},{"name":"open override fun hashCode(): Int","description":"space.kscience.dataforge.values.EnumValue.hashCode","location":"dataforge-meta/space.kscience.dataforge.values/-enum-value/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","space.kscience.dataforge.values.EnumValue.hashCode"]},{"name":"open override fun hashCode(): Int","description":"space.kscience.dataforge.values.False.hashCode","location":"dataforge-meta/space.kscience.dataforge.values/-false/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","space.kscience.dataforge.values.False.hashCode"]},{"name":"open override fun hashCode(): Int","description":"space.kscience.dataforge.values.LazyParsedValue.hashCode","location":"dataforge-meta/space.kscience.dataforge.values/-lazy-parsed-value/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","space.kscience.dataforge.values.LazyParsedValue.hashCode"]},{"name":"open override fun hashCode(): Int","description":"space.kscience.dataforge.values.ListValue.hashCode","location":"dataforge-meta/space.kscience.dataforge.values/-list-value/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","space.kscience.dataforge.values.ListValue.hashCode"]},{"name":"open override fun hashCode(): Int","description":"space.kscience.dataforge.values.Null.hashCode","location":"dataforge-meta/space.kscience.dataforge.values/-null/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","space.kscience.dataforge.values.Null.hashCode"]},{"name":"open override fun hashCode(): Int","description":"space.kscience.dataforge.values.NumberValue.hashCode","location":"dataforge-meta/space.kscience.dataforge.values/-number-value/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","space.kscience.dataforge.values.NumberValue.hashCode"]},{"name":"open override fun hashCode(): Int","description":"space.kscience.dataforge.values.True.hashCode","location":"dataforge-meta/space.kscience.dataforge.values/-true/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","space.kscience.dataforge.values.True.hashCode"]},{"name":"open override fun matches(name: Name, item: Meta?): Boolean","description":"space.kscience.dataforge.meta.transformations.KeepTransformationRule.matches","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-keep-transformation-rule/matches.html","searchKeys":["matches","open override fun matches(name: Name, item: Meta?): Boolean","space.kscience.dataforge.meta.transformations.KeepTransformationRule.matches"]},{"name":"open override fun matches(name: Name, item: Meta?): Boolean","description":"space.kscience.dataforge.meta.transformations.RegexItemTransformationRule.matches","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-regex-item-transformation-rule/matches.html","searchKeys":["matches","open override fun matches(name: Name, item: Meta?): Boolean","space.kscience.dataforge.meta.transformations.RegexItemTransformationRule.matches"]},{"name":"open override fun matches(name: Name, item: Meta?): Boolean","description":"space.kscience.dataforge.meta.transformations.SingleItemTransformationRule.matches","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-single-item-transformation-rule/matches.html","searchKeys":["matches","open override fun matches(name: Name, item: Meta?): Boolean","space.kscience.dataforge.meta.transformations.SingleItemTransformationRule.matches"]},{"name":"open override fun read(source: Meta): T","description":"space.kscience.dataforge.meta.SchemeSpec.read","location":"dataforge-meta/space.kscience.dataforge.meta/-scheme-spec/read.html","searchKeys":["read","open override fun read(source: Meta): T","space.kscience.dataforge.meta.SchemeSpec.read"]},{"name":"open override fun selectItems(meta: Meta): Sequence<Name>","description":"space.kscience.dataforge.meta.transformations.KeepTransformationRule.selectItems","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-keep-transformation-rule/select-items.html","searchKeys":["selectItems","open override fun selectItems(meta: Meta): Sequence<Name>","space.kscience.dataforge.meta.transformations.KeepTransformationRule.selectItems"]},{"name":"open override fun selectItems(meta: Meta): Sequence<Name>","description":"space.kscience.dataforge.meta.transformations.SingleItemTransformationRule.selectItems","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-single-item-transformation-rule/select-items.html","searchKeys":["selectItems","open override fun selectItems(meta: Meta): Sequence<Name>","space.kscience.dataforge.meta.transformations.SingleItemTransformationRule.selectItems"]},{"name":"open override fun serialize(encoder: Encoder, value: Meta)","description":"space.kscience.dataforge.meta.MetaSerializer.serialize","location":"dataforge-meta/space.kscience.dataforge.meta/-meta-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Meta)","space.kscience.dataforge.meta.MetaSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: MutableMeta)","description":"space.kscience.dataforge.meta.MutableMetaSerializer.serialize","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: MutableMeta)","space.kscience.dataforge.meta.MutableMetaSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Name)","description":"space.kscience.dataforge.names.NameSerializer.serialize","location":"dataforge-meta/space.kscience.dataforge.names/-name-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Name)","space.kscience.dataforge.names.NameSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: NameToken)","description":"space.kscience.dataforge.names.NameTokenSerializer.serialize","location":"dataforge-meta/space.kscience.dataforge.names/-name-token-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: NameToken)","space.kscience.dataforge.names.NameTokenSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Value)","description":"space.kscience.dataforge.values.ValueSerializer.serialize","location":"dataforge-meta/space.kscience.dataforge.values/-value-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Value)","space.kscience.dataforge.values.ValueSerializer.serialize"]},{"name":"open override fun setMeta(name: Name, node: Meta?)","description":"space.kscience.dataforge.meta.Scheme.setMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-scheme/set-meta.html","searchKeys":["setMeta","open override fun setMeta(name: Name, node: Meta?)","space.kscience.dataforge.meta.Scheme.setMeta"]},{"name":"open override fun setValue(name: Name, value: Value?)","description":"space.kscience.dataforge.meta.MutableMeta.setValue","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta/set-value.html","searchKeys":["setValue","open override fun setValue(name: Name, value: Value?)","space.kscience.dataforge.meta.MutableMeta.setValue"]},{"name":"open override fun setValue(name: Name, value: Value?)","description":"space.kscience.dataforge.meta.MutableMetaProvider.setValue","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta-provider/set-value.html","searchKeys":["setValue","open override fun setValue(name: Name, value: Value?)","space.kscience.dataforge.meta.MutableMetaProvider.setValue"]},{"name":"open override fun setValue(name: Name, value: Value?)","description":"space.kscience.dataforge.meta.Scheme.setValue","location":"dataforge-meta/space.kscience.dataforge.meta/-scheme/set-value.html","searchKeys":["setValue","open override fun setValue(name: Name, value: Value?)","space.kscience.dataforge.meta.Scheme.setValue"]},{"name":"open override fun toMeta(): Laminate","description":"space.kscience.dataforge.meta.Scheme.toMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-scheme/to-meta.html","searchKeys":["toMeta","open override fun toMeta(): Laminate","space.kscience.dataforge.meta.Scheme.toMeta"]},{"name":"open override fun toMeta(): Meta","description":"space.kscience.dataforge.meta.Meta.toMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-meta/to-meta.html","searchKeys":["toMeta","open override fun toMeta(): Meta","space.kscience.dataforge.meta.Meta.toMeta"]},{"name":"open override fun toMeta(): Meta","description":"space.kscience.dataforge.meta.TypedMeta.toMeta","location":"dataforge-meta/space.kscience.dataforge.meta/-typed-meta/to-meta.html","searchKeys":["toMeta","open override fun toMeta(): Meta","space.kscience.dataforge.meta.TypedMeta.toMeta"]},{"name":"open override fun toString(): String","description":"space.kscience.dataforge.meta.DynamicMeta.toString","location":"dataforge-meta/space.kscience.dataforge.meta/-dynamic-meta/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.dataforge.meta.DynamicMeta.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.dataforge.meta.Laminate.toString","location":"dataforge-meta/space.kscience.dataforge.meta/-laminate/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.dataforge.meta.Laminate.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.dataforge.meta.SealedMeta.toString","location":"dataforge-meta/space.kscience.dataforge.meta/-sealed-meta/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.dataforge.meta.SealedMeta.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.dataforge.names.Name.toString","location":"dataforge-meta/space.kscience.dataforge.names/-name/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.dataforge.names.Name.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.dataforge.names.NameToken.toString","location":"dataforge-meta/space.kscience.dataforge.names/-name-token/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.dataforge.names.NameToken.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.dataforge.values.DoubleArrayValue.toString","location":"dataforge-meta/space.kscience.dataforge.values/-double-array-value/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.dataforge.values.DoubleArrayValue.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.dataforge.values.EnumValue.toString","location":"dataforge-meta/space.kscience.dataforge.values/-enum-value/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.dataforge.values.EnumValue.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.dataforge.values.False.toString","location":"dataforge-meta/space.kscience.dataforge.values/-false/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.dataforge.values.False.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.dataforge.values.LazyParsedValue.toString","location":"dataforge-meta/space.kscience.dataforge.values/-lazy-parsed-value/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.dataforge.values.LazyParsedValue.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.dataforge.values.ListValue.toString","location":"dataforge-meta/space.kscience.dataforge.values/-list-value/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.dataforge.values.ListValue.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.dataforge.values.Null.toString","location":"dataforge-meta/space.kscience.dataforge.values/-null/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.dataforge.values.Null.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.dataforge.values.NumberValue.toString","location":"dataforge-meta/space.kscience.dataforge.values/-number-value/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.dataforge.values.NumberValue.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.dataforge.values.StringValue.toString","location":"dataforge-meta/space.kscience.dataforge.values/-string-value/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.dataforge.values.StringValue.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.dataforge.values.True.toString","location":"dataforge-meta/space.kscience.dataforge.values/-true/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.dataforge.values.True.toString"]},{"name":"open override fun transformItem(name: Name, item: Meta?, target: MutableMeta)","description":"space.kscience.dataforge.meta.transformations.KeepTransformationRule.transformItem","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-keep-transformation-rule/transform-item.html","searchKeys":["transformItem","open override fun transformItem(name: Name, item: Meta?, target: MutableMeta)","space.kscience.dataforge.meta.transformations.KeepTransformationRule.transformItem"]},{"name":"open override fun transformItem(name: Name, item: Meta?, target: MutableMeta)","description":"space.kscience.dataforge.meta.transformations.RegexItemTransformationRule.transformItem","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-regex-item-transformation-rule/transform-item.html","searchKeys":["transformItem","open override fun transformItem(name: Name, item: Meta?, target: MutableMeta)","space.kscience.dataforge.meta.transformations.RegexItemTransformationRule.transformItem"]},{"name":"open override fun transformItem(name: Name, item: Meta?, target: MutableMeta)","description":"space.kscience.dataforge.meta.transformations.SingleItemTransformationRule.transformItem","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-single-item-transformation-rule/transform-item.html","searchKeys":["transformItem","open override fun transformItem(name: Name, item: Meta?, target: MutableMeta)","space.kscience.dataforge.meta.transformations.SingleItemTransformationRule.transformItem"]},{"name":"open override fun write(target: MutableMeta): T","description":"space.kscience.dataforge.meta.SchemeSpec.write","location":"dataforge-meta/space.kscience.dataforge.meta/-scheme-spec/write.html","searchKeys":["write","open override fun write(target: MutableMeta): T","space.kscience.dataforge.meta.SchemeSpec.write"]},{"name":"open override val descriptor: MetaDescriptor?","description":"space.kscience.dataforge.meta.SchemeSpec.descriptor","location":"dataforge-meta/space.kscience.dataforge.meta/-scheme-spec/descriptor.html","searchKeys":["descriptor","open override val descriptor: MetaDescriptor?","space.kscience.dataforge.meta.SchemeSpec.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"space.kscience.dataforge.meta.MetaSerializer.descriptor","location":"dataforge-meta/space.kscience.dataforge.meta/-meta-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","space.kscience.dataforge.meta.MetaSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"space.kscience.dataforge.meta.MutableMetaSerializer.descriptor","location":"dataforge-meta/space.kscience.dataforge.meta/-mutable-meta-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","space.kscience.dataforge.meta.MutableMetaSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"space.kscience.dataforge.names.NameSerializer.descriptor","location":"dataforge-meta/space.kscience.dataforge.names/-name-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","space.kscience.dataforge.names.NameSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"space.kscience.dataforge.names.NameTokenSerializer.descriptor","location":"dataforge-meta/space.kscience.dataforge.names/-name-token-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","space.kscience.dataforge.names.NameTokenSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"space.kscience.dataforge.values.ValueSerializer.descriptor","location":"dataforge-meta/space.kscience.dataforge.values/-value-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","space.kscience.dataforge.values.ValueSerializer.descriptor"]},{"name":"open override val items: Map<NameToken, DynamicMeta>","description":"space.kscience.dataforge.meta.DynamicMeta.items","location":"dataforge-meta/space.kscience.dataforge.meta/-dynamic-meta/items.html","searchKeys":["items","open override val items: Map<NameToken, DynamicMeta>","space.kscience.dataforge.meta.DynamicMeta.items"]},{"name":"open override val items: Map<NameToken, Laminate>","description":"space.kscience.dataforge.meta.Laminate.items","location":"dataforge-meta/space.kscience.dataforge.meta/-laminate/items.html","searchKeys":["items","open override val items: Map<NameToken, Laminate>","space.kscience.dataforge.meta.Laminate.items"]},{"name":"open override val items: Map<NameToken, SealedMeta>","description":"space.kscience.dataforge.meta.SealedMeta.items","location":"dataforge-meta/space.kscience.dataforge.meta/-sealed-meta/items.html","searchKeys":["items","open override val items: Map<NameToken, SealedMeta>","space.kscience.dataforge.meta.SealedMeta.items"]},{"name":"open override val list: List<Value>","description":"space.kscience.dataforge.values.DoubleArrayValue.list","location":"dataforge-meta/space.kscience.dataforge.values/-double-array-value/list.html","searchKeys":["list","open override val list: List<Value>","space.kscience.dataforge.values.DoubleArrayValue.list"]},{"name":"open override val list: List<Value>","description":"space.kscience.dataforge.values.ListValue.list","location":"dataforge-meta/space.kscience.dataforge.values/-list-value/list.html","searchKeys":["list","open override val list: List<Value>","space.kscience.dataforge.values.ListValue.list"]},{"name":"open override val type: ValueType","description":"space.kscience.dataforge.values.DoubleArrayValue.type","location":"dataforge-meta/space.kscience.dataforge.values/-double-array-value/type.html","searchKeys":["type","open override val type: ValueType","space.kscience.dataforge.values.DoubleArrayValue.type"]},{"name":"open override val type: ValueType","description":"space.kscience.dataforge.values.EnumValue.type","location":"dataforge-meta/space.kscience.dataforge.values/-enum-value/type.html","searchKeys":["type","open override val type: ValueType","space.kscience.dataforge.values.EnumValue.type"]},{"name":"open override val type: ValueType","description":"space.kscience.dataforge.values.False.type","location":"dataforge-meta/space.kscience.dataforge.values/-false/type.html","searchKeys":["type","open override val type: ValueType","space.kscience.dataforge.values.False.type"]},{"name":"open override val type: ValueType","description":"space.kscience.dataforge.values.LazyParsedValue.type","location":"dataforge-meta/space.kscience.dataforge.values/-lazy-parsed-value/type.html","searchKeys":["type","open override val type: ValueType","space.kscience.dataforge.values.LazyParsedValue.type"]},{"name":"open override val type: ValueType","description":"space.kscience.dataforge.values.ListValue.type","location":"dataforge-meta/space.kscience.dataforge.values/-list-value/type.html","searchKeys":["type","open override val type: ValueType","space.kscience.dataforge.values.ListValue.type"]},{"name":"open override val type: ValueType","description":"space.kscience.dataforge.values.Null.type","location":"dataforge-meta/space.kscience.dataforge.values/-null/type.html","searchKeys":["type","open override val type: ValueType","space.kscience.dataforge.values.Null.type"]},{"name":"open override val type: ValueType","description":"space.kscience.dataforge.values.NumberValue.type","location":"dataforge-meta/space.kscience.dataforge.values/-number-value/type.html","searchKeys":["type","open override val type: ValueType","space.kscience.dataforge.values.NumberValue.type"]},{"name":"open override val type: ValueType","description":"space.kscience.dataforge.values.StringValue.type","location":"dataforge-meta/space.kscience.dataforge.values/-string-value/type.html","searchKeys":["type","open override val type: ValueType","space.kscience.dataforge.values.StringValue.type"]},{"name":"open override val type: ValueType","description":"space.kscience.dataforge.values.True.type","location":"dataforge-meta/space.kscience.dataforge.values/-true/type.html","searchKeys":["type","open override val type: ValueType","space.kscience.dataforge.values.True.type"]},{"name":"open override val value: Any","description":"space.kscience.dataforge.values.False.value","location":"dataforge-meta/space.kscience.dataforge.values/-false/value.html","searchKeys":["value","open override val value: Any","space.kscience.dataforge.values.False.value"]},{"name":"open override val value: Any","description":"space.kscience.dataforge.values.NumberValue.value","location":"dataforge-meta/space.kscience.dataforge.values/-number-value/value.html","searchKeys":["value","open override val value: Any","space.kscience.dataforge.values.NumberValue.value"]},{"name":"open override val value: Any","description":"space.kscience.dataforge.values.StringValue.value","location":"dataforge-meta/space.kscience.dataforge.values/-string-value/value.html","searchKeys":["value","open override val value: Any","space.kscience.dataforge.values.StringValue.value"]},{"name":"open override val value: Any","description":"space.kscience.dataforge.values.True.value","location":"dataforge-meta/space.kscience.dataforge.values/-true/value.html","searchKeys":["value","open override val value: Any","space.kscience.dataforge.values.True.value"]},{"name":"open override val value: Any?","description":"space.kscience.dataforge.values.LazyParsedValue.value","location":"dataforge-meta/space.kscience.dataforge.values/-lazy-parsed-value/value.html","searchKeys":["value","open override val value: Any?","space.kscience.dataforge.values.LazyParsedValue.value"]},{"name":"open override val value: Any?","description":"space.kscience.dataforge.values.Null.value","location":"dataforge-meta/space.kscience.dataforge.values/-null/value.html","searchKeys":["value","open override val value: Any?","space.kscience.dataforge.values.Null.value"]},{"name":"open override val value: DoubleArray","description":"space.kscience.dataforge.values.DoubleArrayValue.value","location":"dataforge-meta/space.kscience.dataforge.values/-double-array-value/value.html","searchKeys":["value","open override val value: DoubleArray","space.kscience.dataforge.values.DoubleArrayValue.value"]},{"name":"open override val value: E","description":"space.kscience.dataforge.values.EnumValue.value","location":"dataforge-meta/space.kscience.dataforge.values/-enum-value/value.html","searchKeys":["value","open override val value: E","space.kscience.dataforge.values.EnumValue.value"]},{"name":"open override val value: List<Value>","description":"space.kscience.dataforge.values.ListValue.value","location":"dataforge-meta/space.kscience.dataforge.values/-list-value/value.html","searchKeys":["value","open override val value: List<Value>","space.kscience.dataforge.values.ListValue.value"]},{"name":"open override val value: Value?","description":"space.kscience.dataforge.meta.DynamicMeta.value","location":"dataforge-meta/space.kscience.dataforge.meta/-dynamic-meta/value.html","searchKeys":["value","open override val value: Value?","space.kscience.dataforge.meta.DynamicMeta.value"]},{"name":"open override val value: Value?","description":"space.kscience.dataforge.meta.Laminate.value","location":"dataforge-meta/space.kscience.dataforge.meta/-laminate/value.html","searchKeys":["value","open override val value: Value?","space.kscience.dataforge.meta.Laminate.value"]},{"name":"open override val value: Value?","description":"space.kscience.dataforge.meta.SealedMeta.value","location":"dataforge-meta/space.kscience.dataforge.meta/-sealed-meta/value.html","searchKeys":["value","open override val value: Value?","space.kscience.dataforge.meta.SealedMeta.value"]},{"name":"open val list: List<Value>","description":"space.kscience.dataforge.values.Value.list","location":"dataforge-meta/space.kscience.dataforge.values/-value/list.html","searchKeys":["list","open val list: List<Value>","space.kscience.dataforge.values.Value.list"]},{"name":"operator fun <M : MutableTypedMeta<M>> MutableTypedMeta<M>.set(name: Name, value: Value?)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun <M : MutableTypedMeta<M>> MutableTypedMeta<M>.set(name: Name, value: Value?)","space.kscience.dataforge.meta.set"]},{"name":"operator fun <M : TypedMeta<M>> TypedMeta<M>.get(key: String): M?","description":"space.kscience.dataforge.meta.get","location":"dataforge-meta/space.kscience.dataforge.meta/get.html","searchKeys":["get","operator fun <M : TypedMeta<M>> TypedMeta<M>.get(key: String): M?","space.kscience.dataforge.meta.get"]},{"name":"operator fun <M : TypedMeta<M>> TypedMeta<M>.get(token: NameToken): M?","description":"space.kscience.dataforge.meta.get","location":"dataforge-meta/space.kscience.dataforge.meta/get.html","searchKeys":["get","operator fun <M : TypedMeta<M>> TypedMeta<M>.get(token: NameToken): M?","space.kscience.dataforge.meta.get"]},{"name":"operator fun <T> Map<Name, T>.get(name: String): T?","description":"space.kscience.dataforge.names.get","location":"dataforge-meta/space.kscience.dataforge.names/get.html","searchKeys":["get","operator fun <T> Map<Name, T>.get(name: String): T?","space.kscience.dataforge.names.get"]},{"name":"operator fun <T> Map<NameToken, T>.get(body: String, query: String? = null): T?","description":"space.kscience.dataforge.names.get","location":"dataforge-meta/space.kscience.dataforge.names/get.html","searchKeys":["get","operator fun <T> Map<NameToken, T>.get(body: String, query: String? = null): T?","space.kscience.dataforge.names.get"]},{"name":"operator fun <T> MutableMap<Name, T>.set(name: String, value: T)","description":"space.kscience.dataforge.names.set","location":"dataforge-meta/space.kscience.dataforge.names/set.html","searchKeys":["set","operator fun <T> MutableMap<Name, T>.set(name: String, value: T)","space.kscience.dataforge.names.set"]},{"name":"operator fun Meta.get(key: String): Meta?","description":"space.kscience.dataforge.meta.get","location":"dataforge-meta/space.kscience.dataforge.meta/get.html","searchKeys":["get","operator fun Meta.get(key: String): Meta?","space.kscience.dataforge.meta.get"]},{"name":"operator fun Meta.get(name: Name): Meta?","description":"space.kscience.dataforge.meta.get","location":"dataforge-meta/space.kscience.dataforge.meta/get.html","searchKeys":["get","operator fun Meta.get(name: Name): Meta?","space.kscience.dataforge.meta.get"]},{"name":"operator fun Meta.get(token: NameToken): Meta?","description":"space.kscience.dataforge.meta.get","location":"dataforge-meta/space.kscience.dataforge.meta/get.html","searchKeys":["get","operator fun Meta.get(token: NameToken): Meta?","space.kscience.dataforge.meta.get"]},{"name":"operator fun Meta.iterator(): Iterator<Pair<Name, Meta>>","description":"space.kscience.dataforge.meta.iterator","location":"dataforge-meta/space.kscience.dataforge.meta/iterator.html","searchKeys":["iterator","operator fun Meta.iterator(): Iterator<Pair<Name, Meta>>","space.kscience.dataforge.meta.iterator"]},{"name":"operator fun MetaDescriptor.get(name: Name): MetaDescriptor?","description":"space.kscience.dataforge.meta.descriptors.get","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/get.html","searchKeys":["get","operator fun MetaDescriptor.get(name: Name): MetaDescriptor?","space.kscience.dataforge.meta.descriptors.get"]},{"name":"operator fun MetaDescriptor.get(name: String): MetaDescriptor?","description":"space.kscience.dataforge.meta.descriptors.get","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/get.html","searchKeys":["get","operator fun MetaDescriptor.get(name: String): MetaDescriptor?","space.kscience.dataforge.meta.descriptors.get"]},{"name":"operator fun MutableMeta.set(key: String, metas: Iterable<Meta>)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMeta.set(key: String, metas: Iterable<Meta>)","space.kscience.dataforge.meta.set"]},{"name":"operator fun MutableMeta.set(key: String, value: Boolean)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMeta.set(key: String, value: Boolean)","space.kscience.dataforge.meta.set"]},{"name":"operator fun MutableMeta.set(key: String, value: List<Value>)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMeta.set(key: String, value: List<Value>)","space.kscience.dataforge.meta.set"]},{"name":"operator fun MutableMeta.set(key: String, value: Number)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMeta.set(key: String, value: Number)","space.kscience.dataforge.meta.set"]},{"name":"operator fun MutableMeta.set(key: String, value: String)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMeta.set(key: String, value: String)","space.kscience.dataforge.meta.set"]},{"name":"operator fun MutableMeta.set(key: String, value: Value?)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMeta.set(key: String, value: Value?)","space.kscience.dataforge.meta.set"]},{"name":"operator fun MutableMeta.set(name: Name, meta: Meta)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMeta.set(name: Name, meta: Meta)","space.kscience.dataforge.meta.set"]},{"name":"operator fun MutableMeta.set(name: Name, metas: Iterable<Meta>)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMeta.set(name: Name, metas: Iterable<Meta>)","space.kscience.dataforge.meta.set"]},{"name":"operator fun MutableMeta.set(name: Name, value: Boolean)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMeta.set(name: Name, value: Boolean)","space.kscience.dataforge.meta.set"]},{"name":"operator fun MutableMeta.set(name: Name, value: List<Value>)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMeta.set(name: Name, value: List<Value>)","space.kscience.dataforge.meta.set"]},{"name":"operator fun MutableMeta.set(name: Name, value: Number)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMeta.set(name: Name, value: Number)","space.kscience.dataforge.meta.set"]},{"name":"operator fun MutableMeta.set(name: Name, value: String)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMeta.set(name: Name, value: String)","space.kscience.dataforge.meta.set"]},{"name":"operator fun MutableMeta.set(name: Name, value: Value?)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMeta.set(name: Name, value: Value?)","space.kscience.dataforge.meta.set"]},{"name":"operator fun MutableMeta.set(name: NameToken, value: Boolean)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMeta.set(name: NameToken, value: Boolean)","space.kscience.dataforge.meta.set"]},{"name":"operator fun MutableMeta.set(name: NameToken, value: List<Value>)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMeta.set(name: NameToken, value: List<Value>)","space.kscience.dataforge.meta.set"]},{"name":"operator fun MutableMeta.set(name: NameToken, value: Number)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMeta.set(name: NameToken, value: Number)","space.kscience.dataforge.meta.set"]},{"name":"operator fun MutableMeta.set(name: NameToken, value: String)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMeta.set(name: NameToken, value: String)","space.kscience.dataforge.meta.set"]},{"name":"operator fun MutableMeta.set(name: NameToken, value: Value?)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMeta.set(name: NameToken, value: Value?)","space.kscience.dataforge.meta.set"]},{"name":"operator fun MutableMetaProvider.set(Key: NameToken, value: Meta)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMetaProvider.set(Key: NameToken, value: Meta)","space.kscience.dataforge.meta.set"]},{"name":"operator fun MutableMetaProvider.set(key: String, value: Meta)","description":"space.kscience.dataforge.meta.set","location":"dataforge-meta/space.kscience.dataforge.meta/set.html","searchKeys":["set","operator fun MutableMetaProvider.set(key: String, value: Meta)","space.kscience.dataforge.meta.set"]},{"name":"operator fun Name.get(i: Int): NameToken","description":"space.kscience.dataforge.names.get","location":"dataforge-meta/space.kscience.dataforge.names/get.html","searchKeys":["get","operator fun Name.get(i: Int): NameToken","space.kscience.dataforge.names.get"]},{"name":"operator fun Name.plus(other: Name): Name","description":"space.kscience.dataforge.names.plus","location":"dataforge-meta/space.kscience.dataforge.names/plus.html","searchKeys":["plus","operator fun Name.plus(other: Name): Name","space.kscience.dataforge.names.plus"]},{"name":"operator fun Name.plus(other: NameToken): Name","description":"space.kscience.dataforge.names.plus","location":"dataforge-meta/space.kscience.dataforge.names/plus.html","searchKeys":["plus","operator fun Name.plus(other: NameToken): Name","space.kscience.dataforge.names.plus"]},{"name":"operator fun Name.plus(other: String): Name","description":"space.kscience.dataforge.names.plus","location":"dataforge-meta/space.kscience.dataforge.names/plus.html","searchKeys":["plus","operator fun Name.plus(other: String): Name","space.kscience.dataforge.names.plus"]},{"name":"operator fun NameToken.plus(other: Name): Name","description":"space.kscience.dataforge.names.plus","location":"dataforge-meta/space.kscience.dataforge.names/plus.html","searchKeys":["plus","operator fun NameToken.plus(other: Name): Name","space.kscience.dataforge.names.plus"]},{"name":"operator tailrec fun <M : TypedMeta<M>> TypedMeta<M>.get(name: Name): M?","description":"space.kscience.dataforge.meta.get","location":"dataforge-meta/space.kscience.dataforge.meta/get.html","searchKeys":["get","operator tailrec fun <M : TypedMeta<M>> TypedMeta<M>.get(name: Name): M?","space.kscience.dataforge.meta.get"]},{"name":"override val meta: ObservableMutableMeta","description":"space.kscience.dataforge.meta.Scheme.meta","location":"dataforge-meta/space.kscience.dataforge.meta/-scheme/meta.html","searchKeys":["meta","override val meta: ObservableMutableMeta","space.kscience.dataforge.meta.Scheme.meta"]},{"name":"override var descriptor: MetaDescriptor? = null","description":"space.kscience.dataforge.meta.Scheme.descriptor","location":"dataforge-meta/space.kscience.dataforge.meta/-scheme/descriptor.html","searchKeys":["descriptor","override var descriptor: MetaDescriptor? = null","space.kscience.dataforge.meta.Scheme.descriptor"]},{"name":"val <M : TypedMeta<M>> TypedMeta<M>.self: M","description":"space.kscience.dataforge.meta.self","location":"dataforge-meta/space.kscience.dataforge.meta/self.html","searchKeys":["self","val <M : TypedMeta<M>> TypedMeta<M>.self: M","space.kscience.dataforge.meta.self"]},{"name":"val EMPTY: ListValue","description":"space.kscience.dataforge.values.ListValue.Companion.EMPTY","location":"dataforge-meta/space.kscience.dataforge.values/-list-value/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: ListValue","space.kscience.dataforge.values.ListValue.Companion.EMPTY"]},{"name":"val EMPTY: Meta","description":"space.kscience.dataforge.meta.Meta.Companion.EMPTY","location":"dataforge-meta/space.kscience.dataforge.meta/-meta/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: Meta","space.kscience.dataforge.meta.Meta.Companion.EMPTY"]},{"name":"val EMPTY: Name","description":"space.kscience.dataforge.names.Name.Companion.EMPTY","location":"dataforge-meta/space.kscience.dataforge.names/-name/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: Name","space.kscience.dataforge.names.Name.Companion.EMPTY"]},{"name":"val MATCH_ALL_TOKEN: NameToken","description":"space.kscience.dataforge.names.Name.Companion.MATCH_ALL_TOKEN","location":"dataforge-meta/space.kscience.dataforge.names/-name/-companion/-m-a-t-c-h_-a-l-l_-t-o-k-e-n.html","searchKeys":["MATCH_ALL_TOKEN","val MATCH_ALL_TOKEN: NameToken","space.kscience.dataforge.names.Name.Companion.MATCH_ALL_TOKEN"]},{"name":"val MATCH_ANY_TOKEN: NameToken","description":"space.kscience.dataforge.names.Name.Companion.MATCH_ANY_TOKEN","location":"dataforge-meta/space.kscience.dataforge.names/-name/-companion/-m-a-t-c-h_-a-n-y_-t-o-k-e-n.html","searchKeys":["MATCH_ANY_TOKEN","val MATCH_ANY_TOKEN: NameToken","space.kscience.dataforge.names.Name.Companion.MATCH_ANY_TOKEN"]},{"name":"val Meta.Companion.JSON_ARRAY_KEY: String","description":"space.kscience.dataforge.meta.JSON_ARRAY_KEY","location":"dataforge-meta/space.kscience.dataforge.meta/-j-s-o-n_-a-r-r-a-y_-k-e-y.html","searchKeys":["JSON_ARRAY_KEY","val Meta.Companion.JSON_ARRAY_KEY: String","space.kscience.dataforge.meta.JSON_ARRAY_KEY"]},{"name":"val Meta.isLeaf: Boolean","description":"space.kscience.dataforge.meta.isLeaf","location":"dataforge-meta/space.kscience.dataforge.meta/is-leaf.html","searchKeys":["isLeaf","val Meta.isLeaf: Boolean","space.kscience.dataforge.meta.isLeaf"]},{"name":"val Meta.stringList: List<String>?","description":"space.kscience.dataforge.meta.stringList","location":"dataforge-meta/space.kscience.dataforge.meta/string-list.html","searchKeys":["stringList","val Meta.stringList: List<String>?","space.kscience.dataforge.meta.stringList"]},{"name":"val Meta?.boolean: Boolean?","description":"space.kscience.dataforge.meta.boolean","location":"dataforge-meta/space.kscience.dataforge.meta/boolean.html","searchKeys":["boolean","val Meta?.boolean: Boolean?","space.kscience.dataforge.meta.boolean"]},{"name":"val Meta?.double: Double?","description":"space.kscience.dataforge.meta.double","location":"dataforge-meta/space.kscience.dataforge.meta/double.html","searchKeys":["double","val Meta?.double: Double?","space.kscience.dataforge.meta.double"]},{"name":"val Meta?.float: Float?","description":"space.kscience.dataforge.meta.float","location":"dataforge-meta/space.kscience.dataforge.meta/float.html","searchKeys":["float","val Meta?.float: Float?","space.kscience.dataforge.meta.float"]},{"name":"val Meta?.int: Int?","description":"space.kscience.dataforge.meta.int","location":"dataforge-meta/space.kscience.dataforge.meta/int.html","searchKeys":["int","val Meta?.int: Int?","space.kscience.dataforge.meta.int"]},{"name":"val Meta?.long: Long?","description":"space.kscience.dataforge.meta.long","location":"dataforge-meta/space.kscience.dataforge.meta/long.html","searchKeys":["long","val Meta?.long: Long?","space.kscience.dataforge.meta.long"]},{"name":"val Meta?.number: Number?","description":"space.kscience.dataforge.meta.number","location":"dataforge-meta/space.kscience.dataforge.meta/number.html","searchKeys":["number","val Meta?.number: Number?","space.kscience.dataforge.meta.number"]},{"name":"val Meta?.short: Short?","description":"space.kscience.dataforge.meta.short","location":"dataforge-meta/space.kscience.dataforge.meta/short.html","searchKeys":["short","val Meta?.short: Short?","space.kscience.dataforge.meta.short"]},{"name":"val Meta?.string: String?","description":"space.kscience.dataforge.meta.string","location":"dataforge-meta/space.kscience.dataforge.meta/string.html","searchKeys":["string","val Meta?.string: String?","space.kscience.dataforge.meta.string"]},{"name":"val MetaDescriptor.allowedValues: List<Value>?","description":"space.kscience.dataforge.meta.descriptors.allowedValues","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/allowed-values.html","searchKeys":["allowedValues","val MetaDescriptor.allowedValues: List<Value>?","space.kscience.dataforge.meta.descriptors.allowedValues"]},{"name":"val MetaDescriptor.required: Boolean","description":"space.kscience.dataforge.meta.descriptors.required","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/required.html","searchKeys":["required","val MetaDescriptor.required: Boolean","space.kscience.dataforge.meta.descriptors.required"]},{"name":"val Name.length: Int","description":"space.kscience.dataforge.names.length","location":"dataforge-meta/space.kscience.dataforge.names/length.html","searchKeys":["length","val Name.length: Int","space.kscience.dataforge.names.length"]},{"name":"val Named.isAnonymous: Boolean","description":"space.kscience.dataforge.misc.isAnonymous","location":"dataforge-meta/space.kscience.dataforge.misc/is-anonymous.html","searchKeys":["isAnonymous","val Named.isAnonymous: Boolean","space.kscience.dataforge.misc.isAnonymous"]},{"name":"val Value.boolean: Boolean","description":"space.kscience.dataforge.values.boolean","location":"dataforge-meta/space.kscience.dataforge.values/boolean.html","searchKeys":["boolean","val Value.boolean: Boolean","space.kscience.dataforge.values.boolean"]},{"name":"val Value.double: Double","description":"space.kscience.dataforge.values.double","location":"dataforge-meta/space.kscience.dataforge.values/double.html","searchKeys":["double","val Value.double: Double","space.kscience.dataforge.values.double"]},{"name":"val Value.doubleArray: DoubleArray","description":"space.kscience.dataforge.values.doubleArray","location":"dataforge-meta/space.kscience.dataforge.values/double-array.html","searchKeys":["doubleArray","val Value.doubleArray: DoubleArray","space.kscience.dataforge.values.doubleArray"]},{"name":"val Value.float: Float","description":"space.kscience.dataforge.values.float","location":"dataforge-meta/space.kscience.dataforge.values/float.html","searchKeys":["float","val Value.float: Float","space.kscience.dataforge.values.float"]},{"name":"val Value.int: Int","description":"space.kscience.dataforge.values.int","location":"dataforge-meta/space.kscience.dataforge.values/int.html","searchKeys":["int","val Value.int: Int","space.kscience.dataforge.values.int"]},{"name":"val Value.long: Long","description":"space.kscience.dataforge.values.long","location":"dataforge-meta/space.kscience.dataforge.values/long.html","searchKeys":["long","val Value.long: Long","space.kscience.dataforge.values.long"]},{"name":"val Value.number: Number","description":"space.kscience.dataforge.values.number","location":"dataforge-meta/space.kscience.dataforge.values/number.html","searchKeys":["number","val Value.number: Number","space.kscience.dataforge.values.number"]},{"name":"val Value.numberOrNull: Number?","description":"space.kscience.dataforge.values.numberOrNull","location":"dataforge-meta/space.kscience.dataforge.values/number-or-null.html","searchKeys":["numberOrNull","val Value.numberOrNull: Number?","space.kscience.dataforge.values.numberOrNull"]},{"name":"val Value.short: Short","description":"space.kscience.dataforge.values.short","location":"dataforge-meta/space.kscience.dataforge.values/short.html","searchKeys":["short","val Value.short: Short","space.kscience.dataforge.values.short"]},{"name":"val Value.string: String","description":"space.kscience.dataforge.values.string","location":"dataforge-meta/space.kscience.dataforge.values/string.html","searchKeys":["string","val Value.string: String","space.kscience.dataforge.values.string"]},{"name":"val Value.stringList: List<String>","description":"space.kscience.dataforge.values.stringList","location":"dataforge-meta/space.kscience.dataforge.values/string-list.html","searchKeys":["stringList","val Value.stringList: List<String>","space.kscience.dataforge.values.stringList"]},{"name":"val attributes: Meta","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptor.attributes","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor/attributes.html","searchKeys":["attributes","val attributes: Meta","space.kscience.dataforge.meta.descriptors.MetaDescriptor.attributes"]},{"name":"val body: String","description":"space.kscience.dataforge.names.NameToken.body","location":"dataforge-meta/space.kscience.dataforge.names/-name-token/body.html","searchKeys":["body","val body: String","space.kscience.dataforge.names.NameToken.body"]},{"name":"val boolean: MetaConverter<Boolean>","description":"space.kscience.dataforge.meta.transformations.MetaConverter.Companion.boolean","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-converter/-companion/boolean.html","searchKeys":["boolean","val boolean: MetaConverter<Boolean>","space.kscience.dataforge.meta.transformations.MetaConverter.Companion.boolean"]},{"name":"val children: Map<String, MetaDescriptor>","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptor.children","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor/children.html","searchKeys":["children","val children: Map<String, MetaDescriptor>","space.kscience.dataforge.meta.descriptors.MetaDescriptor.children"]},{"name":"val defaultNode: Meta","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptor.defaultNode","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor/default-node.html","searchKeys":["defaultNode","val defaultNode: Meta","space.kscience.dataforge.meta.descriptors.MetaDescriptor.defaultNode"]},{"name":"val defaultValue: Value? = null","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptor.defaultValue","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor/default-value.html","searchKeys":["defaultValue","val defaultValue: Value? = null","space.kscience.dataforge.meta.descriptors.MetaDescriptor.defaultValue"]},{"name":"val double: MetaConverter<Double>","description":"space.kscience.dataforge.meta.transformations.MetaConverter.Companion.double","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-converter/-companion/double.html","searchKeys":["double","val double: MetaConverter<Double>","space.kscience.dataforge.meta.transformations.MetaConverter.Companion.double"]},{"name":"val float: MetaConverter<Float>","description":"space.kscience.dataforge.meta.transformations.MetaConverter.Companion.float","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-converter/-companion/float.html","searchKeys":["float","val float: MetaConverter<Float>","space.kscience.dataforge.meta.transformations.MetaConverter.Companion.float"]},{"name":"val from: Name","description":"space.kscience.dataforge.meta.transformations.SingleItemTransformationRule.from","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-single-item-transformation-rule/from.html","searchKeys":["from","val from: Name","space.kscience.dataforge.meta.transformations.SingleItemTransformationRule.from"]},{"name":"val from: Regex","description":"space.kscience.dataforge.meta.transformations.RegexItemTransformationRule.from","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-regex-item-transformation-rule/from.html","searchKeys":["from","val from: Regex","space.kscience.dataforge.meta.transformations.RegexItemTransformationRule.from"]},{"name":"val id: String","description":"space.kscience.dataforge.misc.Type.id","location":"dataforge-meta/space.kscience.dataforge.misc/-type/id.html","searchKeys":["id","val id: String","space.kscience.dataforge.misc.Type.id"]},{"name":"val index: String? = null","description":"space.kscience.dataforge.names.NameToken.index","location":"dataforge-meta/space.kscience.dataforge.names/-name-token/--index--.html","searchKeys":["index","val index: String? = null","space.kscience.dataforge.names.NameToken.index"]},{"name":"val indexKey: String","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptor.indexKey","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor/index-key.html","searchKeys":["indexKey","val indexKey: String","space.kscience.dataforge.meta.descriptors.MetaDescriptor.indexKey"]},{"name":"val info: String? = null","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptor.info","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor/info.html","searchKeys":["info","val info: String? = null","space.kscience.dataforge.meta.descriptors.MetaDescriptor.info"]},{"name":"val int: MetaConverter<Int>","description":"space.kscience.dataforge.meta.transformations.MetaConverter.Companion.int","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-converter/-companion/int.html","searchKeys":["int","val int: MetaConverter<Int>","space.kscience.dataforge.meta.transformations.MetaConverter.Companion.int"]},{"name":"val layers: List<Meta>","description":"space.kscience.dataforge.meta.Laminate.layers","location":"dataforge-meta/space.kscience.dataforge.meta/-laminate/layers.html","searchKeys":["layers","val layers: List<Meta>","space.kscience.dataforge.meta.Laminate.layers"]},{"name":"val long: MetaConverter<Long>","description":"space.kscience.dataforge.meta.transformations.MetaConverter.Companion.long","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-converter/-companion/long.html","searchKeys":["long","val long: MetaConverter<Long>","space.kscience.dataforge.meta.transformations.MetaConverter.Companion.long"]},{"name":"val mergeRule: (Sequence<Meta>) -> SealedMeta?","description":"space.kscience.dataforge.meta.Laminate.Companion.mergeRule","location":"dataforge-meta/space.kscience.dataforge.meta/-laminate/-companion/merge-rule.html","searchKeys":["mergeRule","val mergeRule: (Sequence<Meta>) -> SealedMeta?","space.kscience.dataforge.meta.Laminate.Companion.mergeRule"]},{"name":"val meta: MetaConverter<Meta>","description":"space.kscience.dataforge.meta.transformations.MetaConverter.Companion.meta","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-converter/-companion/meta.html","searchKeys":["meta","val meta: MetaConverter<Meta>","space.kscience.dataforge.meta.transformations.MetaConverter.Companion.meta"]},{"name":"val multiple: Boolean = false","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptor.multiple","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor/multiple.html","searchKeys":["multiple","val multiple: Boolean = false","space.kscience.dataforge.meta.descriptors.MetaDescriptor.multiple"]},{"name":"val number: MetaConverter<Number>","description":"space.kscience.dataforge.meta.transformations.MetaConverter.Companion.number","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-converter/-companion/number.html","searchKeys":["number","val number: MetaConverter<Number>","space.kscience.dataforge.meta.transformations.MetaConverter.Companion.number"]},{"name":"val number: Number","description":"space.kscience.dataforge.values.NumberValue.number","location":"dataforge-meta/space.kscience.dataforge.values/-number-value/number.html","searchKeys":["number","val number: Number","space.kscience.dataforge.values.NumberValue.number"]},{"name":"val replaceRule: (Sequence<Meta>) -> SealedMeta?","description":"space.kscience.dataforge.meta.Laminate.Companion.replaceRule","location":"dataforge-meta/space.kscience.dataforge.meta/-laminate/-companion/replace-rule.html","searchKeys":["replaceRule","val replaceRule: (Sequence<Meta>) -> SealedMeta?","space.kscience.dataforge.meta.Laminate.Companion.replaceRule"]},{"name":"val selector: (Name) -> Boolean","description":"space.kscience.dataforge.meta.transformations.KeepTransformationRule.selector","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-keep-transformation-rule/selector.html","searchKeys":["selector","val selector: (Name) -> Boolean","space.kscience.dataforge.meta.transformations.KeepTransformationRule.selector"]},{"name":"val string: MetaConverter<String>","description":"space.kscience.dataforge.meta.transformations.MetaConverter.Companion.string","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-converter/-companion/string.html","searchKeys":["string","val string: MetaConverter<String>","space.kscience.dataforge.meta.transformations.MetaConverter.Companion.string"]},{"name":"val string: String","description":"space.kscience.dataforge.values.LazyParsedValue.string","location":"dataforge-meta/space.kscience.dataforge.values/-lazy-parsed-value/string.html","searchKeys":["string","val string: String","space.kscience.dataforge.values.LazyParsedValue.string"]},{"name":"val string: String","description":"space.kscience.dataforge.values.StringValue.string","location":"dataforge-meta/space.kscience.dataforge.values/-string-value/string.html","searchKeys":["string","val string: String","space.kscience.dataforge.values.StringValue.string"]},{"name":"val tokens: List<NameToken>","description":"space.kscience.dataforge.names.Name.tokens","location":"dataforge-meta/space.kscience.dataforge.names/-name/tokens.html","searchKeys":["tokens","val tokens: List<NameToken>","space.kscience.dataforge.names.Name.tokens"]},{"name":"val transform: MutableMeta.(Name, Meta?) -> Unit","description":"space.kscience.dataforge.meta.transformations.SingleItemTransformationRule.transform","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-single-item-transformation-rule/transform.html","searchKeys":["transform","val transform: MutableMeta.(Name, Meta?) -> Unit","space.kscience.dataforge.meta.transformations.SingleItemTransformationRule.transform"]},{"name":"val transform: MutableMeta.(name: Name, MatchResult, Meta?) -> Unit","description":"space.kscience.dataforge.meta.transformations.RegexItemTransformationRule.transform","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-regex-item-transformation-rule/transform.html","searchKeys":["transform","val transform: MutableMeta.(name: Name, MatchResult, Meta?) -> Unit","space.kscience.dataforge.meta.transformations.RegexItemTransformationRule.transform"]},{"name":"val value: MetaConverter<Value>","description":"space.kscience.dataforge.meta.transformations.MetaConverter.Companion.value","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-converter/-companion/value.html","searchKeys":["value","val value: MetaConverter<Value>","space.kscience.dataforge.meta.transformations.MetaConverter.Companion.value"]},{"name":"val valueRequirement: ValueRequirement","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptor.valueRequirement","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor/value-requirement.html","searchKeys":["valueRequirement","val valueRequirement: ValueRequirement","space.kscience.dataforge.meta.descriptors.MetaDescriptor.valueRequirement"]},{"name":"val valueTypes: List<ValueType>? = null","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptor.valueTypes","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor/value-types.html","searchKeys":["valueTypes","val valueTypes: List<ValueType>? = null","space.kscience.dataforge.meta.descriptors.MetaDescriptor.valueTypes"]},{"name":"value class MetaTransformation(transformations: Collection<TransformationRule>)","description":"space.kscience.dataforge.meta.transformations.MetaTransformation","location":"dataforge-meta/space.kscience.dataforge.meta.transformations/-meta-transformation/index.html","searchKeys":["MetaTransformation","value class MetaTransformation(transformations: Collection<TransformationRule>)","space.kscience.dataforge.meta.transformations.MetaTransformation"]},{"name":"value class StringValue(string: String) : Value","description":"space.kscience.dataforge.values.StringValue","location":"dataforge-meta/space.kscience.dataforge.values/-string-value/index.html","searchKeys":["StringValue","value class StringValue(string: String) : Value","space.kscience.dataforge.values.StringValue"]},{"name":"var allowedValues: List<Value>","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.allowedValues","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor-builder/allowed-values.html","searchKeys":["allowedValues","var allowedValues: List<Value>","space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.allowedValues"]},{"name":"var attributes: MutableMeta","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.attributes","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor-builder/attributes.html","searchKeys":["attributes","var attributes: MutableMeta","space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.attributes"]},{"name":"var children: MutableMap<String, MetaDescriptorBuilder>","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.children","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor-builder/children.html","searchKeys":["children","var children: MutableMap<String, MetaDescriptorBuilder>","space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.children"]},{"name":"var default: Value? = null","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.default","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor-builder/default.html","searchKeys":["default","var default: Value? = null","space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.default"]},{"name":"var indexKey: String","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.indexKey","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor-builder/index-key.html","searchKeys":["indexKey","var indexKey: String","space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.indexKey"]},{"name":"var info: String? = null","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.info","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor-builder/info.html","searchKeys":["info","var info: String? = null","space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.info"]},{"name":"var multiple: Boolean = false","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.multiple","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor-builder/multiple.html","searchKeys":["multiple","var multiple: Boolean = false","space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.multiple"]},{"name":"var type: List<ValueType>? = null","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.type","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor-builder/type.html","searchKeys":["type","var type: List<ValueType>? = null","space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.type"]},{"name":"var valueRequirement: ValueRequirement","description":"space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.valueRequirement","location":"dataforge-meta/space.kscience.dataforge.meta.descriptors/-meta-descriptor-builder/value-requirement.html","searchKeys":["valueRequirement","var valueRequirement: ValueRequirement","space.kscience.dataforge.meta.descriptors.MetaDescriptorBuilder.valueRequirement"]},{"name":"class FrontMatterEnvelopeFormat(io: IOPlugin, meta: Meta) : EnvelopeFormat","description":"space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-front-matter-envelope-format/index.html","searchKeys":["FrontMatterEnvelopeFormat","class FrontMatterEnvelopeFormat(io: IOPlugin, meta: Meta) : EnvelopeFormat","space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat"]},{"name":"class YamlMetaFormat(meta: Meta) : MetaFormat","description":"space.kscience.dataforge.io.yaml.YamlMetaFormat","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-meta-format/index.html","searchKeys":["YamlMetaFormat","class YamlMetaFormat(meta: Meta) : MetaFormat","space.kscience.dataforge.io.yaml.YamlMetaFormat"]},{"name":"class YamlPlugin(meta: Meta) : AbstractPlugin","description":"space.kscience.dataforge.io.yaml.YamlPlugin","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-plugin/index.html","searchKeys":["YamlPlugin","class YamlPlugin(meta: Meta) : AbstractPlugin","space.kscience.dataforge.io.yaml.YamlPlugin"]},{"name":"const val SEPARATOR: String","description":"space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.Companion.SEPARATOR","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-front-matter-envelope-format/-companion/-s-e-p-a-r-a-t-o-r.html","searchKeys":["SEPARATOR","const val SEPARATOR: String","space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.Companion.SEPARATOR"]},{"name":"fun FrontMatterEnvelopeFormat(io: IOPlugin, meta: Meta = Meta.EMPTY)","description":"space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.FrontMatterEnvelopeFormat","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-front-matter-envelope-format/-front-matter-envelope-format.html","searchKeys":["FrontMatterEnvelopeFormat","fun FrontMatterEnvelopeFormat(io: IOPlugin, meta: Meta = Meta.EMPTY)","space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.FrontMatterEnvelopeFormat"]},{"name":"fun Meta.toYaml(): YamlMap","description":"space.kscience.dataforge.io.yaml.toYaml","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/to-yaml.html","searchKeys":["toYaml","fun Meta.toYaml(): YamlMap","space.kscience.dataforge.io.yaml.toYaml"]},{"name":"fun YamlElement.toMeta(descriptor: MetaDescriptor? = null): Meta","description":"space.kscience.dataforge.io.yaml.toMeta","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/to-meta.html","searchKeys":["toMeta","fun YamlElement.toMeta(descriptor: MetaDescriptor? = null): Meta","space.kscience.dataforge.io.yaml.toMeta"]},{"name":"fun YamlMap.toMeta(): Meta","description":"space.kscience.dataforge.io.yaml.toMeta","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/to-meta.html","searchKeys":["toMeta","fun YamlMap.toMeta(): Meta","space.kscience.dataforge.io.yaml.toMeta"]},{"name":"fun YamlMetaFormat(meta: Meta)","description":"space.kscience.dataforge.io.yaml.YamlMetaFormat.YamlMetaFormat","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-meta-format/-yaml-meta-format.html","searchKeys":["YamlMetaFormat","fun YamlMetaFormat(meta: Meta)","space.kscience.dataforge.io.yaml.YamlMetaFormat.YamlMetaFormat"]},{"name":"fun YamlPlugin(meta: Meta)","description":"space.kscience.dataforge.io.yaml.YamlPlugin.YamlPlugin","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-plugin/-yaml-plugin.html","searchKeys":["YamlPlugin","fun YamlPlugin(meta: Meta)","space.kscience.dataforge.io.yaml.YamlPlugin.YamlPlugin"]},{"name":"object Companion : EnvelopeFormatFactory","description":"space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.Companion","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-front-matter-envelope-format/-companion/index.html","searchKeys":["Companion","object Companion : EnvelopeFormatFactory","space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.Companion"]},{"name":"object Companion : MetaFormatFactory","description":"space.kscience.dataforge.io.yaml.YamlMetaFormat.Companion","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-meta-format/-companion/index.html","searchKeys":["Companion","object Companion : MetaFormatFactory","space.kscience.dataforge.io.yaml.YamlMetaFormat.Companion"]},{"name":"object Companion : PluginFactory<YamlPlugin> ","description":"space.kscience.dataforge.io.yaml.YamlPlugin.Companion","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-plugin/-companion/index.html","searchKeys":["Companion","object Companion : PluginFactory<YamlPlugin> ","space.kscience.dataforge.io.yaml.YamlPlugin.Companion"]},{"name":"open operator override fun invoke(meta: Meta, context: Context): EnvelopeFormat","description":"space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.Companion.invoke","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-front-matter-envelope-format/-companion/invoke.html","searchKeys":["invoke","open operator override fun invoke(meta: Meta, context: Context): EnvelopeFormat","space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.Companion.invoke"]},{"name":"open operator override fun invoke(meta: Meta, context: Context): MetaFormat","description":"space.kscience.dataforge.io.yaml.YamlMetaFormat.Companion.invoke","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-meta-format/-companion/invoke.html","searchKeys":["invoke","open operator override fun invoke(meta: Meta, context: Context): MetaFormat","space.kscience.dataforge.io.yaml.YamlMetaFormat.Companion.invoke"]},{"name":"open operator override fun invoke(meta: Meta, context: Context): YamlPlugin","description":"space.kscience.dataforge.io.yaml.YamlPlugin.Companion.invoke","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-plugin/-companion/invoke.html","searchKeys":["invoke","open operator override fun invoke(meta: Meta, context: Context): YamlPlugin","space.kscience.dataforge.io.yaml.YamlPlugin.Companion.invoke"]},{"name":"open override fun content(target: String): Map<Name, Any>","description":"space.kscience.dataforge.io.yaml.YamlPlugin.content","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-plugin/content.html","searchKeys":["content","open override fun content(target: String): Map<Name, Any>","space.kscience.dataforge.io.yaml.YamlPlugin.content"]},{"name":"open override fun peekFormat(io: IOPlugin, binary: Binary): EnvelopeFormat?","description":"space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.Companion.peekFormat","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-front-matter-envelope-format/-companion/peek-format.html","searchKeys":["peekFormat","open override fun peekFormat(io: IOPlugin, binary: Binary): EnvelopeFormat?","space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.Companion.peekFormat"]},{"name":"open override fun readMeta(input: Input, descriptor: MetaDescriptor?): Meta","description":"space.kscience.dataforge.io.yaml.YamlMetaFormat.Companion.readMeta","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-meta-format/-companion/read-meta.html","searchKeys":["readMeta","open override fun readMeta(input: Input, descriptor: MetaDescriptor?): Meta","space.kscience.dataforge.io.yaml.YamlMetaFormat.Companion.readMeta"]},{"name":"open override fun readMeta(input: Input, descriptor: MetaDescriptor?): Meta","description":"space.kscience.dataforge.io.yaml.YamlMetaFormat.readMeta","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-meta-format/read-meta.html","searchKeys":["readMeta","open override fun readMeta(input: Input, descriptor: MetaDescriptor?): Meta","space.kscience.dataforge.io.yaml.YamlMetaFormat.readMeta"]},{"name":"open override fun readObject(input: Input): Envelope","description":"space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.Companion.readObject","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-front-matter-envelope-format/-companion/read-object.html","searchKeys":["readObject","open override fun readObject(input: Input): Envelope","space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.Companion.readObject"]},{"name":"open override fun readObject(input: Input): Envelope","description":"space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.readObject","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-front-matter-envelope-format/read-object.html","searchKeys":["readObject","open override fun readObject(input: Input): Envelope","space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.readObject"]},{"name":"open override fun readPartial(input: Input): PartialEnvelope","description":"space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.Companion.readPartial","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-front-matter-envelope-format/-companion/read-partial.html","searchKeys":["readPartial","open override fun readPartial(input: Input): PartialEnvelope","space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.Companion.readPartial"]},{"name":"open override fun readPartial(input: Input): PartialEnvelope","description":"space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.readPartial","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-front-matter-envelope-format/read-partial.html","searchKeys":["readPartial","open override fun readPartial(input: Input): PartialEnvelope","space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.readPartial"]},{"name":"open override fun toMeta(): Meta","description":"space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.toMeta","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-front-matter-envelope-format/to-meta.html","searchKeys":["toMeta","open override fun toMeta(): Meta","space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.toMeta"]},{"name":"open override fun toMeta(): Meta","description":"space.kscience.dataforge.io.yaml.YamlMetaFormat.toMeta","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-meta-format/to-meta.html","searchKeys":["toMeta","open override fun toMeta(): Meta","space.kscience.dataforge.io.yaml.YamlMetaFormat.toMeta"]},{"name":"open override fun writeEnvelope(output: Output, envelope: Envelope, metaFormatFactory: MetaFormatFactory, formatMeta: Meta)","description":"space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.Companion.writeEnvelope","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-front-matter-envelope-format/-companion/write-envelope.html","searchKeys":["writeEnvelope","open override fun writeEnvelope(output: Output, envelope: Envelope, metaFormatFactory: MetaFormatFactory, formatMeta: Meta)","space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.Companion.writeEnvelope"]},{"name":"open override fun writeEnvelope(output: Output, envelope: Envelope, metaFormatFactory: MetaFormatFactory, formatMeta: Meta)","description":"space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.writeEnvelope","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-front-matter-envelope-format/write-envelope.html","searchKeys":["writeEnvelope","open override fun writeEnvelope(output: Output, envelope: Envelope, metaFormatFactory: MetaFormatFactory, formatMeta: Meta)","space.kscience.dataforge.io.yaml.FrontMatterEnvelopeFormat.writeEnvelope"]},{"name":"open override fun writeMeta(output: Output, meta: Meta, descriptor: MetaDescriptor?)","description":"space.kscience.dataforge.io.yaml.YamlMetaFormat.Companion.writeMeta","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-meta-format/-companion/write-meta.html","searchKeys":["writeMeta","open override fun writeMeta(output: Output, meta: Meta, descriptor: MetaDescriptor?)","space.kscience.dataforge.io.yaml.YamlMetaFormat.Companion.writeMeta"]},{"name":"open override fun writeMeta(output: Output, meta: Meta, descriptor: MetaDescriptor?)","description":"space.kscience.dataforge.io.yaml.YamlMetaFormat.writeMeta","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-meta-format/write-meta.html","searchKeys":["writeMeta","open override fun writeMeta(output: Output, meta: Meta, descriptor: MetaDescriptor?)","space.kscience.dataforge.io.yaml.YamlMetaFormat.writeMeta"]},{"name":"open override val key: Short = 0x594d","description":"space.kscience.dataforge.io.yaml.YamlMetaFormat.Companion.key","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-meta-format/-companion/key.html","searchKeys":["key","open override val key: Short = 0x594d","space.kscience.dataforge.io.yaml.YamlMetaFormat.Companion.key"]},{"name":"open override val shortName: String","description":"space.kscience.dataforge.io.yaml.YamlMetaFormat.Companion.shortName","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-meta-format/-companion/short-name.html","searchKeys":["shortName","open override val shortName: String","space.kscience.dataforge.io.yaml.YamlMetaFormat.Companion.shortName"]},{"name":"open override val tag: PluginTag","description":"space.kscience.dataforge.io.yaml.YamlPlugin.Companion.tag","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-plugin/-companion/tag.html","searchKeys":["tag","open override val tag: PluginTag","space.kscience.dataforge.io.yaml.YamlPlugin.Companion.tag"]},{"name":"open override val tag: PluginTag","description":"space.kscience.dataforge.io.yaml.YamlPlugin.tag","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-plugin/tag.html","searchKeys":["tag","open override val tag: PluginTag","space.kscience.dataforge.io.yaml.YamlPlugin.tag"]},{"name":"open override val type: KClass<out YamlPlugin>","description":"space.kscience.dataforge.io.yaml.YamlPlugin.Companion.type","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-plugin/-companion/type.html","searchKeys":["type","open override val type: KClass<out YamlPlugin>","space.kscience.dataforge.io.yaml.YamlPlugin.Companion.type"]},{"name":"val io: IOPlugin","description":"space.kscience.dataforge.io.yaml.YamlPlugin.io","location":"dataforge-io/dataforge-io-yaml/space.kscience.dataforge.io.yaml/-yaml-plugin/io.html","searchKeys":["io","val io: IOPlugin","space.kscience.dataforge.io.yaml.YamlPlugin.io"]},{"name":"abstract class AbstractPlugin(meta: Meta) : Plugin","description":"space.kscience.dataforge.context.AbstractPlugin","location":"dataforge-context/space.kscience.dataforge.context/-abstract-plugin/index.html","searchKeys":["AbstractPlugin","abstract class AbstractPlugin(meta: Meta) : Plugin","space.kscience.dataforge.context.AbstractPlugin"]},{"name":"abstract fun attach(context: Context)","description":"space.kscience.dataforge.context.Plugin.attach","location":"dataforge-context/space.kscience.dataforge.context/-plugin/attach.html","searchKeys":["attach","abstract fun attach(context: Context)","space.kscience.dataforge.context.Plugin.attach"]},{"name":"abstract fun dependsOn(): Map<PluginFactory<*>, Meta>","description":"space.kscience.dataforge.context.Plugin.dependsOn","location":"dataforge-context/space.kscience.dataforge.context/-plugin/depends-on.html","searchKeys":["dependsOn","abstract fun dependsOn(): Map<PluginFactory<*>, Meta>","space.kscience.dataforge.context.Plugin.dependsOn"]},{"name":"abstract fun detach()","description":"space.kscience.dataforge.context.Plugin.detach","location":"dataforge-context/space.kscience.dataforge.context/-plugin/detach.html","searchKeys":["detach","abstract fun detach()","space.kscience.dataforge.context.Plugin.detach"]},{"name":"abstract fun log(tag: String, body: () -> String)","description":"space.kscience.dataforge.context.Logger.log","location":"dataforge-context/space.kscience.dataforge.context/-logger/log.html","searchKeys":["log","abstract fun log(tag: String, body: () -> String)","space.kscience.dataforge.context.Logger.log"]},{"name":"abstract fun logger(name: Name): Logger","description":"space.kscience.dataforge.context.LogManager.logger","location":"dataforge-context/space.kscience.dataforge.context/-log-manager/logger.html","searchKeys":["logger","abstract fun logger(name: Name): Logger","space.kscience.dataforge.context.LogManager.logger"]},{"name":"abstract fun onChange(owner: Any? = null, callback: (T) -> Unit)","description":"space.kscience.dataforge.properties.Property.onChange","location":"dataforge-context/space.kscience.dataforge.properties/-property/on-change.html","searchKeys":["onChange","abstract fun onChange(owner: Any? = null, callback: (T) -> Unit)","space.kscience.dataforge.properties.Property.onChange"]},{"name":"abstract fun removeChangeListener(owner: Any? = null)","description":"space.kscience.dataforge.properties.Property.removeChangeListener","location":"dataforge-context/space.kscience.dataforge.properties/-property/remove-change-listener.html","searchKeys":["removeChangeListener","abstract fun removeChangeListener(owner: Any? = null)","space.kscience.dataforge.properties.Property.removeChangeListener"]},{"name":"abstract operator fun invoke(meta: Meta = Meta.EMPTY, context: Context = Global): T","description":"space.kscience.dataforge.context.Factory.invoke","location":"dataforge-context/space.kscience.dataforge.context/-factory/invoke.html","searchKeys":["invoke","abstract operator fun invoke(meta: Meta = Meta.EMPTY, context: Context = Global): T","space.kscience.dataforge.context.Factory.invoke"]},{"name":"abstract val context: Context","description":"space.kscience.dataforge.context.ContextAware.context","location":"dataforge-context/space.kscience.dataforge.context/-context-aware/context.html","searchKeys":["context","abstract val context: Context","space.kscience.dataforge.context.ContextAware.context"]},{"name":"abstract val defaultLogger: Logger","description":"space.kscience.dataforge.context.LogManager.defaultLogger","location":"dataforge-context/space.kscience.dataforge.context/-log-manager/default-logger.html","searchKeys":["defaultLogger","abstract val defaultLogger: Logger","space.kscience.dataforge.context.LogManager.defaultLogger"]},{"name":"abstract val meta: Meta","description":"space.kscience.dataforge.context.Plugin.meta","location":"dataforge-context/space.kscience.dataforge.context/-plugin/meta.html","searchKeys":["meta","abstract val meta: Meta","space.kscience.dataforge.context.Plugin.meta"]},{"name":"abstract val tag: PluginTag","description":"space.kscience.dataforge.context.Plugin.tag","location":"dataforge-context/space.kscience.dataforge.context/-plugin/tag.html","searchKeys":["tag","abstract val tag: PluginTag","space.kscience.dataforge.context.Plugin.tag"]},{"name":"abstract val tag: PluginTag","description":"space.kscience.dataforge.context.PluginFactory.tag","location":"dataforge-context/space.kscience.dataforge.context/-plugin-factory/tag.html","searchKeys":["tag","abstract val tag: PluginTag","space.kscience.dataforge.context.PluginFactory.tag"]},{"name":"abstract val type: KClass<out T>","description":"space.kscience.dataforge.context.PluginFactory.type","location":"dataforge-context/space.kscience.dataforge.context/-plugin-factory/type.html","searchKeys":["type","abstract val type: KClass<out T>","space.kscience.dataforge.context.PluginFactory.type"]},{"name":"abstract var value: T","description":"space.kscience.dataforge.properties.Property.value","location":"dataforge-context/space.kscience.dataforge.properties/-property/value.html","searchKeys":["value","abstract var value: T","space.kscience.dataforge.properties.Property.value"]},{"name":"class ClassLoaderPlugin(classLoader: ClassLoader) : AbstractPlugin","description":"space.kscience.dataforge.context.ClassLoaderPlugin","location":"dataforge-context/space.kscience.dataforge.context/-class-loader-plugin/index.html","searchKeys":["ClassLoaderPlugin","class ClassLoaderPlugin(classLoader: ClassLoader) : AbstractPlugin","space.kscience.dataforge.context.ClassLoaderPlugin"]},{"name":"class ConsoleLogManager : AbstractPlugin, LogManager","description":"space.kscience.dataforge.context.ConsoleLogManager","location":"dataforge-context/space.kscience.dataforge.context/-console-log-manager/index.html","searchKeys":["ConsoleLogManager","class ConsoleLogManager : AbstractPlugin, LogManager","space.kscience.dataforge.context.ConsoleLogManager"]},{"name":"class ContextBuilder","description":"space.kscience.dataforge.context.ContextBuilder","location":"dataforge-context/space.kscience.dataforge.context/-context-builder/index.html","searchKeys":["ContextBuilder","class ContextBuilder","space.kscience.dataforge.context.ContextBuilder"]},{"name":"class DefaultLogManager : AbstractPlugin, LogManager","description":"space.kscience.dataforge.context.DefaultLogManager","location":"dataforge-context/space.kscience.dataforge.context/-default-log-manager/index.html","searchKeys":["DefaultLogManager","class DefaultLogManager : AbstractPlugin, LogManager","space.kscience.dataforge.context.DefaultLogManager"]},{"name":"class MetaProperty<T : Any>(meta: ObservableMutableMeta, name: Name, converter: MetaConverter<T>) : Property<T?> ","description":"space.kscience.dataforge.properties.MetaProperty","location":"dataforge-context/space.kscience.dataforge.properties/-meta-property/index.html","searchKeys":["MetaProperty","class MetaProperty<T : Any>(meta: ObservableMutableMeta, name: Name, converter: MetaConverter<T>) : Property<T?> ","space.kscience.dataforge.properties.MetaProperty"]},{"name":"class PluginManager : ContextAware, Iterable<Plugin> ","description":"space.kscience.dataforge.context.PluginManager","location":"dataforge-context/space.kscience.dataforge.context/-plugin-manager/index.html","searchKeys":["PluginManager","class PluginManager : ContextAware, Iterable<Plugin> ","space.kscience.dataforge.context.PluginManager"]},{"name":"class SlfLogManager : AbstractPlugin, LogManager","description":"space.kscience.dataforge.context.SlfLogManager","location":"dataforge-context/space.kscience.dataforge.context/-slf-log-manager/index.html","searchKeys":["SlfLogManager","class SlfLogManager : AbstractPlugin, LogManager","space.kscience.dataforge.context.SlfLogManager"]},{"name":"const val DATAFORGE_GROUP: String","description":"space.kscience.dataforge.context.PluginTag.Companion.DATAFORGE_GROUP","location":"dataforge-context/space.kscience.dataforge.context/-plugin-tag/-companion/-d-a-t-a-f-o-r-g-e_-g-r-o-u-p.html","searchKeys":["DATAFORGE_GROUP","const val DATAFORGE_GROUP: String","space.kscience.dataforge.context.PluginTag.Companion.DATAFORGE_GROUP"]},{"name":"const val DEBUG: String","description":"space.kscience.dataforge.context.LogManager.Companion.DEBUG","location":"dataforge-context/space.kscience.dataforge.context/-log-manager/-companion/-d-e-b-u-g.html","searchKeys":["DEBUG","const val DEBUG: String","space.kscience.dataforge.context.LogManager.Companion.DEBUG"]},{"name":"const val ERROR: String","description":"space.kscience.dataforge.context.LogManager.Companion.ERROR","location":"dataforge-context/space.kscience.dataforge.context/-log-manager/-companion/-e-r-r-o-r.html","searchKeys":["ERROR","const val ERROR: String","space.kscience.dataforge.context.LogManager.Companion.ERROR"]},{"name":"const val INFO: String","description":"space.kscience.dataforge.context.LogManager.Companion.INFO","location":"dataforge-context/space.kscience.dataforge.context/-log-manager/-companion/-i-n-f-o.html","searchKeys":["INFO","const val INFO: String","space.kscience.dataforge.context.LogManager.Companion.INFO"]},{"name":"const val PATH_SEGMENT_SEPARATOR: String","description":"space.kscience.dataforge.provider.Path.Companion.PATH_SEGMENT_SEPARATOR","location":"dataforge-context/space.kscience.dataforge.provider/-path/-companion/-p-a-t-h_-s-e-g-m-e-n-t_-s-e-p-a-r-a-t-o-r.html","searchKeys":["PATH_SEGMENT_SEPARATOR","const val PATH_SEGMENT_SEPARATOR: String","space.kscience.dataforge.provider.Path.Companion.PATH_SEGMENT_SEPARATOR"]},{"name":"const val PROPERTY_TARGET: String","description":"space.kscience.dataforge.context.Context.Companion.PROPERTY_TARGET","location":"dataforge-context/space.kscience.dataforge.context/-context/-companion/-p-r-o-p-e-r-t-y_-t-a-r-g-e-t.html","searchKeys":["PROPERTY_TARGET","const val PROPERTY_TARGET: String","space.kscience.dataforge.context.Context.Companion.PROPERTY_TARGET"]},{"name":"const val TARGET: String","description":"space.kscience.dataforge.context.Plugin.Companion.TARGET","location":"dataforge-context/space.kscience.dataforge.context/-plugin/-companion/-t-a-r-g-e-t.html","searchKeys":["TARGET","const val TARGET: String","space.kscience.dataforge.context.Plugin.Companion.TARGET"]},{"name":"const val TARGET_SEPARATOR: String","description":"space.kscience.dataforge.provider.PathToken.Companion.TARGET_SEPARATOR","location":"dataforge-context/space.kscience.dataforge.provider/-path-token/-companion/-t-a-r-g-e-t_-s-e-p-a-r-a-t-o-r.html","searchKeys":["TARGET_SEPARATOR","const val TARGET_SEPARATOR: String","space.kscience.dataforge.provider.PathToken.Companion.TARGET_SEPARATOR"]},{"name":"const val TRACE: String","description":"space.kscience.dataforge.context.LogManager.Companion.TRACE","location":"dataforge-context/space.kscience.dataforge.context/-log-manager/-companion/-t-r-a-c-e.html","searchKeys":["TRACE","const val TRACE: String","space.kscience.dataforge.context.LogManager.Companion.TRACE"]},{"name":"const val TYPE: String","description":"space.kscience.dataforge.context.PluginFactory.Companion.TYPE","location":"dataforge-context/space.kscience.dataforge.context/-plugin-factory/-companion/-t-y-p-e.html","searchKeys":["TYPE","const val TYPE: String","space.kscience.dataforge.context.PluginFactory.Companion.TYPE"]},{"name":"const val WARNING: String","description":"space.kscience.dataforge.context.LogManager.Companion.WARNING","location":"dataforge-context/space.kscience.dataforge.context/-log-manager/-companion/-w-a-r-n-i-n-g.html","searchKeys":["WARNING","const val WARNING: String","space.kscience.dataforge.context.LogManager.Companion.WARNING"]},{"name":"data class PathToken(name: Name, target: String?)","description":"space.kscience.dataforge.provider.PathToken","location":"dataforge-context/space.kscience.dataforge.provider/-path-token/index.html","searchKeys":["PathToken","data class PathToken(name: Name, target: String?)","space.kscience.dataforge.provider.PathToken"]},{"name":"data class PluginTag(name: String, group: String, version: String) : MetaRepr","description":"space.kscience.dataforge.context.PluginTag","location":"dataforge-context/space.kscience.dataforge.context/-plugin-tag/index.html","searchKeys":["PluginTag","data class PluginTag(name: String, group: String, version: String) : MetaRepr","space.kscience.dataforge.context.PluginTag"]},{"name":"fun <S : Scheme, T : Any> S.property(property: KMutableProperty1<S, T?>): Property<T?>","description":"space.kscience.dataforge.properties.property","location":"dataforge-context/space.kscience.dataforge.properties/property.html","searchKeys":["property","fun <S : Scheme, T : Any> S.property(property: KMutableProperty1<S, T?>): Property<T?>","space.kscience.dataforge.properties.property"]},{"name":"fun <T : Any> Context.gather(target: String, type: KClass<out T>, inherit: Boolean = true): Map<Name, T>","description":"space.kscience.dataforge.context.gather","location":"dataforge-context/space.kscience.dataforge.context/gather.html","searchKeys":["gather","fun <T : Any> Context.gather(target: String, type: KClass<out T>, inherit: Boolean = true): Map<Name, T>","space.kscience.dataforge.context.gather"]},{"name":"fun <T : Any> Context.gatherInSequence(target: String, type: KClass<out T>, inherit: Boolean = true): Sequence<Map.Entry<Name, T>>","description":"space.kscience.dataforge.context.gatherInSequence","location":"dataforge-context/space.kscience.dataforge.context/gather-in-sequence.html","searchKeys":["gatherInSequence","fun <T : Any> Context.gatherInSequence(target: String, type: KClass<out T>, inherit: Boolean = true): Sequence<Map.Entry<Name, T>>","space.kscience.dataforge.context.gatherInSequence"]},{"name":"fun <T : Any> Context.resolve(target: String, name: Name, type: KClass<out T>): T?","description":"space.kscience.dataforge.context.resolve","location":"dataforge-context/space.kscience.dataforge.context/resolve.html","searchKeys":["resolve","fun <T : Any> Context.resolve(target: String, name: Name, type: KClass<out T>): T?","space.kscience.dataforge.context.resolve"]},{"name":"fun <T : Any> MetaProperty(meta: ObservableMutableMeta, name: Name, converter: MetaConverter<T>)","description":"space.kscience.dataforge.properties.MetaProperty.MetaProperty","location":"dataforge-context/space.kscience.dataforge.properties/-meta-property/-meta-property.html","searchKeys":["MetaProperty","fun <T : Any> MetaProperty(meta: ObservableMutableMeta, name: Name, converter: MetaConverter<T>)","space.kscience.dataforge.properties.MetaProperty.MetaProperty"]},{"name":"fun <T : Any> Provider.top(target: String, type: KClass<out T>): Map<Name, T>","description":"space.kscience.dataforge.provider.top","location":"dataforge-context/space.kscience.dataforge.provider/top.html","searchKeys":["top","fun <T : Any> Provider.top(target: String, type: KClass<out T>): Map<Name, T>","space.kscience.dataforge.provider.top"]},{"name":"fun <T : Any> services(type: KClass<T>): Sequence<T>","description":"space.kscience.dataforge.context.ClassLoaderPlugin.services","location":"dataforge-context/space.kscience.dataforge.context/-class-loader-plugin/services.html","searchKeys":["services","fun <T : Any> services(type: KClass<T>): Sequence<T>","space.kscience.dataforge.context.ClassLoaderPlugin.services"]},{"name":"fun <T : Named> Collection<T>.toMap(): Map<Name, T>","description":"space.kscience.dataforge.context.toMap","location":"dataforge-context/space.kscience.dataforge.context/to-map.html","searchKeys":["toMap","fun <T : Named> Collection<T>.toMap(): Map<Name, T>","space.kscience.dataforge.context.toMap"]},{"name":"fun <T> Property<T>.bind(other: Property<T>)","description":"space.kscience.dataforge.properties.bind","location":"dataforge-context/space.kscience.dataforge.properties/bind.html","searchKeys":["bind","fun <T> Property<T>.bind(other: Property<T>)","space.kscience.dataforge.properties.bind"]},{"name":"fun <T> Property<T>.mirror(source: Property<T>)","description":"space.kscience.dataforge.properties.mirror","location":"dataforge-context/space.kscience.dataforge.properties/mirror.html","searchKeys":["mirror","fun <T> Property<T>.mirror(source: Property<T>)","space.kscience.dataforge.properties.mirror"]},{"name":"fun <T> Property<T>.toFlow(): StateFlow<T>","description":"space.kscience.dataforge.properties.toFlow","location":"dataforge-context/space.kscience.dataforge.properties/to-flow.html","searchKeys":["toFlow","fun <T> Property<T>.toFlow(): StateFlow<T>","space.kscience.dataforge.properties.toFlow"]},{"name":"fun AbstractPlugin(meta: Meta = Meta.EMPTY)","description":"space.kscience.dataforge.context.AbstractPlugin.AbstractPlugin","location":"dataforge-context/space.kscience.dataforge.context/-abstract-plugin/-abstract-plugin.html","searchKeys":["AbstractPlugin","fun AbstractPlugin(meta: Meta = Meta.EMPTY)","space.kscience.dataforge.context.AbstractPlugin.AbstractPlugin"]},{"name":"fun ClassLoaderPlugin(classLoader: ClassLoader)","description":"space.kscience.dataforge.context.ClassLoaderPlugin.ClassLoaderPlugin","location":"dataforge-context/space.kscience.dataforge.context/-class-loader-plugin/-class-loader-plugin.html","searchKeys":["ClassLoaderPlugin","fun ClassLoaderPlugin(classLoader: ClassLoader)","space.kscience.dataforge.context.ClassLoaderPlugin.ClassLoaderPlugin"]},{"name":"fun ConsoleLogManager()","description":"space.kscience.dataforge.context.ConsoleLogManager.ConsoleLogManager","location":"dataforge-context/space.kscience.dataforge.context/-console-log-manager/-console-log-manager.html","searchKeys":["ConsoleLogManager","fun ConsoleLogManager()","space.kscience.dataforge.context.ConsoleLogManager.ConsoleLogManager"]},{"name":"fun Context(name: String? = null, block: ContextBuilder.() -> Unit = {}): Context","description":"space.kscience.dataforge.context.Context","location":"dataforge-context/space.kscience.dataforge.context/-context.html","searchKeys":["Context","fun Context(name: String? = null, block: ContextBuilder.() -> Unit = {}): Context","space.kscience.dataforge.context.Context"]},{"name":"fun Context.modify(block: ContextBuilder.() -> Unit): Context","description":"space.kscience.dataforge.context.modify","location":"dataforge-context/space.kscience.dataforge.context/modify.html","searchKeys":["modify","fun Context.modify(block: ContextBuilder.() -> Unit): Context","space.kscience.dataforge.context.modify"]},{"name":"fun DefaultLogManager()","description":"space.kscience.dataforge.context.DefaultLogManager.DefaultLogManager","location":"dataforge-context/space.kscience.dataforge.context/-default-log-manager/-default-log-manager.html","searchKeys":["DefaultLogManager","fun DefaultLogManager()","space.kscience.dataforge.context.DefaultLogManager.DefaultLogManager"]},{"name":"fun HTMLInputElement.bindChecked(property: Property<Boolean>)","description":"space.kscience.dataforge.properties.bindChecked","location":"dataforge-context/space.kscience.dataforge.properties/bind-checked.html","searchKeys":["bindChecked","fun HTMLInputElement.bindChecked(property: Property<Boolean>)","space.kscience.dataforge.properties.bindChecked"]},{"name":"fun HTMLInputElement.bindValue(property: Property<String>)","description":"space.kscience.dataforge.properties.bindValue","location":"dataforge-context/space.kscience.dataforge.properties/bind-value.html","searchKeys":["bindValue","fun HTMLInputElement.bindValue(property: Property<String>)","space.kscience.dataforge.properties.bindValue"]},{"name":"fun Logger.debug(body: () -> String)","description":"space.kscience.dataforge.context.debug","location":"dataforge-context/space.kscience.dataforge.context/debug.html","searchKeys":["debug","fun Logger.debug(body: () -> String)","space.kscience.dataforge.context.debug"]},{"name":"fun Logger.error(body: () -> String)","description":"space.kscience.dataforge.context.error","location":"dataforge-context/space.kscience.dataforge.context/error.html","searchKeys":["error","fun Logger.error(body: () -> String)","space.kscience.dataforge.context.error"]},{"name":"fun Logger.error(throwable: Throwable?, body: () -> String)","description":"space.kscience.dataforge.context.error","location":"dataforge-context/space.kscience.dataforge.context/error.html","searchKeys":["error","fun Logger.error(throwable: Throwable?, body: () -> String)","space.kscience.dataforge.context.error"]},{"name":"fun Logger.info(body: () -> String)","description":"space.kscience.dataforge.context.info","location":"dataforge-context/space.kscience.dataforge.context/info.html","searchKeys":["info","fun Logger.info(body: () -> String)","space.kscience.dataforge.context.info"]},{"name":"fun Logger.trace(body: () -> String)","description":"space.kscience.dataforge.context.trace","location":"dataforge-context/space.kscience.dataforge.context/trace.html","searchKeys":["trace","fun Logger.trace(body: () -> String)","space.kscience.dataforge.context.trace"]},{"name":"fun Logger.warn(body: () -> String)","description":"space.kscience.dataforge.context.warn","location":"dataforge-context/space.kscience.dataforge.context/warn.html","searchKeys":["warn","fun Logger.warn(body: () -> String)","space.kscience.dataforge.context.warn"]},{"name":"fun Name.asPath(target: String? = null): Path","description":"space.kscience.dataforge.provider.asPath","location":"dataforge-context/space.kscience.dataforge.provider/as-path.html","searchKeys":["asPath","fun Name.asPath(target: String? = null): Path","space.kscience.dataforge.provider.asPath"]},{"name":"fun Path(tokens: List<PathToken>)","description":"space.kscience.dataforge.provider.Path.Path","location":"dataforge-context/space.kscience.dataforge.provider/-path/-path.html","searchKeys":["Path","fun Path(tokens: List<PathToken>)","space.kscience.dataforge.provider.Path.Path"]},{"name":"fun Path(vararg names: Name): Path","description":"space.kscience.dataforge.provider.Path","location":"dataforge-context/space.kscience.dataforge.provider/-path.html","searchKeys":["Path","fun Path(vararg names: Name): Path","space.kscience.dataforge.provider.Path"]},{"name":"fun Path(vararg tokens: Pair<Name, String?>): Path","description":"space.kscience.dataforge.provider.Path","location":"dataforge-context/space.kscience.dataforge.provider/-path.html","searchKeys":["Path","fun Path(vararg tokens: Pair<Name, String?>): Path","space.kscience.dataforge.provider.Path"]},{"name":"fun PathToken(name: Name, target: String? = null)","description":"space.kscience.dataforge.provider.PathToken.PathToken","location":"dataforge-context/space.kscience.dataforge.provider/-path-token/-path-token.html","searchKeys":["PathToken","fun PathToken(name: Name, target: String? = null)","space.kscience.dataforge.provider.PathToken.PathToken"]},{"name":"fun PathToken.asPath(): Path","description":"space.kscience.dataforge.provider.asPath","location":"dataforge-context/space.kscience.dataforge.provider/as-path.html","searchKeys":["asPath","fun PathToken.asPath(): Path","space.kscience.dataforge.provider.asPath"]},{"name":"fun PluginTag(name: String, group: String = \"\", version: String = \"\")","description":"space.kscience.dataforge.context.PluginTag.PluginTag","location":"dataforge-context/space.kscience.dataforge.context/-plugin-tag/-plugin-tag.html","searchKeys":["PluginTag","fun PluginTag(name: String, group: String = \"\", version: String = \"\")","space.kscience.dataforge.context.PluginTag.PluginTag"]},{"name":"fun Provider.provide(path: Path, targetOverride: String? = null): Any?","description":"space.kscience.dataforge.provider.provide","location":"dataforge-context/space.kscience.dataforge.provider/provide.html","searchKeys":["provide","fun Provider.provide(path: Path, targetOverride: String? = null): Any?","space.kscience.dataforge.provider.provide"]},{"name":"fun SlfLogManager()","description":"space.kscience.dataforge.context.SlfLogManager.SlfLogManager","location":"dataforge-context/space.kscience.dataforge.context/-slf-log-manager/-slf-log-manager.html","searchKeys":["SlfLogManager","fun SlfLogManager()","space.kscience.dataforge.context.SlfLogManager.SlfLogManager"]},{"name":"fun build(): Context","description":"space.kscience.dataforge.context.ContextBuilder.build","location":"dataforge-context/space.kscience.dataforge.context/-context-builder/build.html","searchKeys":["build","fun build(): Context","space.kscience.dataforge.context.ContextBuilder.build"]},{"name":"fun buildContext(name: Name? = null, block: ContextBuilder.() -> Unit = {}): Context","description":"space.kscience.dataforge.context.Context.buildContext","location":"dataforge-context/space.kscience.dataforge.context/-context/build-context.html","searchKeys":["buildContext","fun buildContext(name: Name? = null, block: ContextBuilder.() -> Unit = {}): Context","space.kscience.dataforge.context.Context.buildContext"]},{"name":"fun content(target: String, inherit: Boolean): Map<Name, Any>","description":"space.kscience.dataforge.context.Context.content","location":"dataforge-context/space.kscience.dataforge.context/-context/content.html","searchKeys":["content","fun content(target: String, inherit: Boolean): Map<Name, Any>","space.kscience.dataforge.context.Context.content"]},{"name":"fun find(inherit: Boolean = true, predicate: (Plugin) -> Boolean): Plugin?","description":"space.kscience.dataforge.context.PluginManager.find","location":"dataforge-context/space.kscience.dataforge.context/-plugin-manager/find.html","searchKeys":["find","fun find(inherit: Boolean = true, predicate: (Plugin) -> Boolean): Plugin?","space.kscience.dataforge.context.PluginManager.find"]},{"name":"fun fromString(tag: String): PluginTag","description":"space.kscience.dataforge.context.PluginTag.Companion.fromString","location":"dataforge-context/space.kscience.dataforge.context/-plugin-tag/-companion/from-string.html","searchKeys":["fromString","fun fromString(tag: String): PluginTag","space.kscience.dataforge.context.PluginTag.Companion.fromString"]},{"name":"fun interface Logger","description":"space.kscience.dataforge.context.Logger","location":"dataforge-context/space.kscience.dataforge.context/-logger/index.html","searchKeys":["Logger","fun interface Logger","space.kscience.dataforge.context.Logger"]},{"name":"fun list(inherit: Boolean): Collection<Plugin>","description":"space.kscience.dataforge.context.PluginManager.list","location":"dataforge-context/space.kscience.dataforge.context/-plugin-manager/list.html","searchKeys":["list","fun list(inherit: Boolean): Collection<Plugin>","space.kscience.dataforge.context.PluginManager.list"]},{"name":"fun matches(otherTag: PluginTag): Boolean","description":"space.kscience.dataforge.context.PluginTag.matches","location":"dataforge-context/space.kscience.dataforge.context/-plugin-tag/matches.html","searchKeys":["matches","fun matches(otherTag: PluginTag): Boolean","space.kscience.dataforge.context.PluginTag.matches"]},{"name":"fun parse(path: String): Path","description":"space.kscience.dataforge.provider.Path.Companion.parse","location":"dataforge-context/space.kscience.dataforge.provider/-path/-companion/parse.html","searchKeys":["parse","fun parse(path: String): Path","space.kscience.dataforge.provider.Path.Companion.parse"]},{"name":"fun parse(token: String): PathToken","description":"space.kscience.dataforge.provider.PathToken.Companion.parse","location":"dataforge-context/space.kscience.dataforge.provider/-path-token/-companion/parse.html","searchKeys":["parse","fun parse(token: String): PathToken","space.kscience.dataforge.provider.PathToken.Companion.parse"]},{"name":"fun plugin(factory: PluginFactory<*>, meta: Meta)","description":"space.kscience.dataforge.context.ContextBuilder.plugin","location":"dataforge-context/space.kscience.dataforge.context/-context-builder/plugin.html","searchKeys":["plugin","fun plugin(factory: PluginFactory<*>, meta: Meta)","space.kscience.dataforge.context.ContextBuilder.plugin"]},{"name":"fun plugin(factory: PluginFactory<*>, mutableMeta: MutableMeta.() -> Unit = {})","description":"space.kscience.dataforge.context.ContextBuilder.plugin","location":"dataforge-context/space.kscience.dataforge.context/-context-builder/plugin.html","searchKeys":["plugin","fun plugin(factory: PluginFactory<*>, mutableMeta: MutableMeta.() -> Unit = {})","space.kscience.dataforge.context.ContextBuilder.plugin"]},{"name":"fun plugin(name: String, group: String = \"\", version: String = \"\", action: MutableMeta.() -> Unit = {})","description":"space.kscience.dataforge.context.ContextBuilder.plugin","location":"dataforge-context/space.kscience.dataforge.context/-context-builder/plugin.html","searchKeys":["plugin","fun plugin(name: String, group: String = \"\", version: String = \"\", action: MutableMeta.() -> Unit = {})","space.kscience.dataforge.context.ContextBuilder.plugin"]},{"name":"fun plugin(plugin: Plugin)","description":"space.kscience.dataforge.context.ContextBuilder.plugin","location":"dataforge-context/space.kscience.dataforge.context/-context-builder/plugin.html","searchKeys":["plugin","fun plugin(plugin: Plugin)","space.kscience.dataforge.context.ContextBuilder.plugin"]},{"name":"fun plugin(tag: PluginTag, mutableMeta: MutableMeta.() -> Unit = {})","description":"space.kscience.dataforge.context.ContextBuilder.plugin","location":"dataforge-context/space.kscience.dataforge.context/-context-builder/plugin.html","searchKeys":["plugin","fun plugin(tag: PluginTag, mutableMeta: MutableMeta.() -> Unit = {})","space.kscience.dataforge.context.ContextBuilder.plugin"]},{"name":"fun properties(action: MutableMeta.() -> Unit)","description":"space.kscience.dataforge.context.ContextBuilder.properties","location":"dataforge-context/space.kscience.dataforge.context/-context-builder/properties.html","searchKeys":["properties","fun properties(action: MutableMeta.() -> Unit)","space.kscience.dataforge.context.ContextBuilder.properties"]},{"name":"inline fun <T : Any> Context.gather(inherit: Boolean = true): Map<Name, T>","description":"space.kscience.dataforge.provider.gather","location":"dataforge-context/space.kscience.dataforge.provider/gather.html","searchKeys":["gather","inline fun <T : Any> Context.gather(inherit: Boolean = true): Map<Name, T>","space.kscience.dataforge.provider.gather"]},{"name":"inline fun <T : Any> Context.gather(target: String, inherit: Boolean = true): Map<Name, T>","description":"space.kscience.dataforge.context.gather","location":"dataforge-context/space.kscience.dataforge.context/gather.html","searchKeys":["gather","inline fun <T : Any> Context.gather(target: String, inherit: Boolean = true): Map<Name, T>","space.kscience.dataforge.context.gather"]},{"name":"inline fun <T : Any> Context.gatherInSequence(target: String, inherit: Boolean = true): Sequence<Map.Entry<Name, T>>","description":"space.kscience.dataforge.context.gatherInSequence","location":"dataforge-context/space.kscience.dataforge.context/gather-in-sequence.html","searchKeys":["gatherInSequence","inline fun <T : Any> Context.gatherInSequence(target: String, inherit: Boolean = true): Sequence<Map.Entry<Name, T>>","space.kscience.dataforge.context.gatherInSequence"]},{"name":"inline fun <T : Any> Context.resolve(target: String, name: Name): T?","description":"space.kscience.dataforge.context.resolve","location":"dataforge-context/space.kscience.dataforge.context/resolve.html","searchKeys":["resolve","inline fun <T : Any> Context.resolve(target: String, name: Name): T?","space.kscience.dataforge.context.resolve"]},{"name":"inline fun <T : Any> Context.services(): Sequence<T>","description":"space.kscience.dataforge.context.services","location":"dataforge-context/space.kscience.dataforge.context/services.html","searchKeys":["services","inline fun <T : Any> Context.services(): Sequence<T>","space.kscience.dataforge.context.services"]},{"name":"inline fun <T : Any> Provider.provide(path: String, targetOverride: String? = null): T?","description":"space.kscience.dataforge.provider.provide","location":"dataforge-context/space.kscience.dataforge.provider/provide.html","searchKeys":["provide","inline fun <T : Any> Provider.provide(path: String, targetOverride: String? = null): T?","space.kscience.dataforge.provider.provide"]},{"name":"inline fun <T : Any> Provider.provideByType(name: String): T?","description":"space.kscience.dataforge.provider.provideByType","location":"dataforge-context/space.kscience.dataforge.provider/provide-by-type.html","searchKeys":["provideByType","inline fun <T : Any> Provider.provideByType(name: String): T?","space.kscience.dataforge.provider.provideByType"]},{"name":"inline fun <T : Any> Provider.top(): Map<Name, T>","description":"space.kscience.dataforge.provider.top","location":"dataforge-context/space.kscience.dataforge.provider/top.html","searchKeys":["top","inline fun <T : Any> Provider.top(): Map<Name, T>","space.kscience.dataforge.provider.top"]},{"name":"inline fun <T : Any> Provider.top(target: String): Map<Name, T>","description":"space.kscience.dataforge.provider.top","location":"dataforge-context/space.kscience.dataforge.provider/top.html","searchKeys":["top","inline fun <T : Any> Provider.top(target: String): Map<Name, T>","space.kscience.dataforge.provider.top"]},{"name":"inline fun <T : Plugin> Context.fetch(factory: PluginFactory<T>, meta: Meta = Meta.EMPTY): T","description":"space.kscience.dataforge.context.fetch","location":"dataforge-context/space.kscience.dataforge.context/fetch.html","searchKeys":["fetch","inline fun <T : Plugin> Context.fetch(factory: PluginFactory<T>, meta: Meta = Meta.EMPTY): T","space.kscience.dataforge.context.fetch"]},{"name":"inline operator fun <T : Any> get(tag: PluginTag? = null, recursive: Boolean = true): T?","description":"space.kscience.dataforge.context.PluginManager.get","location":"dataforge-context/space.kscience.dataforge.context/-plugin-manager/get.html","searchKeys":["get","inline operator fun <T : Any> get(tag: PluginTag? = null, recursive: Boolean = true): T?","space.kscience.dataforge.context.PluginManager.get"]},{"name":"inline operator fun <T : Plugin> get(factory: PluginFactory<T>, recursive: Boolean = true): T?","description":"space.kscience.dataforge.context.PluginManager.get","location":"dataforge-context/space.kscience.dataforge.context/-plugin-manager/get.html","searchKeys":["get","inline operator fun <T : Plugin> get(factory: PluginFactory<T>, recursive: Boolean = true): T?","space.kscience.dataforge.context.PluginManager.get"]},{"name":"interface ContextAware","description":"space.kscience.dataforge.context.ContextAware","location":"dataforge-context/space.kscience.dataforge.context/-context-aware/index.html","searchKeys":["ContextAware","interface ContextAware","space.kscience.dataforge.context.ContextAware"]},{"name":"interface Factory<out T : Any>","description":"space.kscience.dataforge.context.Factory","location":"dataforge-context/space.kscience.dataforge.context/-factory/index.html","searchKeys":["Factory","interface Factory<out T : Any>","space.kscience.dataforge.context.Factory"]},{"name":"interface LogManager : Plugin, Logger","description":"space.kscience.dataforge.context.LogManager","location":"dataforge-context/space.kscience.dataforge.context/-log-manager/index.html","searchKeys":["LogManager","interface LogManager : Plugin, Logger","space.kscience.dataforge.context.LogManager"]},{"name":"interface Plugin : Named, ContextAware, Provider, MetaRepr","description":"space.kscience.dataforge.context.Plugin","location":"dataforge-context/space.kscience.dataforge.context/-plugin/index.html","searchKeys":["Plugin","interface Plugin : Named, ContextAware, Provider, MetaRepr","space.kscience.dataforge.context.Plugin"]},{"name":"interface PluginFactory<T : Plugin> : Factory<T> ","description":"space.kscience.dataforge.context.PluginFactory","location":"dataforge-context/space.kscience.dataforge.context/-plugin-factory/index.html","searchKeys":["PluginFactory","interface PluginFactory<T : Plugin> : Factory<T> ","space.kscience.dataforge.context.PluginFactory"]},{"name":"interface Property<T>","description":"space.kscience.dataforge.properties.Property","location":"dataforge-context/space.kscience.dataforge.properties/-property/index.html","searchKeys":["Property","interface Property<T>","space.kscience.dataforge.properties.Property"]},{"name":"interface Provider","description":"space.kscience.dataforge.provider.Provider","location":"dataforge-context/space.kscience.dataforge.provider/-provider/index.html","searchKeys":["Provider","interface Provider","space.kscience.dataforge.provider.Provider"]},{"name":"object Companion","description":"space.kscience.dataforge.context.ClassLoaderPlugin.Companion","location":"dataforge-context/space.kscience.dataforge.context/-class-loader-plugin/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.context.ClassLoaderPlugin.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.context.Context.Companion","location":"dataforge-context/space.kscience.dataforge.context/-context/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.context.Context.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.context.LogManager.Companion","location":"dataforge-context/space.kscience.dataforge.context/-log-manager/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.context.LogManager.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.context.Plugin.Companion","location":"dataforge-context/space.kscience.dataforge.context/-plugin/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.context.Plugin.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.context.PluginFactory.Companion","location":"dataforge-context/space.kscience.dataforge.context/-plugin-factory/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.context.PluginFactory.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.context.PluginTag.Companion","location":"dataforge-context/space.kscience.dataforge.context/-plugin-tag/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.context.PluginTag.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.provider.Path.Companion","location":"dataforge-context/space.kscience.dataforge.provider/-path/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.provider.Path.Companion"]},{"name":"object Companion","description":"space.kscience.dataforge.provider.PathToken.Companion","location":"dataforge-context/space.kscience.dataforge.provider/-path-token/-companion/index.html","searchKeys":["Companion","object Companion","space.kscience.dataforge.provider.PathToken.Companion"]},{"name":"object Companion : PluginFactory<ConsoleLogManager> ","description":"space.kscience.dataforge.context.ConsoleLogManager.Companion","location":"dataforge-context/space.kscience.dataforge.context/-console-log-manager/-companion/index.html","searchKeys":["Companion","object Companion : PluginFactory<ConsoleLogManager> ","space.kscience.dataforge.context.ConsoleLogManager.Companion"]},{"name":"object Companion : PluginFactory<DefaultLogManager> ","description":"space.kscience.dataforge.context.DefaultLogManager.Companion","location":"dataforge-context/space.kscience.dataforge.context/-default-log-manager/-companion/index.html","searchKeys":["Companion","object Companion : PluginFactory<DefaultLogManager> ","space.kscience.dataforge.context.DefaultLogManager.Companion"]},{"name":"object Companion : PluginFactory<SlfLogManager> ","description":"space.kscience.dataforge.context.SlfLogManager.Companion","location":"dataforge-context/space.kscience.dataforge.context/-slf-log-manager/-companion/index.html","searchKeys":["Companion","object Companion : PluginFactory<SlfLogManager> ","space.kscience.dataforge.context.SlfLogManager.Companion"]},{"name":"open class Context : Named, MetaRepr, Provider, CoroutineScope","description":"space.kscience.dataforge.context.Context","location":"dataforge-context/space.kscience.dataforge.context/-context/index.html","searchKeys":["Context","open class Context : Named, MetaRepr, Provider, CoroutineScope","space.kscience.dataforge.context.Context"]},{"name":"open fun close()","description":"space.kscience.dataforge.context.Context.close","location":"dataforge-context/space.kscience.dataforge.context/-context/close.html","searchKeys":["close","open fun close()","space.kscience.dataforge.context.Context.close"]},{"name":"open fun content(target: String): Map<Name, Any>","description":"space.kscience.dataforge.provider.Provider.content","location":"dataforge-context/space.kscience.dataforge.provider/-provider/content.html","searchKeys":["content","open fun content(target: String): Map<Name, Any>","space.kscience.dataforge.provider.Provider.content"]},{"name":"open fun log(name: Name, tag: String, body: () -> String)","description":"space.kscience.dataforge.context.LogManager.log","location":"dataforge-context/space.kscience.dataforge.context/-log-manager/log.html","searchKeys":["log","open fun log(name: Name, tag: String, body: () -> String)","space.kscience.dataforge.context.LogManager.log"]},{"name":"open operator override fun invoke(meta: <ERROR CLASS>, context: Context): ConsoleLogManager","description":"space.kscience.dataforge.context.ConsoleLogManager.Companion.invoke","location":"dataforge-context/space.kscience.dataforge.context/-console-log-manager/-companion/invoke.html","searchKeys":["invoke","open operator override fun invoke(meta: <ERROR CLASS>, context: Context): ConsoleLogManager","space.kscience.dataforge.context.ConsoleLogManager.Companion.invoke"]},{"name":"open operator override fun invoke(meta: Meta, context: Context): DefaultLogManager","description":"space.kscience.dataforge.context.DefaultLogManager.Companion.invoke","location":"dataforge-context/space.kscience.dataforge.context/-default-log-manager/-companion/invoke.html","searchKeys":["invoke","open operator override fun invoke(meta: Meta, context: Context): DefaultLogManager","space.kscience.dataforge.context.DefaultLogManager.Companion.invoke"]},{"name":"open operator override fun invoke(meta: Meta, context: Context): SlfLogManager","description":"space.kscience.dataforge.context.SlfLogManager.Companion.invoke","location":"dataforge-context/space.kscience.dataforge.context/-slf-log-manager/-companion/invoke.html","searchKeys":["invoke","open operator override fun invoke(meta: Meta, context: Context): SlfLogManager","space.kscience.dataforge.context.SlfLogManager.Companion.invoke"]},{"name":"open operator override fun iterator(): Iterator<PathToken>","description":"space.kscience.dataforge.provider.Path.iterator","location":"dataforge-context/space.kscience.dataforge.provider/-path/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<PathToken>","space.kscience.dataforge.provider.Path.iterator"]},{"name":"open operator override fun iterator(): Iterator<Plugin>","description":"space.kscience.dataforge.context.PluginManager.iterator","location":"dataforge-context/space.kscience.dataforge.context/-plugin-manager/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Plugin>","space.kscience.dataforge.context.PluginManager.iterator"]},{"name":"open override fun attach(context: Context)","description":"space.kscience.dataforge.context.AbstractPlugin.attach","location":"dataforge-context/space.kscience.dataforge.context/-abstract-plugin/attach.html","searchKeys":["attach","open override fun attach(context: Context)","space.kscience.dataforge.context.AbstractPlugin.attach"]},{"name":"open override fun content(target: String): Map<Name, Any>","description":"space.kscience.dataforge.context.Context.content","location":"dataforge-context/space.kscience.dataforge.context/-context/content.html","searchKeys":["content","open override fun content(target: String): Map<Name, Any>","space.kscience.dataforge.context.Context.content"]},{"name":"open override fun detach()","description":"space.kscience.dataforge.context.AbstractPlugin.detach","location":"dataforge-context/space.kscience.dataforge.context/-abstract-plugin/detach.html","searchKeys":["detach","open override fun detach()","space.kscience.dataforge.context.AbstractPlugin.detach"]},{"name":"open override fun log(tag: String, body: () -> String)","description":"space.kscience.dataforge.context.LogManager.log","location":"dataforge-context/space.kscience.dataforge.context/-log-manager/log.html","searchKeys":["log","open override fun log(tag: String, body: () -> String)","space.kscience.dataforge.context.LogManager.log"]},{"name":"open override fun logger(name: <ERROR CLASS>): Logger","description":"space.kscience.dataforge.context.ConsoleLogManager.logger","location":"dataforge-context/space.kscience.dataforge.context/-console-log-manager/logger.html","searchKeys":["logger","open override fun logger(name: <ERROR CLASS>): Logger","space.kscience.dataforge.context.ConsoleLogManager.logger"]},{"name":"open override fun logger(name: Name): Logger","description":"space.kscience.dataforge.context.DefaultLogManager.logger","location":"dataforge-context/space.kscience.dataforge.context/-default-log-manager/logger.html","searchKeys":["logger","open override fun logger(name: Name): Logger","space.kscience.dataforge.context.DefaultLogManager.logger"]},{"name":"open override fun logger(name: Name): Logger","description":"space.kscience.dataforge.context.SlfLogManager.logger","location":"dataforge-context/space.kscience.dataforge.context/-slf-log-manager/logger.html","searchKeys":["logger","open override fun logger(name: Name): Logger","space.kscience.dataforge.context.SlfLogManager.logger"]},{"name":"open override fun onChange(owner: Any?, callback: (T?) -> Unit)","description":"space.kscience.dataforge.properties.MetaProperty.onChange","location":"dataforge-context/space.kscience.dataforge.properties/-meta-property/on-change.html","searchKeys":["onChange","open override fun onChange(owner: Any?, callback: (T?) -> Unit)","space.kscience.dataforge.properties.MetaProperty.onChange"]},{"name":"open override fun removeChangeListener(owner: Any?)","description":"space.kscience.dataforge.properties.MetaProperty.removeChangeListener","location":"dataforge-context/space.kscience.dataforge.properties/-meta-property/remove-change-listener.html","searchKeys":["removeChangeListener","open override fun removeChangeListener(owner: Any?)","space.kscience.dataforge.properties.MetaProperty.removeChangeListener"]},{"name":"open override fun toMeta(): Meta","description":"space.kscience.dataforge.context.Context.toMeta","location":"dataforge-context/space.kscience.dataforge.context/-context/to-meta.html","searchKeys":["toMeta","open override fun toMeta(): Meta","space.kscience.dataforge.context.Context.toMeta"]},{"name":"open override fun toMeta(): Meta","description":"space.kscience.dataforge.context.Plugin.toMeta","location":"dataforge-context/space.kscience.dataforge.context/-plugin/to-meta.html","searchKeys":["toMeta","open override fun toMeta(): Meta","space.kscience.dataforge.context.Plugin.toMeta"]},{"name":"open override fun toMeta(): Meta","description":"space.kscience.dataforge.context.PluginTag.toMeta","location":"dataforge-context/space.kscience.dataforge.context/-plugin-tag/to-meta.html","searchKeys":["toMeta","open override fun toMeta(): Meta","space.kscience.dataforge.context.PluginTag.toMeta"]},{"name":"open override fun toString(): String","description":"space.kscience.dataforge.context.PluginTag.toString","location":"dataforge-context/space.kscience.dataforge.context/-plugin-tag/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.dataforge.context.PluginTag.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.dataforge.provider.Path.toString","location":"dataforge-context/space.kscience.dataforge.provider/-path/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.dataforge.provider.Path.toString"]},{"name":"open override fun toString(): String","description":"space.kscience.dataforge.provider.PathToken.toString","location":"dataforge-context/space.kscience.dataforge.provider/-path-token/to-string.html","searchKeys":["toString","open override fun toString(): String","space.kscience.dataforge.provider.PathToken.toString"]},{"name":"open override val context: Context","description":"space.kscience.dataforge.context.AbstractPlugin.context","location":"dataforge-context/space.kscience.dataforge.context/-abstract-plugin/context.html","searchKeys":["context","open override val context: Context","space.kscience.dataforge.context.AbstractPlugin.context"]},{"name":"open override val context: Context","description":"space.kscience.dataforge.context.PluginManager.context","location":"dataforge-context/space.kscience.dataforge.context/-plugin-manager/context.html","searchKeys":["context","open override val context: Context","space.kscience.dataforge.context.PluginManager.context"]},{"name":"open override val coroutineContext: CoroutineContext","description":"space.kscience.dataforge.context.Context.coroutineContext","location":"dataforge-context/space.kscience.dataforge.context/-context/coroutine-context.html","searchKeys":["coroutineContext","open override val coroutineContext: CoroutineContext","space.kscience.dataforge.context.Context.coroutineContext"]},{"name":"open override val defaultLogger: Logger","description":"space.kscience.dataforge.context.ConsoleLogManager.defaultLogger","location":"dataforge-context/space.kscience.dataforge.context/-console-log-manager/default-logger.html","searchKeys":["defaultLogger","open override val defaultLogger: Logger","space.kscience.dataforge.context.ConsoleLogManager.defaultLogger"]},{"name":"open override val defaultLogger: Logger","description":"space.kscience.dataforge.context.DefaultLogManager.defaultLogger","location":"dataforge-context/space.kscience.dataforge.context/-default-log-manager/default-logger.html","searchKeys":["defaultLogger","open override val defaultLogger: Logger","space.kscience.dataforge.context.DefaultLogManager.defaultLogger"]},{"name":"open override val defaultLogger: Logger","description":"space.kscience.dataforge.context.SlfLogManager.defaultLogger","location":"dataforge-context/space.kscience.dataforge.context/-slf-log-manager/default-logger.html","searchKeys":["defaultLogger","open override val defaultLogger: Logger","space.kscience.dataforge.context.SlfLogManager.defaultLogger"]},{"name":"open override val defaultTarget: String","description":"space.kscience.dataforge.context.Context.defaultTarget","location":"dataforge-context/space.kscience.dataforge.context/-context/default-target.html","searchKeys":["defaultTarget","open override val defaultTarget: String","space.kscience.dataforge.context.Context.defaultTarget"]},{"name":"open override val meta: Meta","description":"space.kscience.dataforge.context.AbstractPlugin.meta","location":"dataforge-context/space.kscience.dataforge.context/-abstract-plugin/meta.html","searchKeys":["meta","open override val meta: Meta","space.kscience.dataforge.context.AbstractPlugin.meta"]},{"name":"open override val name: Name","description":"space.kscience.dataforge.context.Plugin.name","location":"dataforge-context/space.kscience.dataforge.context/-plugin/name.html","searchKeys":["name","open override val name: Name","space.kscience.dataforge.context.Plugin.name"]},{"name":"open override val tag: PluginTag","description":"space.kscience.dataforge.context.ClassLoaderPlugin.tag","location":"dataforge-context/space.kscience.dataforge.context/-class-loader-plugin/tag.html","searchKeys":["tag","open override val tag: PluginTag","space.kscience.dataforge.context.ClassLoaderPlugin.tag"]},{"name":"open override val tag: PluginTag","description":"space.kscience.dataforge.context.ConsoleLogManager.Companion.tag","location":"dataforge-context/space.kscience.dataforge.context/-console-log-manager/-companion/tag.html","searchKeys":["tag","open override val tag: PluginTag","space.kscience.dataforge.context.ConsoleLogManager.Companion.tag"]},{"name":"open override val tag: PluginTag","description":"space.kscience.dataforge.context.ConsoleLogManager.tag","location":"dataforge-context/space.kscience.dataforge.context/-console-log-manager/tag.html","searchKeys":["tag","open override val tag: PluginTag","space.kscience.dataforge.context.ConsoleLogManager.tag"]},{"name":"open override val tag: PluginTag","description":"space.kscience.dataforge.context.DefaultLogManager.Companion.tag","location":"dataforge-context/space.kscience.dataforge.context/-default-log-manager/-companion/tag.html","searchKeys":["tag","open override val tag: PluginTag","space.kscience.dataforge.context.DefaultLogManager.Companion.tag"]},{"name":"open override val tag: PluginTag","description":"space.kscience.dataforge.context.DefaultLogManager.tag","location":"dataforge-context/space.kscience.dataforge.context/-default-log-manager/tag.html","searchKeys":["tag","open override val tag: PluginTag","space.kscience.dataforge.context.DefaultLogManager.tag"]},{"name":"open override val tag: PluginTag","description":"space.kscience.dataforge.context.SlfLogManager.Companion.tag","location":"dataforge-context/space.kscience.dataforge.context/-slf-log-manager/-companion/tag.html","searchKeys":["tag","open override val tag: PluginTag","space.kscience.dataforge.context.SlfLogManager.Companion.tag"]},{"name":"open override val tag: PluginTag","description":"space.kscience.dataforge.context.SlfLogManager.tag","location":"dataforge-context/space.kscience.dataforge.context/-slf-log-manager/tag.html","searchKeys":["tag","open override val tag: PluginTag","space.kscience.dataforge.context.SlfLogManager.tag"]},{"name":"open override val type: KClass<out ConsoleLogManager>","description":"space.kscience.dataforge.context.ConsoleLogManager.Companion.type","location":"dataforge-context/space.kscience.dataforge.context/-console-log-manager/-companion/type.html","searchKeys":["type","open override val type: KClass<out ConsoleLogManager>","space.kscience.dataforge.context.ConsoleLogManager.Companion.type"]},{"name":"open override val type: KClass<out DefaultLogManager>","description":"space.kscience.dataforge.context.DefaultLogManager.Companion.type","location":"dataforge-context/space.kscience.dataforge.context/-default-log-manager/-companion/type.html","searchKeys":["type","open override val type: KClass<out DefaultLogManager>","space.kscience.dataforge.context.DefaultLogManager.Companion.type"]},{"name":"open override val type: KClass<out SlfLogManager>","description":"space.kscience.dataforge.context.SlfLogManager.Companion.type","location":"dataforge-context/space.kscience.dataforge.context/-slf-log-manager/-companion/type.html","searchKeys":["type","open override val type: KClass<out SlfLogManager>","space.kscience.dataforge.context.SlfLogManager.Companion.type"]},{"name":"open override var value: T?","description":"space.kscience.dataforge.properties.MetaProperty.value","location":"dataforge-context/space.kscience.dataforge.properties/-meta-property/value.html","searchKeys":["value","open override var value: T?","space.kscience.dataforge.properties.MetaProperty.value"]},{"name":"open val defaultChainTarget: String","description":"space.kscience.dataforge.provider.Provider.defaultChainTarget","location":"dataforge-context/space.kscience.dataforge.provider/-provider/default-chain-target.html","searchKeys":["defaultChainTarget","open val defaultChainTarget: String","space.kscience.dataforge.provider.Provider.defaultChainTarget"]},{"name":"open val defaultTarget: String","description":"space.kscience.dataforge.provider.Provider.defaultTarget","location":"dataforge-context/space.kscience.dataforge.provider/-provider/default-target.html","searchKeys":["defaultTarget","open val defaultTarget: String","space.kscience.dataforge.provider.Provider.defaultTarget"]},{"name":"operator fun <T : Any> get(type: KClass<out T>, tag: PluginTag? = null, recursive: Boolean = true): T?","description":"space.kscience.dataforge.context.PluginManager.get","location":"dataforge-context/space.kscience.dataforge.context/-plugin-manager/get.html","searchKeys":["get","operator fun <T : Any> get(type: KClass<out T>, tag: PluginTag? = null, recursive: Boolean = true): T?","space.kscience.dataforge.context.PluginManager.get"]},{"name":"operator fun Path.plus(path: Path): Path","description":"space.kscience.dataforge.provider.plus","location":"dataforge-context/space.kscience.dataforge.provider/plus.html","searchKeys":["plus","operator fun Path.plus(path: Path): Path","space.kscience.dataforge.provider.plus"]},{"name":"operator fun get(tag: PluginTag, inherit: Boolean = true): Plugin?","description":"space.kscience.dataforge.context.PluginManager.get","location":"dataforge-context/space.kscience.dataforge.context/-plugin-manager/get.html","searchKeys":["get","operator fun get(tag: PluginTag, inherit: Boolean = true): Plugin?","space.kscience.dataforge.context.PluginManager.get"]},{"name":"override fun dependsOn(): Map<PluginFactory<*>, Meta>","description":"space.kscience.dataforge.context.AbstractPlugin.dependsOn","location":"dataforge-context/space.kscience.dataforge.context/-abstract-plugin/depends-on.html","searchKeys":["dependsOn","override fun dependsOn(): Map<PluginFactory<*>, Meta>","space.kscience.dataforge.context.AbstractPlugin.dependsOn"]},{"name":"override val name: Name","description":"space.kscience.dataforge.context.Context.name","location":"dataforge-context/space.kscience.dataforge.context/-context/name.html","searchKeys":["name","override val name: Name","space.kscience.dataforge.context.Context.name"]},{"name":"val <T> Sequence<Map.Entry<Name, T>>.values: Sequence<T>","description":"space.kscience.dataforge.context.values","location":"dataforge-context/space.kscience.dataforge.context/values.html","searchKeys":["values","val <T> Sequence<Map.Entry<Name, T>>.values: Sequence<T>","space.kscience.dataforge.context.values"]},{"name":"val Context.classLoaderPlugin: ClassLoaderPlugin","description":"space.kscience.dataforge.context.classLoaderPlugin","location":"dataforge-context/space.kscience.dataforge.context/class-loader-plugin.html","searchKeys":["classLoaderPlugin","val Context.classLoaderPlugin: ClassLoaderPlugin","space.kscience.dataforge.context.classLoaderPlugin"]},{"name":"val Context.logger: LogManager","description":"space.kscience.dataforge.context.logger","location":"dataforge-context/space.kscience.dataforge.context/logger.html","searchKeys":["logger","val Context.logger: LogManager","space.kscience.dataforge.context.logger"]},{"name":"val ContextAware.logger: Logger","description":"space.kscience.dataforge.context.logger","location":"dataforge-context/space.kscience.dataforge.context/logger.html","searchKeys":["logger","val ContextAware.logger: Logger","space.kscience.dataforge.context.logger"]},{"name":"val DEFAULT: ClassLoaderPlugin","description":"space.kscience.dataforge.context.ClassLoaderPlugin.Companion.DEFAULT","location":"dataforge-context/space.kscience.dataforge.context/-class-loader-plugin/-companion/-d-e-f-a-u-l-t.html","searchKeys":["DEFAULT","val DEFAULT: ClassLoaderPlugin","space.kscience.dataforge.context.ClassLoaderPlugin.Companion.DEFAULT"]},{"name":"val Global: Context","description":"space.kscience.dataforge.context.Global","location":"dataforge-context/space.kscience.dataforge.context/-global.html","searchKeys":["Global","val Global: Context","space.kscience.dataforge.context.Global"]},{"name":"val KClass<*>.dfType: String","description":"space.kscience.dataforge.provider.dfType","location":"dataforge-context/space.kscience.dataforge.provider/df-type.html","searchKeys":["dfType","val KClass<*>.dfType: String","space.kscience.dataforge.provider.dfType"]},{"name":"val Path.head: PathToken?","description":"space.kscience.dataforge.provider.head","location":"dataforge-context/space.kscience.dataforge.provider/head.html","searchKeys":["head","val Path.head: PathToken?","space.kscience.dataforge.provider.head"]},{"name":"val Path.length: Int","description":"space.kscience.dataforge.provider.length","location":"dataforge-context/space.kscience.dataforge.provider/length.html","searchKeys":["length","val Path.length: Int","space.kscience.dataforge.provider.length"]},{"name":"val Path.tail: Path?","description":"space.kscience.dataforge.provider.tail","location":"dataforge-context/space.kscience.dataforge.provider/tail.html","searchKeys":["tail","val Path.tail: Path?","space.kscience.dataforge.provider.tail"]},{"name":"val converter: MetaConverter<T>","description":"space.kscience.dataforge.properties.MetaProperty.converter","location":"dataforge-context/space.kscience.dataforge.properties/-meta-property/converter.html","searchKeys":["converter","val converter: MetaConverter<T>","space.kscience.dataforge.properties.MetaProperty.converter"]},{"name":"val group: String","description":"space.kscience.dataforge.context.PluginTag.group","location":"dataforge-context/space.kscience.dataforge.context/-plugin-tag/group.html","searchKeys":["group","val group: String","space.kscience.dataforge.context.PluginTag.group"]},{"name":"val meta: ObservableMutableMeta","description":"space.kscience.dataforge.properties.MetaProperty.meta","location":"dataforge-context/space.kscience.dataforge.properties/-meta-property/meta.html","searchKeys":["meta","val meta: ObservableMutableMeta","space.kscience.dataforge.properties.MetaProperty.meta"]},{"name":"val name: Name","description":"space.kscience.dataforge.properties.MetaProperty.name","location":"dataforge-context/space.kscience.dataforge.properties/-meta-property/name.html","searchKeys":["name","val name: Name","space.kscience.dataforge.properties.MetaProperty.name"]},{"name":"val name: Name","description":"space.kscience.dataforge.provider.PathToken.name","location":"dataforge-context/space.kscience.dataforge.provider/-path-token/name.html","searchKeys":["name","val name: Name","space.kscience.dataforge.provider.PathToken.name"]},{"name":"val name: Name? = null","description":"space.kscience.dataforge.context.ContextBuilder.name","location":"dataforge-context/space.kscience.dataforge.context/-context-builder/name.html","searchKeys":["name","val name: Name? = null","space.kscience.dataforge.context.ContextBuilder.name"]},{"name":"val name: String","description":"space.kscience.dataforge.context.PluginTag.name","location":"dataforge-context/space.kscience.dataforge.context/-plugin-tag/name.html","searchKeys":["name","val name: String","space.kscience.dataforge.context.PluginTag.name"]},{"name":"val parent: Context?","description":"space.kscience.dataforge.context.Context.parent","location":"dataforge-context/space.kscience.dataforge.context/-context/parent.html","searchKeys":["parent","val parent: Context?","space.kscience.dataforge.context.Context.parent"]},{"name":"val plugins: PluginManager","description":"space.kscience.dataforge.context.Context.plugins","location":"dataforge-context/space.kscience.dataforge.context/-context/plugins.html","searchKeys":["plugins","val plugins: PluginManager","space.kscience.dataforge.context.Context.plugins"]},{"name":"val properties: Laminate","description":"space.kscience.dataforge.context.Context.properties","location":"dataforge-context/space.kscience.dataforge.context/-context/properties.html","searchKeys":["properties","val properties: Laminate","space.kscience.dataforge.context.Context.properties"]},{"name":"val target: String? = null","description":"space.kscience.dataforge.provider.PathToken.target","location":"dataforge-context/space.kscience.dataforge.provider/-path-token/target.html","searchKeys":["target","val target: String? = null","space.kscience.dataforge.provider.PathToken.target"]},{"name":"val tokens: List<PathToken>","description":"space.kscience.dataforge.provider.Path.tokens","location":"dataforge-context/space.kscience.dataforge.provider/-path/tokens.html","searchKeys":["tokens","val tokens: List<PathToken>","space.kscience.dataforge.provider.Path.tokens"]},{"name":"val version: String","description":"space.kscience.dataforge.context.PluginTag.version","location":"dataforge-context/space.kscience.dataforge.context/-plugin-tag/version.html","searchKeys":["version","val version: String","space.kscience.dataforge.context.PluginTag.version"]},{"name":"value class Path(tokens: List<PathToken>) : Iterable<PathToken> ","description":"space.kscience.dataforge.provider.Path","location":"dataforge-context/space.kscience.dataforge.provider/-path/index.html","searchKeys":["Path","value class Path(tokens: List<PathToken>) : Iterable<PathToken> ","space.kscience.dataforge.provider.Path"]}]